{
    "sourceFile": "src/services/facility.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 54,
            "patches": [
                {
                    "date": 1754548765574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754549449878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754549456146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export c\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754549465153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754549470372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (formData) => {\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754551649215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, formData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754551654300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553053735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1754553060258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,15 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+add\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553071288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,15 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553077694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,15 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floor)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553084394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,15 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553091490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const response = await api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553102887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = await api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553118602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553125755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    const \r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553133381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    const response = await \r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553140630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553146852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553303222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553311246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}`, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553316502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n }\r\n \r\n export const addFloor = async (floorData) => {\r\n   try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}`, floorData);\r\n+    const pro = api.post(API_ENDPOINTS.FACILITY_NAME}, floorData);\r\n     const response = await toast.promise(pro, {\r\n       loading: \"Adding floor...\",\r\n       success: \"Floor added successfully!\",\r\n       error: \"Failed to add floor. Please try again.\",\r\n@@ -24,327 +24,5 @@\n   } catch (error) {\r\n     console.error(\"Error adding floor:\", error);\r\n     throw error;\r\n   }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    const response = await \r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    const \r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = await api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {\r\n-  try {\r\n-    const response = await api.post(`${API_ENDPOINTS.FACILITY_NAME}floors/`, floorData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floorData) => {}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async (floor)\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-addFloor = async\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-add\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, formData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (formData) => {\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export c\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553321732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FACILITY_NAME, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754553327537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554125913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554771557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554778238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const add = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554787391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (Data) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554794519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554801553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554807654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754554815791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754555367290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n }\r\n \r\n export const addRoom = async (roomData) => {\r\n   try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, floorData);\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n     const response = await toast.promise(pro, {\r\n       loading: \"Adding room...\",\r\n       success: \"Room added successfully!\",\r\n       error: \"Failed to add room. Please try again.\",\r\n@@ -39,374 +39,5 @@\n   } catch (error) {\r\n     console.error(\"Error adding floor:\", error);\r\n     throw error;\r\n   }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (Data) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const add = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FACILITY_NAME, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FACILITY_NAME}, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754555747315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,5 +39,6 @@\n   } catch (error) {\r\n     console.error(\"Error adding floor:\", error);\r\n     throw error;\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n"
                },
                {
                    "date": 1754555756674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1754555765489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754555771365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1754555777892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => { \n\\ No newline at end of file\n"
                },
                {
                    "date": 1754556269948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754556278744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557051833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n }\r\n \r\n export const deleteRoom = async (roomId) => {\r\n   try {\r\n-    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}`);\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n     const response = await toast.promise(pro, {\r\n       loading: \"Deleting room...\",\r\n       success: \"Room deleted successfully!\",\r\n       error: \"Failed to delete room. Please try again.\",\r\n@@ -69,343 +69,6 @@\n   } catch (error) {\r\n     console.error(\"Error deleting floor:\", error);\r\n     throw error;\r\n   }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n }\r\n \r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Room added successfully!\",\r\n-      error: \"Failed to add room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const deleteRoom = async (roomId) => {\r\n-  try {\r\n-    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Deleting room...\",\r\n-      success: \"Room deleted successfully!\",\r\n-      error: \"Failed to delete room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error deleting room:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const deleteFloor = async (floorId) => {\r\n-  try {\r\n-    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}`);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Deleting floor...\",\r\n-      success: \"Floor deleted successfully!\",\r\n-      error: \"Failed to delete floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error deleting floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Room added successfully!\",\r\n-      error: \"Failed to add room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const deleteRoom = async (roomId) => {\r\n-  try {\r\n-    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Deleting room...\",\r\n-      success: \"Room deleted successfully!\",\r\n-      error: \"Failed to delete room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error deleting room:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const deleteFloor = async (floorId) => { \n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Room added successfully!\",\r\n-      error: \"Failed to add room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const deleteRoom = async (roomId) => {\r\n-  try {\r\n-    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Deleting room...\",\r\n-      success: \"Room deleted successfully!\",\r\n-      error: \"Failed to delete room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error deleting room:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Room added successfully!\",\r\n-      error: \"Failed to add room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const deleteRoom = async (roomId) => {\r\n-  try {\r\n-    const pro = api.delete(`${API_ENDPOINTS.ROOM}/${roomId}`);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Deleting room...\",\r\n-      success: \"Room deleted successfully!\",\r\n-      error: \"Failed to delete room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error deleting room:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Room added successfully!\",\r\n-      error: \"Failed to add room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const \n-import toast from \"react-hot-toast\";\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const addFacility = async (facilityData) => {\r\n-  try {\r\n-    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n-    return response.data;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding facility:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addFloor = async (floorData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding floor...\",\r\n-      success: \"Floor added successfully!\",\r\n-      error: \"Failed to add floor. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\r\n-\r\n-export const addRoom = async (roomData) => {\r\n-  try {\r\n-    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n-    const response = await toast.promise(pro, {\r\n-      loading: \"Adding room...\",\r\n-      success: \"Room added successfully!\",\r\n-      error: \"Failed to add room. Please try again.\",\r\n-    });\r\n-    return response;\r\n-  } catch (error) {\r\n-    console.error(\"Error adding floor:\", error);\r\n-    throw error;\r\n-  }\r\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557058902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557063987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557076299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const response = await api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557093535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    \r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557099232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557105032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const addFacility = async (facilityData) => {\r\n+  try {\r\n+    const response = await api.post(API_ENDPOINTS.FACILITY_NAME, facilityData);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557961681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557969445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export con\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557982441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const get\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557987949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const getFacilities = async () => {\r\n+  try {\r\n+    \r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754557993078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const getFacilities = async () => {\r\n+  try {\r\n+    const response = await api.get(API_ENDPOINTS.FACILITY);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error fetching facilities:\", error);\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754558000250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const getFacilities = async () => {\r\n+  try {\r\n+    const response = await api.get(API_ENDPOINTS.FACILITY);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error fetching facilities:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754558006641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const getFacility = async () => {\r\n+  try {\r\n+    const response = await api.get(API_ENDPOINTS.FACILITY);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error fetching facilities:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754558113128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import toast from \"react-hot-toast\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const getFacilityInfo = async () => {\r\n+  try {\r\n+    const response = await api.get(API_ENDPOINTS.FA);\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error fetching facilities:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addFloor = async (floorData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.FLOOR, floorData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding floor...\",\r\n+      success: \"Floor added successfully!\",\r\n+      error: \"Failed to add floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const addRoom = async (roomData) => {\r\n+  try {\r\n+    const pro = api.post(API_ENDPOINTS.ROOM, roomData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Adding room...\",\r\n+      success: \"Room added successfully!\",\r\n+      error: \"Failed to add room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error adding floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteRoom = async (roomId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.ROOM}${roomId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting room...\",\r\n+      success: \"Room deleted successfully!\",\r\n+      error: \"Failed to delete room. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting room:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const deleteFloor = async (floorId) => {\r\n+  try {\r\n+    const pro = api.delete(`${API_ENDPOINTS.FLOOR}${floorId}/`);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Deleting floor...\",\r\n+      success: \"Floor deleted successfully!\",\r\n+      error: \"Failed to delete floor. Please try again.\",\r\n+    });\r\n+    return response;\r\n+  } catch (error) {\r\n+    console.error(\"Error deleting floor:\", error);\r\n+    throw error;\r\n+  }\r\n+}\r\n+\r\n+export const updateFacility = async (facilityId, facilityData) => {\r\n+  try {\r\n+    const pro = api.put(`${API_ENDPOINTS.FACILITY_NAME}${facilityId}/`, facilityData);\r\n+    const response = await toast.promise(pro, {\r\n+      loading: \"Updating facility...\",\r\n+      success: \"Facility updated successfully!\",\r\n+      error: \"Failed to update facility. Please try again.\",\r\n+    });\r\n+    return response.data;\r\n+  } catch (error) {\r\n+    console.error(\"Error updating facility:\", error);\r\n+    throw error;\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1754548765574,
            "name": "Commit-0",
            "content": "import toast from \"react-hot-toast\";\r\nimport { API_ENDPOINTS } from \"../utils/constants\";\r\nimport api from \"./api\";"
        }
    ]
}