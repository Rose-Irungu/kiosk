{
    "sourceFile": "src/services/incident.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1754657277057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754657291778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,20 @@\n         console.error(\"Error during check-in:\", error);\r\n         throw error;\r\n       }\r\n   },\r\n-  \r\n+    updateIncidentStatus: async (id, newStatus) => {\r\n+    try {\r\n+      const response = await api.patch(`${API_ENDPOINTS.INCIDENCE_LIST}/${id}/`, {\r\n+        incident_status: newStatus,\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error updating incident status:\", error);\r\n+      throw error;\r\n+    }\r\n+  }\r\n+};\r\n   getAllResidents: async () => {\r\n     try {\r\n       const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n       const response = await toast.promise(promise, {\r\n"
                },
                {
                    "date": 1754657310351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,20 +11,9 @@\n         console.error(\"Error during check-in:\", error);\r\n         throw error;\r\n       }\r\n   },\r\n-    updateIncidentStatus: async (id, newStatus) => {\r\n-    try {\r\n-      const response = await api.patch(`${API_ENDPOINTS.INCIDENCE_LIST}/${id}/`, {\r\n-        incident_status: newStatus,\r\n-      });\r\n-      return response.data;\r\n-    } catch (error) {\r\n-      console.error(\"Error updating incident status:\", error);\r\n-      throw error;\r\n-    }\r\n-  }\r\n-};\r\n+  \r\n   getAllResidents: async () => {\r\n     try {\r\n       const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n       const response = await toast.promise(promise, {\r\n"
                },
                {
                    "date": 1754657319191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,21 @@\n         console.error(\"Error during check-in:\", error);\r\n         throw error;\r\n       }\r\n   },\r\n-  \r\n+    updateIncidentStatus: async (id, newStatus) => {\r\n+    try {\r\n+      const response = await api.patch(`${API_ENDPOINTS.INCIDENCE_LIST}/${id}/`, {\r\n+        incident_status: newStatus,\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error updating incident status:\", error);\r\n+      throw error;\r\n+    }\r\n+  }\r\n+};\r\n+\r\n   getAllResidents: async () => {\r\n     try {\r\n       const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n       const response = await toast.promise(promise, {\r\n"
                },
                {
                    "date": 1754657590523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService ={\r\n+    getAllIncidence: async () => {\r\n+      try {\r\n+        const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+        return response.data;\r\n+      } catch (error) {\r\n+        console.error(\"Error during check-in:\", error);\r\n+        throw error;\r\n+      }\r\n+  },\r\n+  \r\n+  \r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+      \r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL, formData);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754657609904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService ={\r\n+    getAllIncidence: async () => {\r\n+      try {\r\n+        const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+        return response.data;\r\n+      } catch (error) {\r\n+        console.error(\"Error during check-in:\", error);\r\n+        throw error;\r\n+      }\r\n+  },\r\n+  \r\n+  export const updateIncidentStatus = async (id, newStatus = \"resolved\") => {\r\n+  try {\r\n+    const url = API_ENDPOINTS.EMERGENCY_UPDATE.replace(\"{id}\", id);\r\n+    const response = await api.patch(url, { emergency_status: newStatus });\r\n+\r\n+    const result = response.data;\r\n+\r\n+    if (result.result_code === 0) {\r\n+      return result.data; // { id, emergency_status }\r\n+    } else {\r\n+      throw new Error(result.message || \"Emergency update failed.\");\r\n+    }\r\n+  } catch (error) {\r\n+    throw error.message || \"Something went wrong while updating the emergency.\";\r\n+  }\r\n+};\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+      \r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL, formData);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754657629388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService ={\r\n+    getAllIncidence: async () => {\r\n+      try {\r\n+        const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+        return response.data;\r\n+      } catch (error) {\r\n+        console.error(\"Error during check-in:\", error);\r\n+        throw error;\r\n+      }\r\n+  },\r\n+  \r\n+  export const updateIncidentStatus = async (id, newStatus = \"resolved\") => {\r\n+  try {\r\n+    const url = API_ENDPOINTS.  UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+    const response = await api.patch(url, { emergency_status: newStatus });\r\n+\r\n+    const result = response.data;\r\n+\r\n+    if (result.result_code === 0) {\r\n+      return result.data; // { id, emergency_status }\r\n+    } else {\r\n+      throw new Error(result.message || \"Emergency update failed.\");\r\n+    }\r\n+  } catch (error) {\r\n+    throw error.message || \"Something went wrong while updating the emergency.\";\r\n+  }\r\n+};\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+      \r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL, formData);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754657639201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,10 @@\n     }\r\n   } catch (error) {\r\n     throw error.message || \"Something went wrong while updating the emergency.\";\r\n   }\r\n-};\r\n+},\r\n+\r\n   getAllResidents: async () => {\r\n     try {\r\n       const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n       const response = await toast.promise(promise, {\r\n"
                },
                {
                    "date": 1754657653699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService ={\r\n+    getAllIncidence: async () => {\r\n+      try {\r\n+        const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+        return response.data;\r\n+      } catch (error) {\r\n+        console.error(\"Error during check-in:\", error);\r\n+        throw error;\r\n+      }\r\n+  },\r\n+  \r\n+updateIncidentStatus: async (id, newStatus = \"resolved\") => {\r\n+  try {\r\n+    const url = API_ENDPOINTS.UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+    const response = await api.patch(url, { emergency_status: newStatus });\r\n+\r\n+    const result = response.data;\r\n+\r\n+    if (result.result_code === 0) {\r\n+      return result.data; // { id, emergency_status }\r\n+    } else {\r\n+      throw new Error(result.message || \"Emergency update failed.\");\r\n+    }\r\n+  } catch (error) {\r\n+    throw error.message || \"Something went wrong while updating the emergency.\";\r\n+  }\r\n+},\r\n+\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+      \r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL, formData);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754657669780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService ={\r\n+    getAllIncidence: async () => {\r\n+      try {\r\n+        const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+        return response.data;\r\n+      } catch (error) {\r\n+        console.error(\"Error during check-in:\", error);\r\n+        throw error;\r\n+      }\r\n+  },\r\n+  \r\n+updateIncidentStatus: async (id, newStatus = \"resolved\") => {\r\n+  try {\r\n+    const url = API_ENDPOINTS.UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+    const response = await api.patch(url, { emergency_status: newStatus });\r\n+F\r\n+    const result = response.data;\r\n+\r\n+    if (result.result_code === 0) {\r\n+      return result.data; // { id, emergency_status }\r\n+    } else {\r\n+      throw new Error(result.message || \"Emergency update failed.\");\r\n+    }\r\n+  } catch (error) {\r\n+    throw error.message || \"Something went wrong while updating the emergency.\";\r\n+  }\r\n+},\r\n+\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+      \r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL, formData);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754657678550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService = {\r\n+  getAllIncidence: async () => {\r\n+    try {\r\n+      const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error during check-in:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+\r\n+  updateIncidentStatus: async (id, newStatus = \"resolved\") => {\r\n+    try {\r\n+      const url = API_ENDPOINTS.UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+      const response = await api.patch(url, { emergency_status: newStatus });\r\n+\r\n+      const result = response.data;\r\n+\r\n+      if (result.result_code === 0) {\r\n+        return result.data\r\n+      } else {\r\n+        throw new Error(result.message || \"Emergency update failed.\");\r\n+      }\r\n+    } catch (error) {\r\n+      throw (\r\n+        error.message || \"Something went wrong while updating the emergency.\"\r\n+      );\r\n+    }\r\n+  },\r\n+\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(\r\n+        API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL,\r\n+        formData\r\n+      );\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+};\r\n"
                },
                {
                    "date": 1754657771591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService = {\r\n+  getAllIncidence: async () => {\r\n+    try {\r\n+      const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error during check-in:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+\r\n+  updateIncidentStatus: async (id, newStatus = \"resolved\") => {\r\n+    try {\r\n+      const url = API_ENDPOINTS.UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+      const response = await api.patch(url, { incident_status: newStatus });\r\n+\r\n+      const result = response.data;\r\n+\r\n+      if (result.result_code === 0) {\r\n+        return result.data;\r\n+      } else {\r\n+        throw new Error(result.message || \"Emergency update failed.\");\r\n+      }\r\n+    } catch (error) {\r\n+      throw (\r\n+        error.message || \"Something went wrong while updating the emergency.\"\r\n+      );\r\n+    }\r\n+  },\r\n+\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(\r\n+        API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL,\r\n+        formData\r\n+      );\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+};\r\n"
                },
                {
                    "date": 1754657788296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService = {\r\n+  getAllIncidence: async () => {\r\n+    try {\r\n+      const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error during check-in:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+\r\n+  updateIncidentStatus: async (id, newStatus = \"resolved\") => {\r\n+    try {\r\n+      const url = API_ENDPOINTS.UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+      const response = await api.patch(url, { incident_status: newStatus });\r\n+\r\n+      const result = response.data;\r\n+\r\n+      if (result.result_code === 0) {\r\n+        return result.data;\r\n+      } else {\r\n+        throw new Error(result.message || \" update failed.\");\r\n+      }\r\n+    } catch (error) {\r\n+      throw (\r\n+        error.message || \"Something went wrong while updating the emergency.\"\r\n+      );\r\n+    }\r\n+  },\r\n+\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(\r\n+        API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL,\r\n+        formData\r\n+      );\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+};\r\n"
                },
                {
                    "date": 1754657797908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         throw new Error(result.message || \"Incident update failed.\");\r\n       }\r\n     } catch (error) {\r\n       throw (\r\n-        error.message || \"Something went wrong while updating the emergency.\"\r\n+        error.message || \"Something went wrong while updating the incid.\"\r\n       );\r\n     }\r\n   },\r\n \r\n"
                },
                {
                    "date": 1754659309963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import api from \"./api\";\r\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+export const incidenceService = {\r\n+  getAllIncidence: async () => {\r\n+    try {\r\n+      const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error during check-in:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+\r\n+  updateIncidentStatus: async (id, newStatus = \"resolved\") => {\r\n+    try {\r\n+      const url = API_ENDPOINTS.UPDATED_INCIDENTS.replace(\"{id}\", id);\r\n+      const response = await api.patch(url, { incident_status: newStatus });\r\n+\r\n+      const result = response.data;\r\n+\r\n+      if (result.result_code === 0) {\r\n+        return result.data;\r\n+      } else {\r\n+        throw new Error(result.message || \"Incident update failed.\");\r\n+      }\r\n+    } catch (error) {\r\n+      throw (\r\n+        error.message || \"Something went wrong while updating the incident status.\"\r\n+      );\r\n+    }\r\n+  },\r\n+\r\n+  getAllResidents: async () => {\r\n+    try {\r\n+      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Loading residents...\",\r\n+        success: \"Residents loaded successfully!\",\r\n+        error: \"Failed to load residents. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching residents:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+  takeEmergencyRollCall: async (formData) => {\r\n+    try {\r\n+      const promise = api.post(\r\n+        API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL,\r\n+        formData\r\n+      );\r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Submitting roll call...\",\r\n+        success: \"Roll call submitted successfully!\",\r\n+        error: \"Failed to submit roll call. Please try again.\",\r\n+      });\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error submitting roll call:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+};\r\n"
                }
            ],
            "date": 1754657277057,
            "name": "Commit-0",
            "content": "import api from \"./api\";\r\nimport { API_ENDPOINTS } from \"../utils/constants\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport const incidenceService ={\r\n    getAllIncidence: async () => {\r\n      try {\r\n        const response = await api.get(API_ENDPOINTS.INCIDENCE_LIST);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(\"Error during check-in:\", error);\r\n        throw error;\r\n      }\r\n  },\r\n  \r\n  getAllResidents: async () => {\r\n    try {\r\n      const promise = api.get(API_ENDPOINTS.RESIDENT_LIST);\r\n      const response = await toast.promise(promise, {\r\n        loading: \"Loading residents...\",\r\n        success: \"Residents loaded successfully!\",\r\n        error: \"Failed to load residents. Please try again.\",\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching residents:\", error);\r\n      throw error;\r\n      \r\n    }\r\n  },\r\n  takeEmergencyRollCall: async (formData) => {\r\n    try {\r\n      const promise = api.post(API_ENDPOINTS.TAKE_EMERGENCY_ROLL_CALL, formData);\r\n      const response = await toast.promise(promise, {\r\n        loading: \"Submitting roll call...\",\r\n        success: \"Roll call submitted successfully!\",\r\n        error: \"Failed to submit roll call. Please try again.\",\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error submitting roll call:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n}"
        }
    ]
}