{
    "sourceFile": "src/services/authService.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1754033277953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754033283968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+import { API_ENDPOINTS } from \"../utils/constants\";\r\n+import api from \"./api\";\r\n+\r\n+export const authService = {\r\n+  sent_password_reset: async (formData) => {\r\n+    try {\r\n+      const response = await api.post(\r\n+        API_ENDPOINTS.SENT_PASSWORD_RESET,\r\n+        formData\r\n+      );\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error during sent email:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+  password_reset: async (formData) => {\r\n+    try {\r\n+      const response = await api.post(\r\n+        API_ENDPOINTS.SENT_PASSWORD_RESET,\r\n+        formData\r\n+      );\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      console.error(\"Error during reset password:\", error);\r\n+      throw error;\r\n+    }\r\n+  },\r\n+  loginUser: async (credentials) => {\r\n+    try {\r\n+      const response = await api.post(API_ENDPOINTS.LOGIN, credentials);\r\n+\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      throw (\r\n+        error.response?.data || { message: \"Login failed. Please try again.\" }\r\n+      );\r\n+    }\r\n+  },\r\n+\r\n+  logoutUser: () => {\r\n+    localStorage.removeItem(\"accessToken\");\r\n+    localStorage.removeItem(\"refreshToken\");\r\n+    localStorage.removeItem(\"userInfo\");\r\n+    localStorage.removeItem(\"userRole\");\r\n+\r\n+       window.location.href = \"/loginform\";\r\n+  },\r\n+\r\n+  changePassword: async (formData) => {\r\n+    try {\r\n+      const response = await api.post(API_ENDPOINTS.CHANGE_PASSWORD, formData);\r\n+\r\n+      return response.data;\r\n+    } catch (error) {\r\n+      throw (\r\n+        error.response?.data || {\r\n+          message: \"Password change failed. Please try again.\",\r\n+        }\r\n+      );\r\n+    }\r\n+  },\r\n+};\r\n"
                },
                {
                    "date": 1754033289240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,75 +41,9 @@\n   logoutUser: () => {\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"refreshToken\");\r\n     localStorage.removeItem(\"userInfo\");\r\n-    localStorage.removeItem(\"userRole\");\r\n-\r\n-       window.location.href = \"/loginform\";\r\n-  },\r\n-\r\n-  changePassword: async (formData) => {\r\n-    try {\r\n-      const response = await api.post(API_ENDPOINTS.CHANGE_PASSWORD, formData);\r\n-\r\n-      return response.data;\r\n-    } catch (error) {\r\n-      throw (\r\n-        error.response?.data || {\r\n-          message: \"Password change failed. Please try again.\",\r\n-        }\r\n-      );\r\n-    }\r\n-  },\r\n-};\r\n-import { API_ENDPOINTS } from \"../utils/constants\";\r\n-import api from \"./api\";\r\n-\r\n-export const authService = {\r\n-  sent_password_reset: async (formData) => {\r\n-    try {\r\n-      const response = await api.post(\r\n-        API_ENDPOINTS.SENT_PASSWORD_RESET,\r\n-        formData\r\n-      );\r\n-      return response.data;\r\n-    } catch (error) {\r\n-      console.error(\"Error during sent email:\", error);\r\n-      throw error;\r\n-    }\r\n-  },\r\n-  password_reset: async (formData) => {\r\n-    try {\r\n-      const response = await api.post(\r\n-        API_ENDPOINTS.SENT_PASSWORD_RESET,\r\n-        formData\r\n-      );\r\n-      return response.data;\r\n-    } catch (error) {\r\n-      console.error(\"Error during reset password:\", error);\r\n-      throw error;\r\n-    }\r\n-  },\r\n-  loginUser: async (credentials) => {\r\n-    try {\r\n-      const response = await api.post(API_ENDPOINTS.LOGIN, credentials);\r\n-\r\n-      return response.data;\r\n-    } catch (error) {\r\n-      throw (\r\n-        error.response?.data || { message: \"Login failed. Please try again.\" }\r\n-      );\r\n-    }\r\n-  },\r\n-\r\n-  logoutUser: () => {\r\n-    localStorage.removeItem(\"accessToken\");\r\n-    localStorage.removeItem(\"refreshToken\");\r\n-    localStorage.removeItem(\"userInfo\");\r\n-    localStorage.removeItem(\"userRole\");\r\n-\r\n-    // localStorage.clear();\r\n-\r\n+    localStorage.removeItem(\"userRole\");   \r\n     window.location.href = \"/loginform\";\r\n   },\r\n \r\n   changePassword: async (formData) => {\r\n"
                },
                {
                    "date": 1754042789453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import toast from \"react-hot-toast\";\r\n import { API_ENDPOINTS } from \"../utils/constants\";\r\n import api from \"./api\";\r\n \r\n export const authService = {\r\n@@ -27,23 +28,34 @@\n     }\r\n   },\r\n   loginUser: async (credentials) => {\r\n     try {\r\n-      const response = await api.post(API_ENDPOINTS.LOGIN, credentials);\r\n+      const promise = api.post(API_ENDPOINTS.LOGIN, credentials);\r\n \r\n+      const response = await toast.promise(promise, {\r\n+        loading: \"Logging in...\",\r\n+        success: \"Login successful!\",\r\n+        error: (err) =>\r\n+          err?.response?.data?.message || \"Login failed. Please try again.\",\r\n+      });\r\n+\r\n       return response.data;\r\n     } catch (error) {\r\n       throw (\r\n-        error.response?.data || { message: \"Login failed. Please try again.\" }\r\n+        error?.response?.data || { message: \"Login failed. Please try again.\" }\r\n       );\r\n     }\r\n   },\r\n \r\n   logoutUser: () => {\r\n     localStorage.removeItem(\"accessToken\");\r\n     localStorage.removeItem(\"refreshToken\");\r\n     localStorage.removeItem(\"userInfo\");\r\n-    localStorage.removeItem(\"userRole\");   \r\n+    localStorage.removeItem(\"userRole\");\r\n+\r\n+    // localStorage.clear();\r\n+\r\n+    // Redirect to login\r\n     window.location.href = \"/loginform\";\r\n   },\r\n \r\n   changePassword: async (formData) => {\r\n"
                }
            ],
            "date": 1754033277953,
            "name": "Commit-0",
            "content": "import { API_ENDPOINTS } from \"../utils/constants\";\r\nimport api from \"./api\";\r\n\r\nexport const authService = {\r\n  sent_password_reset: async (formData) => {\r\n    try {\r\n      const response = await api.post(\r\n        API_ENDPOINTS.SENT_PASSWORD_RESET,\r\n        formData\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error during sent email:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  password_reset: async (formData) => {\r\n    try {\r\n      const response = await api.post(\r\n        API_ENDPOINTS.SENT_PASSWORD_RESET,\r\n        formData\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error during reset password:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n  loginUser: async (credentials) => {\r\n    try {\r\n      const response = await api.post(API_ENDPOINTS.LOGIN, credentials);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      throw (\r\n        error.response?.data || { message: \"Login failed. Please try again.\" }\r\n      );\r\n    }\r\n  },\r\n\r\n  logoutUser: () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    localStorage.removeItem(\"userInfo\");\r\n    localStorage.removeItem(\"userRole\");\r\n\r\n    // localStorage.clear();\r\n\r\n    window.location.href = \"/loginform\";\r\n  },\r\n\r\n  changePassword: async (formData) => {\r\n    try {\r\n      const response = await api.post(API_ENDPOINTS.CHANGE_PASSWORD, formData);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      throw (\r\n        error.response?.data || {\r\n          message: \"Password change failed. Please try again.\",\r\n        }\r\n      );\r\n    }\r\n  },\r\n};\r\n"
        }
    ]
}