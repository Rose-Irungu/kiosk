{
    "sourceFile": "src/hooks/useVisitorForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754310672805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754310794336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,135 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\n+import {\r\n+  createInvitation,\r\n+  getInvitation,\r\n+  submitInvitation,\r\n+} from \"../services/visitorservice\";\r\n+\r\n+export const useVisitorForm = () => {\r\n+  const { token: urlToken } = useParams();\r\n+  const location = useLocation();\r\n+\r\n+  const token = urlToken;\r\n+\r\n+  const [formData, setFormData] = useState({\r\n+    full_name: \"\",\r\n+    phone_number: \"\",\r\n+    email: \"\",\r\n+    visit_date: \"\",\r\n+    host_name: \"\",\r\n+    unit_number: \"\",\r\n+    plate_number: \"\",\r\n+    visitor_type: \"visitor\",\r\n+    profile_pic: null,\r\n+  });\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [isVisitorMode, setIsVisitorMode] = useState(false);\r\n+  const [isSecurityMode, setIsSecurityMode] = useState(false);\r\n+  const [isResidentMode, setIsResidentMode] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"Token found:\", token);\r\n+\r\n+    if (token) {\r\n+      setIsVisitorMode(true);\r\n+      setIsSecurityMode(false);\r\n+      setIsResidentMode(false);\r\n+      fetchInvitationData();\r\n+    } else if (location.pathname.includes(\"security-checkin\")) {\r\n+      setIsSecurityMode(true);\r\n+      setIsVisitorMode(false);\r\n+      setIsResidentMode(false);\r\n+    } else {\r\n+      setIsResidentMode(true);\r\n+      setIsVisitorMode(false);\r\n+      setIsSecurityMode(false);\r\n+    }\r\n+  }, [token, location.pathname]);\r\n+\r\n+  const fetchInvitationData = async () => {\r\n+    if (!token) return;\r\n+\r\n+    setLoading(true);\r\n+    setError(\"\");\r\n+    try {\r\n+      console.log(\"Fetching invitation data for token:\", token);\r\n+      const response = await getInvitation(token);\r\n+      console.log(\"Received invitation data:\", response);\r\n+\r\n+      const { data } = response;\r\n+      const visitor = data;\r\n+      const visit = visitor.latest_visit;\r\n+\r\n+      setFormData((prevData) => ({\r\n+        ...prevData,\r\n+        full_name: visitor.full_name || \"\",\r\n+        email: visitor.email || \"\",\r\n+        phone_number: visitor.phone_number || \"\",\r\n+        plate_number: visitor.plate_number || \"\",\r\n+        visitor_type: visitor.visitor_type || \"visitor\",\r\n+        visit_date: visit?.visit_date || \"\",\r\n+        host_name: visit?.host_name || \"\",\r\n+        unit_number: visit?.unit_number || \"\",\r\n+      }));\r\n+    } catch (err) {\r\n+      setError(\"Failed to load invitation data\");\r\n+      console.error(\"Error fetching invitation:\", err);\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleInputChange = (field, value) => {\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [field]: value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    setLoading(true);\r\n+    setError(\"\");\r\n+\r\n+    //\r\n+    if (isVisitorMode && !formData.profile) {\r\n+      setError(\"Please upload a photo before submitting the form.\");\r\n+      setLoading(false);\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      if (isVisitorMode && token) {\r\n+        await submitInvitation(token, formData);\r\n+        navigate(\"/\");\r\n+      } else {\r\n+        await createInvitation(formData);\r\n+        if (isResidentMode) {\r\n+          navigate(\"/guestregsuccess\");\r\n+        } else {\r\n+          alert(\"Visitor registered successfully!\");\r\n+        }\r\n+      }\r\n+    } catch (err) {\r\n+      setError(\"Failed to submit form\");\r\n+      console.error(\"Error submitting form:\", err);\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    formData,\r\n+    loading,\r\n+    error,\r\n+    isVisitorMode,\r\n+    isSecurityMode,\r\n+    isResidentMode,\r\n+    token,\r\n+    handleInputChange,\r\n+    handleSubmit,\r\n+  };\r\n+};\r\n"
                }
            ],
            "date": 1754310672805,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  createInvitation,\r\n  getInvitation,\r\n  submitInvitation,\r\n} from \"../services/visitorservice\";\r\n\r\nexport const useVisitorForm = () => {\r\n  const { token: urlToken } = useParams();\r\n  const location = useLocation();\r\n\r\n  const token = urlToken;\r\n\r\n  const [formData, setFormData] = useState({\r\n    full_name: \"\",\r\n    phone_number: \"\",\r\n    email: \"\",\r\n    visit_date: \"\",\r\n    host_name: \"\",\r\n    unit_number: \"\",\r\n    plate_number: \"\",\r\n    visitor_type: \"visitor\",\r\n    profile: null,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [isVisitorMode, setIsVisitorMode] = useState(false);\r\n  const [isSecurityMode, setIsSecurityMode] = useState(false);\r\n  const [isResidentMode, setIsResidentMode] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Token found:\", token);\r\n\r\n    if (token) {\r\n      setIsVisitorMode(true);\r\n      setIsSecurityMode(false);\r\n      setIsResidentMode(false);\r\n      fetchInvitationData();\r\n    } else if (location.pathname.includes(\"security-checkin\")) {\r\n      setIsSecurityMode(true);\r\n      setIsVisitorMode(false);\r\n      setIsResidentMode(false);\r\n    } else {\r\n      setIsResidentMode(true);\r\n      setIsVisitorMode(false);\r\n      setIsSecurityMode(false);\r\n    }\r\n  }, [token, location.pathname]);\r\n\r\n  const fetchInvitationData = async () => {\r\n    if (!token) return;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      console.log(\"Fetching invitation data for token:\", token);\r\n      const response = await getInvitation(token);\r\n      console.log(\"Received invitation data:\", response);\r\n\r\n      const { data } = response;\r\n      const visitor = data;\r\n      const visit = visitor.latest_visit;\r\n\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        full_name: visitor.full_name || \"\",\r\n        email: visitor.email || \"\",\r\n        phone_number: visitor.phone_number || \"\",\r\n        plate_number: visitor.plate_number || \"\",\r\n        visitor_type: visitor.visitor_type || \"visitor\",\r\n        visit_date: visit?.visit_date || \"\",\r\n        host_name: visit?.host_name || \"\",\r\n        unit_number: visit?.unit_number || \"\",\r\n      }));\r\n    } catch (err) {\r\n      setError(\"Failed to load invitation data\");\r\n      console.error(\"Error fetching invitation:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    //\r\n    if (isVisitorMode && !formData.photo) {\r\n      setError(\"Please upload a photo before submitting the form.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (isVisitorMode && token) {\r\n        await submitInvitation(token, formData);\r\n        navigate(\"/\");\r\n      } else {\r\n        await createInvitation(formData);\r\n        if (isResidentMode) {\r\n          navigate(\"/guestregsuccess\");\r\n        } else {\r\n          alert(\"Visitor registered successfully!\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to submit form\");\r\n      console.error(\"Error submitting form:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    formData,\r\n    loading,\r\n    error,\r\n    isVisitorMode,\r\n    isSecurityMode,\r\n    isResidentMode,\r\n    token,\r\n    handleInputChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n"
        }
    ]
}