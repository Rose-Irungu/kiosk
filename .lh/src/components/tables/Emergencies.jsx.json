{
    "sourceFile": "src/components/tables/Emergencies.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 50,
            "patches": [
                {
                    "date": 1754228927797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754228952348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n             <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+   \r\n           </TableRow>\r\n         </TableHeader>\r\n         <TableBody>\r\n           {events.length === 0 ? (\r\n"
                },
                {
                    "date": 1754228988190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n             <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-   \r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n           </TableRow>\r\n         </TableHeader>\r\n         <TableBody>\r\n           {events.length === 0 ? (\r\n"
                },
                {
                    "date": 1754229265506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                \r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+              </TableRow>\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229277752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {usere}\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+              </TableRow>\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229283947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n                   >\r\n                     {event.status}\r\n                   </span>\r\n                 </TableCell>\r\n-                {usere}\r\n+                {User.role === }\r\n                 <TableCell className=\"relative dropdown-parent\">\r\n                   <MoreHorizontal\r\n                     className=\"cursor-pointer text-muted-foreground\"\r\n                     onClick={() => toggleDropdown(index)}\r\n@@ -178,368 +178,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                \r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-              </TableRow>\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {/* <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell> */}\r\n-              </TableRow>\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229304921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {User.role === \"admin\" }\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+              </TableRow>\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229310348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n                   >\r\n                     {event.status}\r\n                   </span>\r\n                 </TableCell>\r\n-                {User.role === \"admin\" }\r\n+                {User.role === \"admin\" ()}\r\n                 <TableCell className=\"relative dropdown-parent\">\r\n                   <MoreHorizontal\r\n                     className=\"cursor-pointer text-muted-foreground\"\r\n                     onClick={() => toggleDropdown(index)}\r\n@@ -178,187 +178,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {User.role === }\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-              </TableRow>\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229321575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n                   >\r\n                     {event.status}\r\n                   </span>\r\n                 </TableCell>\r\n-                {User.role === \"admin\" ()}\r\n+                {User.role === \"admin\" (\r\n                 <TableCell className=\"relative dropdown-parent\">\r\n                   <MoreHorizontal\r\n                     className=\"cursor-pointer text-muted-foreground\"\r\n                     onClick={() => toggleDropdown(index)}\r\n"
                },
                {
                    "date": 1754229346344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n                     </div>\r\n                   )}\r\n                 </TableCell>\r\n               </TableRow>\r\n+              \r\n             ))\r\n           )}\r\n         </TableBody>\r\n       </Table>\r\n"
                },
                {
                    "date": 1754229354355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,10 +169,11 @@\n                       </button>\r\n                     </div>\r\n                   )}\r\n                 </TableCell>\r\n+                \r\n               </TableRow>\r\n-              \r\n+\r\n             ))\r\n           )}\r\n         </TableBody>\r\n       </Table>\r\n"
                },
                {
                    "date": 1754229361481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {User.role === \"admin\" (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                0\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229371713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {User.role === \"admin\" (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) :\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229393167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229507116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229796514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+  user\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229805907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   error = null,\r\n   timeFilter = \"Today\",\r\n   onTimeFilterChange,\r\n   highlightConditions = []\r\n-  user\r\n+  user = { role: \"admin\" } // Default to admin for testing\r\n }) {\r\n   const [openDropdown, setOpenDropdown] = useState(null);\r\n \r\n   const toggleDropdown = (index) => {\r\n@@ -181,925 +181,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {User.role === \"admin\" (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) :\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {User.role === \"admin\" (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                0\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {User.role === \"admin\" (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                \r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229815866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = []\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229822715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  \r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754229833429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230211618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            \r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230216874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            {}\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230227290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" }\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230232829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" ? }\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230242856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" ? }\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230250441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" ? ()\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230257042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n             <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? ()\r\n+            { user.role === \"admin\" ? (\r\n             <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n           </TableRow>\r\n         </TableHeader>\r\n         <TableBody>\r\n@@ -182,1674 +182,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? }\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? }\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" }\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            {}\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            \r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  \r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = []\r\n-  user = { role: \"admin\" } // Default to admin for testing\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230266439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" ? (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ):}\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230273248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" ? (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ): nu}\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230613572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user.role === \"admin\" ? \r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ): null}\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230622613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            \r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230628444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            \r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230635901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n             <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.\r\n+            { user?.role === \"admin\"\r\n             <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n             \r\n           </TableRow>\r\n         </TableHeader>\r\n"
                },
                {
                    "date": 1754230650832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n             <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\"\r\n+            { user?.role === \"admin\" \r\n             <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n             \r\n           </TableRow>\r\n         </TableHeader>\r\n@@ -183,939 +183,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            \r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? \r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            ): null}\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? (\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            ): nu}\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? (\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            ):}\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user.role === \"admin\" ? (\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230663611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" ?\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230693630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" ?\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :null }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ?(\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                ) : null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230720373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" ?\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :null }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ?\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230732156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" ?\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :null }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ?\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230763632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n                   >\r\n                     {event.status}\r\n                   </span>\r\n                 </TableCell>\r\n-                {user?.role === \"admin\" ?\r\n+                {user?.role === \"admin\" ? \r\n                 <TableCell className=\"relative dropdown-parent\">\r\n                   <MoreHorizontal\r\n                     className=\"cursor-pointer text-muted-foreground\"\r\n                     onClick={() => toggleDropdown(index)}\r\n"
                },
                {
                    "date": 1754230770293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n                   >\r\n                     {event.status}\r\n                   </span>\r\n                 </TableCell>\r\n-                {user?.role === \"admin\" ? \r\n+                {user?.role === \"admin\" ? (\r\n                 <TableCell className=\"relative dropdown-parent\">\r\n                   <MoreHorizontal\r\n                     className=\"cursor-pointer text-muted-foreground\"\r\n                     onClick={() => toggleDropdown(index)}\r\n@@ -172,9 +172,9 @@\n                       </button>\r\n                     </div>\r\n                   )}\r\n                 </TableCell>\r\n-                null}\r\n+                : null}\r\n               </TableRow>\r\n \r\n             ))\r\n           )}\r\n@@ -183,753 +183,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" ?\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :null }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ?\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" ?\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :null }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" ?\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" \r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            \r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user.role === \"admin\" ?(\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                ) : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230777083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" ?\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :null }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ? (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 ): null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230819526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" \r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :null }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ? (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 ): null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230826396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" &&\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            :null }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ? (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 ): null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230831571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n             <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n             <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n             { user?.role === \"admin\" &&\r\n             <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :null }\r\n+             }\r\n           </TableRow>\r\n         </TableHeader>\r\n         <TableBody>\r\n           {events.length === 0 ? (\r\n"
                },
                {
                    "date": 1754230843161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" && \r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+             }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ? (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 ): null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230849668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" && (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+             }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" ? (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 ): null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230880818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" && (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ) }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\"  (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 ): null}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230888831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  user = { role: \"admin\" }\r\n+}) {\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" && (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ) }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" && (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 )}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230943612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   error = null,\r\n   timeFilter = \"Today\",\r\n   onTimeFilterChange,\r\n   highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n+  \r\n }) {\r\n   const [openDropdown, setOpenDropdown] = useState(null);\r\n \r\n   const toggleDropdown = (index) => {\r\n@@ -183,1314 +183,5 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" && (\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            ) }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\"  (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 ): null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" && (\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-             }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ? (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 ): null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" && \r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-             }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ? (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 ): null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" &&\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-             }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ? (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 ): null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" \r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :null }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ? (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 ): null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" ?\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :null }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ? (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 ): null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default EmergencyTable;\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n-\r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  user = { role: \"admin\" }\r\n-}) {\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n-    }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n-\r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" ?\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            :null }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n-                  </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" ? (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                : null}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230950543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,188 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  \r\n+}) {\r\n+  \r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" && (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ) }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" && (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 )}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754230956077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,188 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { MoreHorizontal } from \"lucide-react\";\r\n+import { Label } from \"recharts\";\r\n+\r\n+export function EmergencyTable({ \r\n+  events = [], \r\n+  onStatusChange,\r\n+  isLoading = false,\r\n+  error = null,\r\n+  timeFilter = \"Today\",\r\n+  onTimeFilterChange,\r\n+  highlightConditions = [],\r\n+  \r\n+}) {\r\n+  const\r\n+  const [openDropdown, setOpenDropdown] = useState(null);\r\n+\r\n+  const toggleDropdown = (index) => {\r\n+    setOpenDropdown((prev) => (prev === index ? null : index));\r\n+  };\r\n+\r\n+  const handleAction = (action, event, index) => {\r\n+    console.log(`Action \"${action}\" selected for`, event);\r\n+    \r\n+    // Call the parent component's status change handler if provided\r\n+    if (onStatusChange) {\r\n+      onStatusChange(action, event, index);\r\n+    }\r\n+    \r\n+    setOpenDropdown(null);\r\n+  };\r\n+\r\n+  // Check if a row should be highlighted based on conditions\r\n+  const shouldHighlightRow = (event) => {\r\n+    if (highlightConditions.length === 0) return false;\r\n+    \r\n+    return highlightConditions.some(condition => {\r\n+      return Object.keys(condition).every(key => {\r\n+        return event[key] === condition[key];\r\n+      });\r\n+    });\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (!e.target.closest(\".dropdown-parent\")) {\r\n+        setOpenDropdown(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  // Loading state\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // Error state\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+        <div className=\"flex items-center justify-between mb-4\">\r\n+          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        </div>\r\n+        <div className=\"flex items-center justify-center h-64\">\r\n+          <div className=\"text-red-600\">Error: {error}</div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n+        <div className=\"relative\">\r\n+          <select \r\n+            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n+            value={timeFilter}\r\n+            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n+          >\r\n+            <option value=\"Today\">Today</option>\r\n+            <option value=\"This Week\">This Week</option>\r\n+            <option value=\"This Month\">This Month</option>\r\n+            <option value=\"This Year\">This Year</option>\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Table */}\r\n+      <Table>\r\n+        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n+        <TableHeader>\r\n+          <TableRow>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n+            { user?.role === \"admin\" && (\r\n+            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n+            ) }\r\n+          </TableRow>\r\n+        </TableHeader>\r\n+        <TableBody>\r\n+          {events.length === 0 ? (\r\n+            <TableRow>\r\n+              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n+                No emergency events found\r\n+              </TableCell>\r\n+            </TableRow>\r\n+          ) : (\r\n+            events.map((event, index) => (\r\n+              <TableRow\r\n+                key={event.id || index}\r\n+                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n+              >\r\n+                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n+                <TableCell>{event.visitor}</TableCell>\r\n+                <TableCell>{event.type}</TableCell>\r\n+                <TableCell>{event.time}</TableCell>\r\n+                <TableCell>\r\n+                  <span\r\n+                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n+                      event.status === \"Ongoing\"\r\n+                        ? \"bg-red-100 text-red-700\"\r\n+                        : \"bg-green-100 text-green-700\"\r\n+                    }`}\r\n+                  >\r\n+                    {event.status}\r\n+                  </span>\r\n+                </TableCell>\r\n+                {user?.role === \"admin\" && (\r\n+                <TableCell className=\"relative dropdown-parent\">\r\n+                  <MoreHorizontal\r\n+                    className=\"cursor-pointer text-muted-foreground\"\r\n+                    onClick={() => toggleDropdown(index)}\r\n+                  />\r\n+\r\n+                  {openDropdown === index && (\r\n+                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Resolved\r\n+                      </button>\r\n+                      <button\r\n+                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n+                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n+                      >\r\n+                        Ongoing\r\n+                      </button>\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell>\r\n+                 )}\r\n+              </TableRow>\r\n+\r\n+            ))\r\n+          )}\r\n+        </TableBody>\r\n+      </Table>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default EmergencyTable;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1754228927797,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { MoreHorizontal } from \"lucide-react\";\r\nimport { Label } from \"recharts\";\r\n\r\nexport function EmergencyTable({ \r\n  events = [], \r\n  onStatusChange,\r\n  isLoading = false,\r\n  error = null,\r\n  timeFilter = \"Today\",\r\n  onTimeFilterChange,\r\n  highlightConditions = []\r\n}) {\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n\r\n  const toggleDropdown = (index) => {\r\n    setOpenDropdown((prev) => (prev === index ? null : index));\r\n  };\r\n\r\n  const handleAction = (action, event, index) => {\r\n    console.log(`Action \"${action}\" selected for`, event);\r\n    \r\n    // Call the parent component's status change handler if provided\r\n    if (onStatusChange) {\r\n      onStatusChange(action, event, index);\r\n    }\r\n    \r\n    setOpenDropdown(null);\r\n  };\r\n\r\n  // Check if a row should be highlighted based on conditions\r\n  const shouldHighlightRow = (event) => {\r\n    if (highlightConditions.length === 0) return false;\r\n    \r\n    return highlightConditions.some(condition => {\r\n      return Object.keys(condition).every(key => {\r\n        return event[key] === condition[key];\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (!e.target.closest(\".dropdown-parent\")) {\r\n        setOpenDropdown(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-red-600\">Error: {error}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n        <div className=\"relative\">\r\n          <select \r\n            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n            value={timeFilter}\r\n            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n          >\r\n            <option value=\"Today\">Today</option>\r\n            <option value=\"This Week\">This Week</option>\r\n            <option value=\"This Month\">This Month</option>\r\n            <option value=\"This Year\">This Year</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <Table>\r\n        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {events.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n                No emergency events found\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            events.map((event, index) => (\r\n              <TableRow\r\n                key={event.id || index}\r\n                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n              >\r\n                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n                <TableCell>{event.visitor}</TableCell>\r\n                <TableCell>{event.type}</TableCell>\r\n                <TableCell>{event.time}</TableCell>\r\n                <TableCell>\r\n                  <span\r\n                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n                      event.status === \"Ongoing\"\r\n                        ? \"bg-red-100 text-red-700\"\r\n                        : \"bg-green-100 text-green-700\"\r\n                    }`}\r\n                  >\r\n                    {event.status}\r\n                  </span>\r\n                </TableCell>\r\n                {/* <TableCell className=\"relative dropdown-parent\">\r\n                  <MoreHorizontal\r\n                    className=\"cursor-pointer text-muted-foreground\"\r\n                    onClick={() => toggleDropdown(index)}\r\n                  />\r\n\r\n                  {openDropdown === index && (\r\n                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n                      <button\r\n                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n                      >\r\n                        Resolved\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n                      >\r\n                        Ongoing\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </TableCell> */}\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmergencyTable;"
        }
    ]
}