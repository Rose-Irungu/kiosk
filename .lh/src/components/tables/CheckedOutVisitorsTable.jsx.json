{
    "sourceFile": "src/components/tables/CheckedOutVisitorsTable.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754050884082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754159315825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n+import dayjs from 'dayjs';\r\n import { getCheckedOut } from \"@/services/checkedoutvisitors\";\r\n import {\r\n   Table,\r\n   TableBody,\r\n@@ -8,10 +9,15 @@\n   TableHeader,\r\n   TableRow,\r\n } from \"@/components/ui/table\";\r\n import { Upload, ChevronDown } from \"lucide-react\";\r\n+import { useLocation } from \"react-router-dom\";\r\n \r\n export default function Visitors() {\r\n+  const location = useLocation();\r\n+  let data = location.state?.data;\r\n+  const title = location.state?.cardTitle;\r\n+  console.log(data)\r\n   const [visitors, setVisitors] = useState([]);\r\n   const [filteredAllVisitors, setFilteredAllVisitors] = useState([]); // For export\r\n   const [loading, setLoading] = useState(true);\r\n \r\n@@ -27,32 +33,36 @@\n   const fetchVisitors = async () => {\r\n     setLoading(true);\r\n     try {\r\n \r\n-      const res = await getCheckedOut();\r\n-      console.log(\" Full API response:\", res);\r\n-      if (res.result_code === 0) {\r\n-        let allData = res.data;\r\n+      // const res = v;\r\n+      // console.log(\" Full API response:\", res);\r\n+      // if (res.result_code === 0) {\r\n+      //   let allData = res.data;\r\n \r\n-        if (visitorTypeFilter !== \"all\") {\r\n-          allData = allData.filter((v) => v.visitor_type === visitorTypeFilter);\r\n-        }\r\n+      if (visitorTypeFilter !== \"all\") {\r\n+        data = data.filter((v) => v.visitor_type === visitorTypeFilter);\r\n \r\n-        setFilteredAllVisitors(allData); // Save all filtered data for export\r\n-        setTotalEntries(allData.length);\r\n \r\n+        setFilteredAllVisitors(data); // Save all filtered data for export\r\n+        setTotalEntries(data.length);\r\n+\r\n         const start = (currentPage - 1) * entriesPerPage;\r\n         const end = start + entriesPerPage;\r\n-        const paginated = allData.slice(start, end);\r\n+        const paginated = data.slice(start, end);\r\n \r\n         setVisitors(paginated);\r\n       } else {\r\n-        setVisitors([]);\r\n-        setFilteredAllVisitors([]);\r\n-        setTotalEntries(0);\r\n+        setVisitors(data)\r\n       }\r\n+      // } else {\r\n+      //   setVisitors([]);\r\n+      //   setFilteredAllVisitors([]);\r\n+      //   setTotalEntries(0);\r\n+      // }\r\n     } catch (error) {\r\n       \r\n+\r\n       setVisitors([]);\r\n       setFilteredAllVisitors([]);\r\n       setTotalEntries(0);\r\n     } finally {\r\n@@ -106,9 +116,9 @@\n   return (\r\n     <>\r\n       <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n         <div className=\"flex justify-between items-start p-6 \">\r\n-          <h2 className=\"text-lg  font-bold font-['Inter']\">Checked Out Visitors</h2>\r\n+          <h2 className=\"text-lg  font-bold font-['Inter']\">{title}</h2>\r\n \r\n         </div>\r\n \r\n         <div className=\"flex flex-row flex-wrap justify-between gap-4 px-6 pb-3 w-full  \">\r\n@@ -173,11 +183,15 @@\n               <TableRow >\r\n                 <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Visitor Name</TableHead>\r\n                 <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Phone No.</TableHead>\r\n                 <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Visit Unit</TableHead>\r\n-                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Check-In Time</TableHead>\r\n-                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Check-Out Time</TableHead>\r\n-                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Verified By</TableHead>\r\n+                \r\n+                {\r\n+                  title !== \"Checked In Visitors\" \r\n+                  ?(<TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Check-Out Time</TableHead>)\r\n+                  :(<TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Check-In Time</TableHead>)\r\n+                }\r\n+\r\n                 <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Status</TableHead>\r\n               </TableRow>\r\n             </TableHeader>\r\n \r\n@@ -194,43 +208,44 @@\n                     <div className=\"text-center text-gray-500 py-10\">No visitors found.</div>\r\n                   </TableCell>\r\n                 </TableRow>\r\n               ) : (\r\n-                visitors\r\n+                visitors.map((visitor, index) => (\r\n+                  <TableRow key={index} className=\"even:bg-[#E0DBF4]/5 odd:bg-[#005E0E]/5\">\r\n+                    <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.full_name}</TableCell>\r\n+                    <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.phone_number}</TableCell>\r\n+                    <TableCell className=\"text-[#495057] text-[13px]  font-['Inter'] p-4\">{visitor.unit_number}</TableCell>\r\n+                    \r\n+                    {\r\n+                      title !== \"Checked In Visitors\" \r\n+                      ?(<TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{dayjs(visitor.check_out).format('HH:mm')}</TableCell>)\r\n+                      :(<TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{dayjs(visitor.check_in).format('HH:mm')}</TableCell>)\r\n+                    }\r\n \r\n-                  // .filter(visitor => visitor.status === \"checked_out\")\r\n-                  .map((visitor, index) => (\r\n-                    <TableRow key={index} className=\"even:bg-[#E0DBF4]/5 odd:bg-[#005E0E]/5\">\r\n-                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.full_name}</TableCell>\r\n-                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.phone_number}</TableCell>\r\n-                      <TableCell className=\"text-[#495057] text-[13px]  font-['Inter'] p-4\">{visitor.unit_number}</TableCell>\r\n-                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.check_in}</TableCell>\r\n-                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.check_out}</TableCell>\r\n-                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.verifier}</TableCell>\r\n-                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">\r\n+                    <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">\r\n \r\n \r\n-                        <div\r\n-                          className={`flex items-center justify-center px-1 py-0.5 gap-2 w-[90px] h-[20px] rounded text-xs  ${visitor.status === \"checked_in\"\r\n-                            ? \"bg-[rgba(1,210,30,0.2)] text-green-800\"\r\n-                            : visitor.status === \"checked_out\"\r\n-                              ? \"bg-[#E0DBF4] text-purple-800\"\r\n-                              : \"bg-yellow-200 text-yellow-800\"\r\n-                            }`}\r\n-                        >\r\n-                          {\r\n-                            visitor.status == \"checked_in\"\r\n-                              ? \"Checked In\"\r\n-                              : visitor.status == \"checked_out\"\r\n-                                ? \"Checked Out\"\r\n-                                : \"Registered\"\r\n-                          }\r\n-                        </div>\r\n+                      <div\r\n+                        className={`flex items-center justify-center px-1 py-0.5 gap-2 w-[90px] h-[20px] rounded text-xs  ${visitor.status === \"checked_in\"\r\n+                          ? \"bg-[rgba(1,210,30,0.2)] text-green-800\"\r\n+                          : visitor.status === \"checked_out\"\r\n+                            ? \"bg-[#E0DBF4] text-purple-800\"\r\n+                            : \"bg-yellow-200 text-yellow-800\"\r\n+                          }`}\r\n+                      >\r\n+                        {\r\n+                          visitor.status == \"checked_in\"\r\n+                            ? \"Checked In\"\r\n+                            : visitor.status == \"checked_out\"\r\n+                              ? \"Checked Out\"\r\n+                              : \"Registered\"\r\n+                        }\r\n+                      </div>\r\n \r\n \r\n-                      </TableCell>\r\n-                    </TableRow>\r\n-                  )))}\r\n+                    </TableCell>\r\n+                  </TableRow>\r\n+                )))}\r\n \r\n             </TableBody>\r\n           </Table>\r\n         </div>\r\n"
                }
            ],
            "date": 1754050884082,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { getCheckedOut } from \"@/services/checkedoutvisitors\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Upload, ChevronDown } from \"lucide-react\";\r\n\r\nexport default function Visitors() {\r\n  const [visitors, setVisitors] = useState([]);\r\n  const [filteredAllVisitors, setFilteredAllVisitors] = useState([]); // For export\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n  const [totalEntries, setTotalEntries] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchVisitors();\r\n  }, [currentPage, entriesPerPage, visitorTypeFilter]);\r\n\r\n  const fetchVisitors = async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const res = await getCheckedOut();\r\n      console.log(\" Full API response:\", res);\r\n      if (res.result_code === 0) {\r\n        let allData = res.data;\r\n\r\n        if (visitorTypeFilter !== \"all\") {\r\n          allData = allData.filter((v) => v.visitor_type === visitorTypeFilter);\r\n        }\r\n\r\n        setFilteredAllVisitors(allData); // Save all filtered data for export\r\n        setTotalEntries(allData.length);\r\n\r\n        const start = (currentPage - 1) * entriesPerPage;\r\n        const end = start + entriesPerPage;\r\n        const paginated = allData.slice(start, end);\r\n\r\n        setVisitors(paginated);\r\n      } else {\r\n        setVisitors([]);\r\n        setFilteredAllVisitors([]);\r\n        setTotalEntries(0);\r\n      }\r\n    } catch (error) {\r\n      \r\n      setVisitors([]);\r\n      setFilteredAllVisitors([]);\r\n      setTotalEntries(0);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleExportCSV = () => {\r\n    const headers = [\"Name\", \"Phone\", \"Visitor Unit\", \"Check In Time\", \"Check Out Time\", \"Verified By\", \"Status\"];\r\n    const rows = filteredAllVisitors.map((v) => [\r\n      v.visitor_name,\r\n      v.phone_number,\r\n      v.host_unit || \"N/A\",\r\n      v.check_in_time || \"--\",\r\n      v.check_out_time || \"--\",\r\n      v.status,\r\n    ]);\r\n\r\n    let csvContent = \"data:text/csv;charset=utf-8,\" +\r\n      [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\r\n\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.href = encodedUri;\r\n    link.download = \"visitor_logs.csv\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n\r\n  const handleNext = () => {\r\n    if (currentPage < totalPages) setCurrentPage((p) => p + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentPage > 1) setCurrentPage((p) => p - 1);\r\n  };\r\n\r\n  const handleEntriesChange = (e) => {\r\n    setEntriesPerPage(Number(e.target.value));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setVisitorTypeFilter(e.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n        <div className=\"flex justify-between items-start p-6 \">\r\n          <h2 className=\"text-lg  font-bold font-['Inter']\">Checked Out Visitors</h2>\r\n\r\n        </div>\r\n\r\n        <div className=\"flex flex-row flex-wrap justify-between gap-4 px-6 pb-3 w-full  \">\r\n          <div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"text-[16px] text-gray-600\">Show</span>\r\n              <div className=\"relative\">\r\n                <select\r\n                  className=\"border border-[#6C757D] rounded-md px-4 py-2 text-[16px] bg-white w-[88px]  appearance-none pr-8 h-[48px]\"\r\n                  value={entriesPerPage}\r\n                  onChange={handleEntriesChange}\r\n                >\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n                {/* <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" /> */}\r\n                <img src=\"dropdown-checked-out.svg\" className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-9 w-9 text-gray-400 pointer-events-none\" alt=\"\" />\r\n              </div>\r\n              <span className=\"text-[16px] text-gray-600\">entries</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row gap-4 items center\">\r\n            <button\r\n              onClick={handleExportCSV}\r\n              className=\"flex items-center gap-2 h-[48px] px-4 pr-6 bg-[#005E0E] text-white rounded-lg hover:bg-[#123107] transition text-sm\"\r\n            >\r\n              <Upload />\r\n              Export\r\n            </button>\r\n\r\n            <div className=\"relative\">\r\n              <select\r\n                className=\"border border-[#6C757D] rounded-md px-3 py-2 text-[16px] bg-white w-[91px] appearance-none pr-8 h-[48px]\"\r\n                value={visitorTypeFilter}\r\n                onChange={handleFilterChange}\r\n              >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"recurring\">Recurring</option>\r\n                <option value=\"service\">Service</option>\r\n                <option value=\"one-time\">One-time</option>\r\n              </select>\r\n              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center px-6\">\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"p-4 \">\r\n          <Table>\r\n            <TableHeader >\r\n              <TableRow >\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Visitor Name</TableHead>\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Phone No.</TableHead>\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Visit Unit</TableHead>\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Check-In Time</TableHead>\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Check-Out Time</TableHead>\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Verified By</TableHead>\r\n                <TableHead className=\"text-[#495057] text-[16px]  font-bold font-['Inter'] \">Status</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n\r\n            <TableBody>\r\n              {loading ? (\r\n                <TableRow >\r\n                  <TableCell colSpan={6}>\r\n                    <div className=\"text-center text-gray-500 py-10\">Loading...</div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : visitors.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={6}>\r\n                    <div className=\"text-center text-gray-500 py-10\">No visitors found.</div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                visitors\r\n\r\n                  // .filter(visitor => visitor.status === \"checked_out\")\r\n                  .map((visitor, index) => (\r\n                    <TableRow key={index} className=\"even:bg-[#E0DBF4]/5 odd:bg-[#005E0E]/5\">\r\n                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.full_name}</TableCell>\r\n                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.phone_number}</TableCell>\r\n                      <TableCell className=\"text-[#495057] text-[13px]  font-['Inter'] p-4\">{visitor.unit_number}</TableCell>\r\n                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.check_in}</TableCell>\r\n                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.check_out}</TableCell>\r\n                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">{visitor.verifier}</TableCell>\r\n                      <TableCell className=\"text-[#495057] text-[13px]   font-['Inter'] p-4\">\r\n\r\n\r\n                        <div\r\n                          className={`flex items-center justify-center px-1 py-0.5 gap-2 w-[90px] h-[20px] rounded text-xs  ${visitor.status === \"checked_in\"\r\n                            ? \"bg-[rgba(1,210,30,0.2)] text-green-800\"\r\n                            : visitor.status === \"checked_out\"\r\n                              ? \"bg-[#E0DBF4] text-purple-800\"\r\n                              : \"bg-yellow-200 text-yellow-800\"\r\n                            }`}\r\n                        >\r\n                          {\r\n                            visitor.status == \"checked_in\"\r\n                              ? \"Checked In\"\r\n                              : visitor.status == \"checked_out\"\r\n                                ? \"Checked Out\"\r\n                                : \"Registered\"\r\n                          }\r\n                        </div>\r\n\r\n\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )))}\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between w-full px-4 h-auto sm:h-12 gap-2 sm:gap-0\">\r\n        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n          <button\r\n            onClick={handlePrevious}\r\n            disabled={currentPage === 1}\r\n            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button className=\"w-14 h-12 flex items-center justify-center bg-[#005E0E] text-white rounded-lg hover:bg-[#004a0b] transition\">\r\n            {currentPage}\r\n          </button>\r\n          <button\r\n            onClick={handleNext}\r\n            disabled={currentPage === totalPages}\r\n            className=\"h-12 flex items-center justify-center px-6 py-2 border border-[#005E0E] rounded-lg bg-white text-[#005E0E] hover:bg-[#f4fdf5] transition disabled:opacity-50\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"text-sm text-gray-600 mt-4 sm:mt-0\">\r\n          Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n          {Math.min(currentPage * entriesPerPage, totalEntries)} of{\" \"}\r\n          {totalEntries} entries\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"
        }
    ]
}