{
    "sourceFile": "src/components/tables/Users.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1755867531290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755867538102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -493,5 +493,5 @@\n       }\r\n \r\n     </div >\r\n   );\r\n-}\r\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1755867548673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,497 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { userService } from \"../../services/user\";\r\n+import dayjs from \"dayjs\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { MoreHorizontal, ChevronDown, X } from \"lucide-react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function Users({ users = [], setUsers = () => { } }) {\r\n+  const navigate = useNavigate();\r\n+  const [openMenuIndex, setOpenMenuIndex] = useState(null);\r\n+  const [selectedUser, setSelectedUser] = useState(null);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n+  const [userToDelete, setUserToDelete] = useState(null);\r\n+  const [roleFilter, setRoleFilter] = useState(\"all\");\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [searchQuery, setSearchQuery] = useState(\"\");\r\n+  // const [sortOrderAsc, setSortOrderAsc] = useState(true);\r\n+  const [sortdOrderAsc, setSortdOrderAsc] = useState(true);\r\n+\r\n+\r\n+\r\n+\r\n+  const filteredUsers = users\r\n+    .filter((user) => {\r\n+      if (roleFilter === \"all\") return true;\r\n+      return user.role === roleFilter;\r\n+    })\r\n+    .filter((user) => {\r\n+      const fullName = `${user.first_name} ${user.last_name}`.toLowerCase();\r\n+      return fullName.includes(searchQuery.toLowerCase());\r\n+    })\r\n+    // .sort((a, b) => {\r\n+    //   const nameA = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n+    //   const nameB = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n+    //   return sortOrderAsc ? nameA.localeCompare(nameB) : nameB.localeCompare(nameA);\r\n+    // })\r\n+    .sort((a, b) => {\r\n+      const dateA = `${a.date_joined} ${a.date_joined}`.toLowerCase();\r\n+      const dateB = `${b.date_joined} ${b.date_joined}`.toLowerCase();\r\n+      return sortdOrderAsc ? dateA.localeCompare(dateB) : dateB.localeCompare(dateA);\r\n+    });\r\n+\r\n+\r\n+\r\n+  const visibleUsers = filteredUsers.slice(0, entriesPerPage);\r\n+  const handleToggleStatus = async () => {\r\n+    try {\r\n+      const updatedUser = await userService.toggleUserStatus(selectedUser.id, selectedUser.is_active);\r\n+      setSelectedUser(updatedUser);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to toggle user status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (event) => {\r\n+      if (\r\n+        !event.target.closest(\".user-menu-trigger\") &&\r\n+        !event.target.closest(\".user-menu-dropdown\")\r\n+      ) {\r\n+        setOpenMenuIndex(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  const handleView = (user) => {\r\n+    setSelectedUser(user);\r\n+    console.log(\"Selected User:\", user);\r\n+    setShowModal(true);\r\n+    setOpenMenuIndex(null);\r\n+  };\r\n+\r\n+  const handleEdit = (user) => {\r\n+    navigate(\"/userform\", { state: { user, editMode: true } });\r\n+  }; const handleDisable = async (user) => {\r\n+    try {\r\n+      const updatedUser = await userService.toggleUserStatus(user.id, user.is_active);\r\n+      // Update users state with the updated user status\r\n+      setUsers((prevUsers) =>\r\n+        prevUsers.map((u) => (u.id === updatedUser.id ? updatedUser : u))\r\n+      );\r\n+      // Close the dropdown menu\r\n+      setOpenMenuIndex(null);\r\n+\r\n+      // If the toggled user is the selectedUser (modal), update it too\r\n+      if (selectedUser && selectedUser.id === updatedUser.id) {\r\n+        setSelectedUser(updatedUser);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Failed to toggle user status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-7xl mx-auto overflow-y-auto p-4 h-full relative\">\r\n+      <div className=\"bg-white rounded-xl shadow-sm overflow-y-auto p-0 h-full flex flex-col\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-4\">\r\n+          <h2 className=\"text-xl font-semibold text-[#000]\">Manage Users</h2>\r\n+          <div className=\"flex gap-2\">\r\n+            {[\r\n+              { label: \"All\", value: \"all\" },\r\n+              { label: \"Security\", value: \"security\" },\r\n+              { label: \"Resident\", value: \"tenant\" },\r\n+\r\n+            ].map((role) => (\r\n+              <Button\r\n+                key={role.value}\r\n+                className={`px-5 py-2 rounded-md text-white ${roleFilter === role.value\r\n+                  ? \"bg-[#005e0e]\"\r\n+                  : \"bg-[#005e0e] hover:[#005e0e]\"\r\n+                  }`}\r\n+                onClick={() => setRoleFilter(role.value)}\r\n+              >\r\n+                {role.label}\r\n+              </Button>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+\r\n+        <div className=\"border-t border-gray-300 w-full\" />\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-4 py-4\">\r\n+          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n+            Show\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 bg-white pr-8 appearance-none\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => setEntriesPerPage(Number(e.target.value))}\r\n+              >\r\n+                <option value={5}>5</option>\r\n+                <option value={10}>10</option>\r\n+                <option value={25}>25</option>\r\n+                <option value={50}>50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            entries\r\n+          </div>\r\n+\r\n+          <div className=\"text-sm text-gray-600 flex gap-4 items-center\">\r\n+            {roleFilter === \"all\" && (\r\n+              <div className=\"relative w-full max-w-sm\">\r\n+                <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2\">\r\n+                  <img src=\"/search-icon.svg\" alt=\"Search Icon\" className=\"w-3 h-3\" />\r\n+                </div>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={searchQuery}\r\n+                  placeholder=\"Search\"\r\n+                  className=\"border border-gray-300 rounded-md pl-10 pr-3 py-2 w-full\"\r\n+                  onChange={(e) => setSearchQuery(e.target.value)}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {roleFilter === \"tenant\" && (\r\n+              <button\r\n+                className=\"bg-[#005e0e] text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center gap-2\"\r\n+                onClick={() => navigate(\"/residentregistration\", { state: { role: \"tenant\" } })}\r\n+              >\r\n+                <img src=\"/plus-visitors.svg\" alt=\"Add\" className=\"w-5 h-5\" />\r\n+                Add Resident\r\n+              </button>\r\n+            )}\r\n+\r\n+            {roleFilter === \"security\" && (\r\n+              <button\r\n+                className=\"bg-[#005e0e] text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center gap-2\"\r\n+                onClick={() => navigate(\"/securityregistration\", { state: { role: \"security\" } })}\r\n+              >\r\n+                <img src=\"/plus-visitors.svg\" alt=\"Add\" className=\"w-5 h-5\" />\r\n+                Add Security\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+\r\n+        </div>\r\n+\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"px-4 overflow-y-auto max-h-[500px]\">\r\n+\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                {/* <TableHead>Photo</TableHead> */}\r\n+                <TableHead>Name</TableHead>\r\n+                {/* <TableHead /> */}\r\n+                <TableHead>Phone</TableHead>\r\n+                <TableHead>Role</TableHead>\r\n+                <TableHead>Unit</TableHead>\r\n+                <TableHead className=\"cursor-pointer select-none\" onClick={() => setSortdOrderAsc(!sortdOrderAsc)}>Date Joined</TableHead>\r\n+                <TableHead>Status</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {visibleUsers.map((user, index) => (\r\n+                <TableRow\r\n+                  key={index}\r\n+                  className={index % 2 === 0 ? \"bg-[#f2f7f3]\" : \"\"}\r\n+                >\r\n+                  {/* <TableCell>\r\n+                  {user.profile_picture ? (\r\n+                    <img\r\n+                      src={user.profile_picture}\r\n+                      alt={user.first_name}\r\n+                      crossOrigin=\"anonymous\"\r\n+                      className=\"h-10 w-10 rounded-full object-cover\"\r\n+                    />\r\n+                  ) : (\r\n+                    <div className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center text-xs text-white\">\r\n+                      N/A\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell> */}\r\n+\r\n+                  <TableCell className=\"font-medium\">\r\n+                    {user.first_name} {user.last_name}\r\n+                  </TableCell>\r\n+                  <TableCell>\r\n+                    {user.phone_number || (\r\n+                      <span className=\"text-gray-400 italic\">No Phone</span>\r\n+                    )}\r\n+                  </TableCell>\r\n+                  <TableCell>\r\n+                    {user.role === \"tenant\"\r\n+                      ? \"Resident\"\r\n+                      : user.role === \"security\"\r\n+                        ? \"Security\"\r\n+                        : \"Administrator\"}\r\n+                  </TableCell>\r\n+\r\n+                  <TableCell>\r\n+                    {user.resident_profile ? user?.resident_profile?.unit_name : user?.security_profile.post}\r\n+                  </TableCell>\r\n+                  <TableCell>{dayjs(user.date_joined).format(\"YYYY-MM-DD\")}</TableCell>\r\n+                  <TableCell>\r\n+                    {user.is_active ? (\r\n+                      <span className=\"text-green-600 font-semibold\">\r\n+                        Active\r\n+                      </span>\r\n+                    ) : (\r\n+                      <span className=\"text-red-600 font-semibold\">\r\n+                        Inactive\r\n+                      </span>\r\n+                    )}\r\n+                  </TableCell>\r\n+                  <TableCell className=\"relative user-menu-trigger\">\r\n+                    <MoreHorizontal\r\n+                      className=\"cursor-pointer text-muted-foreground\"\r\n+                      onClick={() =>\r\n+                        setOpenMenuIndex(openMenuIndex === index ? null : index)\r\n+                      }\r\n+                    />\r\n+                    {openMenuIndex === index && (\r\n+                      <div className=\"absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-md shadow-md z-10 user-menu-dropdown\">\r\n+                        <ul className=\"text-sm text-gray-700\">\r\n+                          <li\r\n+                            className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n+                            onClick={() => handleView(user)}\r\n+                          >\r\n+                            View\r\n+                          </li>\r\n+                          <li\r\n+                            className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n+                            onClick={() => handleEdit(user)}\r\n+                          >\r\n+                            Edit\r\n+                          </li>\r\n+                          <li\r\n+                            className={`px-4 py-2 hover:bg-gray-100 cursor-pointer ${user.is_active ? \"\" : \"text-green-600\"\r\n+                              }`}\r\n+                            onClick={() => handleDisable(user)}\r\n+                          >\r\n+                            {user.is_active ? \"Disable\" : \"Enable\"}\r\n+                          </li>\r\n+\r\n+                          <li className=\"px-4 py-2 hover:bg-red-50 text-red-600 cursor-pointer\" onClick={() => {\r\n+                            setUserToDelete(user);\r\n+                            setShowDeleteModal(true);\r\n+                            setOpenMenuIndex(null);\r\n+                          }}>\r\n+                            Delete\r\n+                          </li>\r\n+\r\n+\r\n+                        </ul>\r\n+                      </div>\r\n+                    )}\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ))}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+\r\n+\r\n+      {/* View Modal */}\r\n+      {\r\n+        showModal && selectedUser && (\r\n+          <div className=\"absolute top-20 right-8 bg-white border border-gray-300 shadow-lg rounded-lg w-[400px] z-50 p-6\">\r\n+            <button\r\n+              onClick={() => setShowModal(false)}\r\n+              className=\"absolute top-4 right-4 text-gray-500 hover:text-black\"\r\n+            >\r\n+              <X className=\"w-6 h-6\" />\r\n+            </button>\r\n+\r\n+            <div className=\"flex flex-col gap-8\">\r\n+              {/* Header */}\r\n+              <div className=\"flex items-center gap-6 border-b pb-4\">\r\n+                {selectedUser.profile_picture ? (\r\n+                  <img\r\n+                    src={selectedUser.profile_picture}\r\n+                    alt={`${selectedUser.first_name} ${selectedUser.last_name}`}\r\n+                    crossOrigin=\"anonymous\"\r\n+                    className=\"w-[140px] h-[140px] rounded-full object-cover\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-[140px] h-[140px] rounded-full bg-gray-300 flex items-center justify-center text-xl text-white\">\r\n+                    N/A\r\n+                  </div>\r\n+                )}\r\n+\r\n+                <div>\r\n+                  <h2 className=\"text-xl font-bold text-gray-700\">\r\n+                    {selectedUser.first_name} {selectedUser.last_name}\r\n+                  </h2>\r\n+                  <div className=\"flex gap-6 mt-4 text-sm text-gray-700\">\r\n+                    <div>\r\n+                      <div>Phone</div>\r\n+                      <div>Role</div>\r\n+                    </div>\r\n+                    <div>\r\n+                      <div>:</div>\r\n+                      <div>:</div>\r\n+                    </div>\r\n+                    <div>\r\n+                      <div>{selectedUser.phone_number || \"No Phone\"}</div>\r\n+                      <div>{selectedUser.role === \"tenant\"\r\n+                        ? \"Resident\"\r\n+                        : selectedUser.role === \"security\"\r\n+                          ? \"Security\"\r\n+                          : \"Administrator\"}\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              {/* Contact Info */}\r\n+              <div>\r\n+                <h3 className=\"text-green-800 font-bold mb-2\">\r\n+                  Contact Information\r\n+                </h3>\r\n+                <div className=\"flex gap-12 text-sm text-gray-700\">\r\n+                  <div>\r\n+                    <div>Email</div>\r\n+                    <div>ID No</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <div>:</div>\r\n+                    <div>:</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <div>{selectedUser.email}</div>\r\n+                    <div>{selectedUser.id_number || \"N/A\"}</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              {/* Status */}\r\n+              <div>\r\n+                <h3 className=\"text-green-800 font-bold mb-2\">Account Status</h3>\r\n+                <div className=\"flex gap-12 items-center text-sm text-gray-700\">\r\n+                  <div>Current Status</div>\r\n+                  <div>:</div>\r\n+                  <div\r\n+                    className={`${selectedUser.is_active\r\n+                      ? \"bg-green-100 text-green-800\"\r\n+                      : \"bg-red-100 text-red-800\"\r\n+                      } px-2 py-1 rounded text-sm w-[90px] text-center`}\r\n+                  >\r\n+                    {selectedUser.is_active ? \"Active\" : \"Inactive\"}\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              {/* Buttons */}\r\n+              <div className=\"flex gap-4\">\r\n+                <button\r\n+                  onClick={handleToggleStatus}\r\n+                  className={`border px-6 py-2 rounded font-semibold ${selectedUser?.is_active\r\n+                    ? \"border-red-600 text-red-600 hover:bg-red-100\"\r\n+                    : \"border-green-600 text-green-600 hover:bg-green-100\"\r\n+                    }`}\r\n+                >\r\n+                  {selectedUser?.is_active ? \"DISABLE\" : \"ENABLE\"}\r\n+                </button>\r\n+\r\n+                <button\r\n+                  className=\"bg-red-600 text-white px-6 py-2 rounded shadow\"\r\n+                  onClick={() => {\r\n+                    setUserToDelete(selectedUser);\r\n+                    setShowModal(false);\r\n+                    setShowDeleteModal(true);\r\n+                  }}\r\n+                >\r\n+                  DELETE\r\n+                </button>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )\r\n+      }\r\n+\r\n+      {\r\n+        showDeleteModal && userToDelete && (\r\n+          <div className=\"absolute top-24 right-8 bg-white rounded-xl border shadow-lg p-6 w-[300px] z-50 flex flex-col items-center gap-6\">\r\n+            <div className=\"bg-[#fee9e7] p-2 rounded-full\">\r\n+              <img\r\n+                src=\"/material-symbols-light-warning-outline-rounded0.svg\"\r\n+                alt=\"Warning\"\r\n+                className=\"w-6 h-6\"\r\n+              />\r\n+            </div>\r\n+            <p className=\"text-center text-sm text-black\">\r\n+              Are you sure you want to delete{\" \"}\r\n+              <strong>\r\n+                {userToDelete.first_name} {userToDelete.last_name}\r\n+              </strong>\r\n+              ?<br />\r\n+              This action is irreversible.\r\n+            </p>\r\n+            <div className=\"w-full flex flex-col gap-3\">\r\n+              <button\r\n+                onClick={async () => {\r\n+                  try {\r\n+                    // Call your delete API\r\n+                    await userService.deleteUser(userToDelete.id);\r\n+\r\n+                    // Update local state\r\n+                    setUsers((prev) =>\r\n+                      prev.filter((u) => u.id !== userToDelete.id)\r\n+                    );\r\n+\r\n+                    // Close modal\r\n+                    setShowDeleteModal(false);\r\n+                    setUserToDelete(null);\r\n+                  } catch (error) {\r\n+                    console.error(\"Failed to delete user:\", error);\r\n+                    alert(\"Something went wrong while deleting the user.\");\r\n+                  }\r\n+                }}\r\n+                className=\"bg-[#e61c11] text-white w-full py-2 rounded shadow\"\r\n+              >\r\n+                DELETE USER\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowDeleteModal(false)}\r\n+                className=\"border border-[#0a5b60] text-black w-full py-2 rounded\"\r\n+              >\r\n+                CANCEL\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )\r\n+      }\r\n+\r\n+    </div >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1755867554064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,497 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { userService } from \"../../services/user\";\r\n+import dayjs from \"dayjs\";\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from \"@/components/ui/table\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { MoreHorizontal, ChevronDown, X } from \"lucide-react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function Users({ users = [], setUsers = () => { } }) {\r\n+  const navigate = useNavigate();\r\n+  const [openMenuIndex, setOpenMenuIndex] = useState(null);\r\n+  const [selectedUser, setSelectedUser] = useState(null);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n+  const [userToDelete, setUserToDelete] = useState(null);\r\n+  const [roleFilter, setRoleFilter] = useState(\"all\");\r\n+  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n+  const [searchQuery, setSearchQuery] = useState(\"\");\r\n+  // const [sortOrderAsc, setSortOrderAsc] = useState(true);\r\n+  const [sortdOrderAsc, setSortdOrderAsc] = useState(true);\r\n+\r\n+\r\n+\r\n+\r\n+  const filteredUsers = users\r\n+    .filter((user) => {\r\n+      if (roleFilter === \"all\") return true;\r\n+      return user.role === roleFilter;\r\n+    })\r\n+    .filter((user) => {\r\n+      const fullName = `${user.first_name} ${user.last_name}`.toLowerCase();\r\n+      return fullName.includes(searchQuery.toLowerCase());\r\n+    })\r\n+    // .sort((a, b) => {\r\n+    //   const nameA = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n+    //   const nameB = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n+    //   return sortOrderAsc ? nameA.localeCompare(nameB) : nameB.localeCompare(nameA);\r\n+    // })\r\n+    .sort((a, b) => {\r\n+      const dateA = `${a.date_joined} ${a.date_joined}`.toLowerCase();\r\n+      const dateB = `${b.date_joined} ${b.date_joined}`.toLowerCase();\r\n+      return sortdOrderAsc ? dateA.localeCompare(dateB) : dateB.localeCompare(dateA);\r\n+    });\r\n+\r\n+\r\n+\r\n+  const visibleUsers = filteredUsers.slice(0, entriesPerPage);\r\n+  const handleToggleStatus = async () => {\r\n+    try {\r\n+      const updatedUser = await userService.toggleUserStatus(selectedUser.id, selectedUser.is_active);\r\n+      setSelectedUser(updatedUser);\r\n+    } catch (error) {\r\n+      console.error(\"Failed to toggle user status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (event) => {\r\n+      if (\r\n+        !event.target.closest(\".user-menu-trigger\") &&\r\n+        !event.target.closest(\".user-menu-dropdown\")\r\n+      ) {\r\n+        setOpenMenuIndex(null);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  const handleView = (user) => {\r\n+    setSelectedUser(user);\r\n+    console.log(\"Selected User:\", user);\r\n+    setShowModal(true);\r\n+    setOpenMenuIndex(null);\r\n+  };\r\n+\r\n+  const handleEdit = (user) => {\r\n+    navigate(\"/userform\", { state: { user, editMode: true } });\r\n+  }; const handleDisable = async (user) => {\r\n+    try {\r\n+      const updatedUser = await userService.toggleUserStatus(user.id, user.is_active);\r\n+      // Update users state with the updated user status\r\n+      setUsers((prevUsers) =>\r\n+        prevUsers.map((u) => (u.id === updatedUser.id ? updatedUser : u))\r\n+      );\r\n+      // Close the dropdown menu\r\n+      setOpenMenuIndex(null);\r\n+\r\n+      // If the toggled user is the selectedUser (modal), update it too\r\n+      if (selectedUser && selectedUser.id === updatedUser.id) {\r\n+        setSelectedUser(updatedUser);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Failed to toggle user status:\", error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <div className=\"w-full max-w-7xl mx-auto overflow-y-auto p-4 h-full relative\">\r\n+      <div className=\"bg-white rounded-xl shadow-sm overflow-y-auto p-0 h-full flex flex-col\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center p-4\">\r\n+          <h2 className=\"text-xl font-semibold text-[#000]\">Manage Users</h2>\r\n+          <div className=\"flex gap-2\">\r\n+            {[\r\n+              { label: \"All\", value: \"all\" },\r\n+              { label: \"Security\", value: \"security\" },\r\n+              { label: \"Resident\", value: \"tenant\" },\r\n+\r\n+            ].map((role) => (\r\n+              <Button\r\n+                key={role.value}\r\n+                className={`px-5 py-2 rounded-md text-white ${roleFilter === role.value\r\n+                  ? \"bg-[#005e0e]\"\r\n+                  : \"bg-[#005e0e] hover:[#005e0e]\"\r\n+                  }`}\r\n+                onClick={() => setRoleFilter(role.value)}\r\n+              >\r\n+                {role.label}\r\n+              </Button>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+\r\n+\r\n+        <div className=\"border-t border-gray-300 w-full\" />\r\n+\r\n+        {/* Filters */}\r\n+        <div className=\"flex justify-between items-center px-4 py-4\">\r\n+          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n+            Show\r\n+            <div className=\"relative\">\r\n+              <select\r\n+                className=\"border border-gray-300 rounded-md px-3 py-2 bg-white pr-8 appearance-none\"\r\n+                value={entriesPerPage}\r\n+                onChange={(e) => setEntriesPerPage(Number(e.target.value))}\r\n+              >\r\n+                <option value={5}>5</option>\r\n+                <option value={10}>10</option>\r\n+                <option value={25}>25</option>\r\n+                <option value={50}>50</option>\r\n+              </select>\r\n+              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n+            </div>\r\n+            entries\r\n+          </div>\r\n+\r\n+          <div className=\"text-sm text-gray-600 flex gap-4 items-center\">\r\n+            {roleFilter === \"all\" && (\r\n+              <div className=\"relative w-full max-w-sm\">\r\n+                <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2\">\r\n+                  <img src=\"/search-icon.svg\" alt=\"Search Icon\" className=\"w-3 h-3\" />\r\n+                </div>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={searchQuery}\r\n+                  placeholder=\"Search\"\r\n+                  className=\"border border-gray-300 rounded-md pl-10 pr-3 py-2 w-full\"\r\n+                  onChange={(e) => setSearchQuery(e.target.value)}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {roleFilter === \"tenant\" && (\r\n+              <button\r\n+                className=\"bg-[#005e0e] text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center gap-2\"\r\n+                onClick={() => navigate(\"/residentregistration\", { state: { role: \"tenant\" } })}\r\n+              >\r\n+                <img src=\"/plus-visitors.svg\" alt=\"Add\" className=\"w-5 h-5\" />\r\n+                Add Resident\r\n+              </button>\r\n+            )}\r\n+\r\n+            {roleFilter === \"security\" && (\r\n+              <button\r\n+                className=\"bg-[#005e0e] text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center gap-2\"\r\n+                onClick={() => navigate(\"/securityregistration\", { state: { role: \"security\" } })}\r\n+              >\r\n+                <img src=\"/plus-visitors.svg\" alt=\"Add\" className=\"w-5 h-5\" />\r\n+                Add Security\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+\r\n+        </div>\r\n+\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"px-4 overflow-y-auto max-h-[500px]\">\r\n+\r\n+          <Table>\r\n+            <TableHeader>\r\n+              <TableRow>\r\n+                {/* <TableHead>Photo</TableHead> */}\r\n+                <TableHead>Name</TableHead>\r\n+                {/* <TableHead /> */}\r\n+                <TableHead>Phone</TableHead>\r\n+                <TableHead>Role</TableHead>\r\n+                <TableHead>Unit</TableHead>\r\n+                <TableHead className=\"cursor-pointer select-none\" onClick={() => setSortdOrderAsc(!sortdOrderAsc)}>Date Joined</TableHead>\r\n+                <TableHead>Status</TableHead>\r\n+                <TableHead>Action</TableHead>\r\n+              </TableRow>\r\n+            </TableHeader>\r\n+\r\n+            <TableBody>\r\n+              {visibleUsers.map((user, index) => (\r\n+                <TableRow\r\n+                  key={index}\r\n+                  className={index % 2 === 0 ? \"bg-[#f2f7f3]\" : \"\"}\r\n+                >\r\n+                  {/* <TableCell>\r\n+                  {user.profile_picture ? (\r\n+                    <img\r\n+                      src={user.profile_picture}\r\n+                      alt={user.first_name}\r\n+                      crossOrigin=\"anonymous\"\r\n+                      className=\"h-10 w-10 rounded-full object-cover\"\r\n+                    />\r\n+                  ) : (\r\n+                    <div className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center text-xs text-white\">\r\n+                      N/A\r\n+                    </div>\r\n+                  )}\r\n+                </TableCell> */}\r\n+\r\n+                  <TableCell className=\"font-medium\">\r\n+                    {user.first_name} {user.last_name}\r\n+                  </TableCell>\r\n+                  <TableCell>\r\n+                    {user.phone_number || (\r\n+                      <span className=\"text-gray-400 italic\">No Phone</span>\r\n+                    )}\r\n+                  </TableCell>\r\n+                  <TableCell>\r\n+                    {user.role === \"tenant\"\r\n+                      ? \"Resident\"\r\n+                      : user.role === \"security\"\r\n+                        ? \"Security\"\r\n+                        : \"Administrator\"}\r\n+                  </TableCell>\r\n+\r\n+                  <TableCell>\r\n+                    {user.resident_profile ? user?.resident_profile?.unit_name : user?.security_profile?.post}\r\n+                  </TableCell>\r\n+                  <TableCell>{dayjs(user.date_joined).format(\"YYYY-MM-DD\")}</TableCell>\r\n+                  <TableCell>\r\n+                    {user.is_active ? (\r\n+                      <span className=\"text-green-600 font-semibold\">\r\n+                        Active\r\n+                      </span>\r\n+                    ) : (\r\n+                      <span className=\"text-red-600 font-semibold\">\r\n+                        Inactive\r\n+                      </span>\r\n+                    )}\r\n+                  </TableCell>\r\n+                  <TableCell className=\"relative user-menu-trigger\">\r\n+                    <MoreHorizontal\r\n+                      className=\"cursor-pointer text-muted-foreground\"\r\n+                      onClick={() =>\r\n+                        setOpenMenuIndex(openMenuIndex === index ? null : index)\r\n+                      }\r\n+                    />\r\n+                    {openMenuIndex === index && (\r\n+                      <div className=\"absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-md shadow-md z-10 user-menu-dropdown\">\r\n+                        <ul className=\"text-sm text-gray-700\">\r\n+                          <li\r\n+                            className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n+                            onClick={() => handleView(user)}\r\n+                          >\r\n+                            View\r\n+                          </li>\r\n+                          <li\r\n+                            className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n+                            onClick={() => handleEdit(user)}\r\n+                          >\r\n+                            Edit\r\n+                          </li>\r\n+                          <li\r\n+                            className={`px-4 py-2 hover:bg-gray-100 cursor-pointer ${user.is_active ? \"\" : \"text-green-600\"\r\n+                              }`}\r\n+                            onClick={() => handleDisable(user)}\r\n+                          >\r\n+                            {user.is_active ? \"Disable\" : \"Enable\"}\r\n+                          </li>\r\n+\r\n+                          <li className=\"px-4 py-2 hover:bg-red-50 text-red-600 cursor-pointer\" onClick={() => {\r\n+                            setUserToDelete(user);\r\n+                            setShowDeleteModal(true);\r\n+                            setOpenMenuIndex(null);\r\n+                          }}>\r\n+                            Delete\r\n+                          </li>\r\n+\r\n+\r\n+                        </ul>\r\n+                      </div>\r\n+                    )}\r\n+                  </TableCell>\r\n+                </TableRow>\r\n+              ))}\r\n+            </TableBody>\r\n+          </Table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+\r\n+\r\n+      {/* View Modal */}\r\n+      {\r\n+        showModal && selectedUser && (\r\n+          <div className=\"absolute top-20 right-8 bg-white border border-gray-300 shadow-lg rounded-lg w-[400px] z-50 p-6\">\r\n+            <button\r\n+              onClick={() => setShowModal(false)}\r\n+              className=\"absolute top-4 right-4 text-gray-500 hover:text-black\"\r\n+            >\r\n+              <X className=\"w-6 h-6\" />\r\n+            </button>\r\n+\r\n+            <div className=\"flex flex-col gap-8\">\r\n+              {/* Header */}\r\n+              <div className=\"flex items-center gap-6 border-b pb-4\">\r\n+                {selectedUser.profile_picture ? (\r\n+                  <img\r\n+                    src={selectedUser.profile_picture}\r\n+                    alt={`${selectedUser.first_name} ${selectedUser.last_name}`}\r\n+                    crossOrigin=\"anonymous\"\r\n+                    className=\"w-[140px] h-[140px] rounded-full object-cover\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-[140px] h-[140px] rounded-full bg-gray-300 flex items-center justify-center text-xl text-white\">\r\n+                    N/A\r\n+                  </div>\r\n+                )}\r\n+\r\n+                <div>\r\n+                  <h2 className=\"text-xl font-bold text-gray-700\">\r\n+                    {selectedUser.first_name} {selectedUser.last_name}\r\n+                  </h2>\r\n+                  <div className=\"flex gap-6 mt-4 text-sm text-gray-700\">\r\n+                    <div>\r\n+                      <div>Phone</div>\r\n+                      <div>Role</div>\r\n+                    </div>\r\n+                    <div>\r\n+                      <div>:</div>\r\n+                      <div>:</div>\r\n+                    </div>\r\n+                    <div>\r\n+                      <div>{selectedUser.phone_number || \"No Phone\"}</div>\r\n+                      <div>{selectedUser.role === \"tenant\"\r\n+                        ? \"Resident\"\r\n+                        : selectedUser.role === \"security\"\r\n+                          ? \"Security\"\r\n+                          : \"Administrator\"}\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              {/* Contact Info */}\r\n+              <div>\r\n+                <h3 className=\"text-green-800 font-bold mb-2\">\r\n+                  Contact Information\r\n+                </h3>\r\n+                <div className=\"flex gap-12 text-sm text-gray-700\">\r\n+                  <div>\r\n+                    <div>Email</div>\r\n+                    <div>ID No</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <div>:</div>\r\n+                    <div>:</div>\r\n+                  </div>\r\n+                  <div>\r\n+                    <div>{selectedUser.email}</div>\r\n+                    <div>{selectedUser.id_number || \"N/A\"}</div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              {/* Status */}\r\n+              <div>\r\n+                <h3 className=\"text-green-800 font-bold mb-2\">Account Status</h3>\r\n+                <div className=\"flex gap-12 items-center text-sm text-gray-700\">\r\n+                  <div>Current Status</div>\r\n+                  <div>:</div>\r\n+                  <div\r\n+                    className={`${selectedUser.is_active\r\n+                      ? \"bg-green-100 text-green-800\"\r\n+                      : \"bg-red-100 text-red-800\"\r\n+                      } px-2 py-1 rounded text-sm w-[90px] text-center`}\r\n+                  >\r\n+                    {selectedUser.is_active ? \"Active\" : \"Inactive\"}\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              {/* Buttons */}\r\n+              <div className=\"flex gap-4\">\r\n+                <button\r\n+                  onClick={handleToggleStatus}\r\n+                  className={`border px-6 py-2 rounded font-semibold ${selectedUser?.is_active\r\n+                    ? \"border-red-600 text-red-600 hover:bg-red-100\"\r\n+                    : \"border-green-600 text-green-600 hover:bg-green-100\"\r\n+                    }`}\r\n+                >\r\n+                  {selectedUser?.is_active ? \"DISABLE\" : \"ENABLE\"}\r\n+                </button>\r\n+\r\n+                <button\r\n+                  className=\"bg-red-600 text-white px-6 py-2 rounded shadow\"\r\n+                  onClick={() => {\r\n+                    setUserToDelete(selectedUser);\r\n+                    setShowModal(false);\r\n+                    setShowDeleteModal(true);\r\n+                  }}\r\n+                >\r\n+                  DELETE\r\n+                </button>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )\r\n+      }\r\n+\r\n+      {\r\n+        showDeleteModal && userToDelete && (\r\n+          <div className=\"absolute top-24 right-8 bg-white rounded-xl border shadow-lg p-6 w-[300px] z-50 flex flex-col items-center gap-6\">\r\n+            <div className=\"bg-[#fee9e7] p-2 rounded-full\">\r\n+              <img\r\n+                src=\"/material-symbols-light-warning-outline-rounded0.svg\"\r\n+                alt=\"Warning\"\r\n+                className=\"w-6 h-6\"\r\n+              />\r\n+            </div>\r\n+            <p className=\"text-center text-sm text-black\">\r\n+              Are you sure you want to delete{\" \"}\r\n+              <strong>\r\n+                {userToDelete.first_name} {userToDelete.last_name}\r\n+              </strong>\r\n+              ?<br />\r\n+              This action is irreversible.\r\n+            </p>\r\n+            <div className=\"w-full flex flex-col gap-3\">\r\n+              <button\r\n+                onClick={async () => {\r\n+                  try {\r\n+                    // Call your delete API\r\n+                    await userService.deleteUser(userToDelete.id);\r\n+\r\n+                    // Update local state\r\n+                    setUsers((prev) =>\r\n+                      prev.filter((u) => u.id !== userToDelete.id)\r\n+                    );\r\n+\r\n+                    // Close modal\r\n+                    setShowDeleteModal(false);\r\n+                    setUserToDelete(null);\r\n+                  } catch (error) {\r\n+                    console.error(\"Failed to delete user:\", error);\r\n+                    alert(\"Something went wrong while deleting the user.\");\r\n+                  }\r\n+                }}\r\n+                className=\"bg-[#e61c11] text-white w-full py-2 rounded shadow\"\r\n+              >\r\n+                DELETE USER\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowDeleteModal(false)}\r\n+                className=\"border border-[#0a5b60] text-black w-full py-2 rounded\"\r\n+              >\r\n+                CANCEL\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )\r\n+      }\r\n+\r\n+    </div >\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1755867531290,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { userService } from \"../../services/user\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { MoreHorizontal, ChevronDown, X } from \"lucide-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function Users({ users = [], setUsers = () => { } }) {\r\n  const navigate = useNavigate();\r\n  const [openMenuIndex, setOpenMenuIndex] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n  const [roleFilter, setRoleFilter] = useState(\"all\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  // const [sortOrderAsc, setSortOrderAsc] = useState(true);\r\n  const [sortdOrderAsc, setSortdOrderAsc] = useState(true);\r\n\r\n\r\n\r\n\r\n  const filteredUsers = users\r\n    .filter((user) => {\r\n      if (roleFilter === \"all\") return true;\r\n      return user.role === roleFilter;\r\n    })\r\n    .filter((user) => {\r\n      const fullName = `${user.first_name} ${user.last_name}`.toLowerCase();\r\n      return fullName.includes(searchQuery.toLowerCase());\r\n    })\r\n    // .sort((a, b) => {\r\n    //   const nameA = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n    //   const nameB = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n    //   return sortOrderAsc ? nameA.localeCompare(nameB) : nameB.localeCompare(nameA);\r\n    // })\r\n    .sort((a, b) => {\r\n      const dateA = `${a.date_joined} ${a.date_joined}`.toLowerCase();\r\n      const dateB = `${b.date_joined} ${b.date_joined}`.toLowerCase();\r\n      return sortdOrderAsc ? dateA.localeCompare(dateB) : dateB.localeCompare(dateA);\r\n    });\r\n\r\n\r\n\r\n  const visibleUsers = filteredUsers.slice(0, entriesPerPage);\r\n  const handleToggleStatus = async () => {\r\n    try {\r\n      const updatedUser = await userService.toggleUserStatus(selectedUser.id, selectedUser.is_active);\r\n      setSelectedUser(updatedUser);\r\n    } catch (error) {\r\n      console.error(\"Failed to toggle user status:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (\r\n        !event.target.closest(\".user-menu-trigger\") &&\r\n        !event.target.closest(\".user-menu-dropdown\")\r\n      ) {\r\n        setOpenMenuIndex(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  const handleView = (user) => {\r\n    setSelectedUser(user);\r\n    console.log(\"Selected User:\", user);\r\n    setShowModal(true);\r\n    setOpenMenuIndex(null);\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    navigate(\"/userform\", { state: { user, editMode: true } });\r\n  }; const handleDisable = async (user) => {\r\n    try {\r\n      const updatedUser = await userService.toggleUserStatus(user.id, user.is_active);\r\n      // Update users state with the updated user status\r\n      setUsers((prevUsers) =>\r\n        prevUsers.map((u) => (u.id === updatedUser.id ? updatedUser : u))\r\n      );\r\n      // Close the dropdown menu\r\n      setOpenMenuIndex(null);\r\n\r\n      // If the toggled user is the selectedUser (modal), update it too\r\n      if (selectedUser && selectedUser.id === updatedUser.id) {\r\n        setSelectedUser(updatedUser);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to toggle user status:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"w-full max-w-7xl mx-auto overflow-y-auto p-4 h-full relative\">\r\n      <div className=\"bg-white rounded-xl shadow-sm overflow-y-auto p-0 h-full flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center p-4\">\r\n          <h2 className=\"text-xl font-semibold text-[#000]\">Manage Users</h2>\r\n          <div className=\"flex gap-2\">\r\n            {[\r\n              { label: \"All\", value: \"all\" },\r\n              { label: \"Security\", value: \"security\" },\r\n              { label: \"Resident\", value: \"tenant\" },\r\n\r\n            ].map((role) => (\r\n              <Button\r\n                key={role.value}\r\n                className={`px-5 py-2 rounded-md text-white ${roleFilter === role.value\r\n                  ? \"bg-[#005e0e]\"\r\n                  : \"bg-[#005e0e] hover:[#005e0e]\"\r\n                  }`}\r\n                onClick={() => setRoleFilter(role.value)}\r\n              >\r\n                {role.label}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"border-t border-gray-300 w-full\" />\r\n\r\n        {/* Filters */}\r\n        <div className=\"flex justify-between items-center px-4 py-4\">\r\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n            Show\r\n            <div className=\"relative\">\r\n              <select\r\n                className=\"border border-gray-300 rounded-md px-3 py-2 bg-white pr-8 appearance-none\"\r\n                value={entriesPerPage}\r\n                onChange={(e) => setEntriesPerPage(Number(e.target.value))}\r\n              >\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n              </select>\r\n              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n            </div>\r\n            entries\r\n          </div>\r\n\r\n          <div className=\"text-sm text-gray-600 flex gap-4 items-center\">\r\n            {roleFilter === \"all\" && (\r\n              <div className=\"relative w-full max-w-sm\">\r\n                <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2\">\r\n                  <img src=\"/search-icon.svg\" alt=\"Search Icon\" className=\"w-3 h-3\" />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchQuery}\r\n                  placeholder=\"Search\"\r\n                  className=\"border border-gray-300 rounded-md pl-10 pr-3 py-2 w-full\"\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {roleFilter === \"tenant\" && (\r\n              <button\r\n                className=\"bg-[#005e0e] text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center gap-2\"\r\n                onClick={() => navigate(\"/residentregistration\", { state: { role: \"tenant\" } })}\r\n              >\r\n                <img src=\"/plus-visitors.svg\" alt=\"Add\" className=\"w-5 h-5\" />\r\n                Add Resident\r\n              </button>\r\n            )}\r\n\r\n            {roleFilter === \"security\" && (\r\n              <button\r\n                className=\"bg-[#005e0e] text-white px-4 py-2 rounded-md hover:bg-green-700 flex items-center gap-2\"\r\n                onClick={() => navigate(\"/securityregistration\", { state: { role: \"security\" } })}\r\n              >\r\n                <img src=\"/plus-visitors.svg\" alt=\"Add\" className=\"w-5 h-5\" />\r\n                Add Security\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        {/* Table */}\r\n        <div className=\"px-4 overflow-y-auto max-h-[500px]\">\r\n\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                {/* <TableHead>Photo</TableHead> */}\r\n                <TableHead>Name</TableHead>\r\n                {/* <TableHead /> */}\r\n                <TableHead>Phone</TableHead>\r\n                <TableHead>Role</TableHead>\r\n                <TableHead>Unit</TableHead>\r\n                <TableHead className=\"cursor-pointer select-none\" onClick={() => setSortdOrderAsc(!sortdOrderAsc)}>Date Joined</TableHead>\r\n                <TableHead>Status</TableHead>\r\n                <TableHead>Action</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n\r\n            <TableBody>\r\n              {visibleUsers.map((user, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  className={index % 2 === 0 ? \"bg-[#f2f7f3]\" : \"\"}\r\n                >\r\n                  {/* <TableCell>\r\n                  {user.profile_picture ? (\r\n                    <img\r\n                      src={user.profile_picture}\r\n                      alt={user.first_name}\r\n                      crossOrigin=\"anonymous\"\r\n                      className=\"h-10 w-10 rounded-full object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center text-xs text-white\">\r\n                      N/A\r\n                    </div>\r\n                  )}\r\n                </TableCell> */}\r\n\r\n                  <TableCell className=\"font-medium\">\r\n                    {user.first_name} {user.last_name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {user.phone_number || (\r\n                      <span className=\"text-gray-400 italic\">No Phone</span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {user.role === \"tenant\"\r\n                      ? \"Resident\"\r\n                      : user.role === \"security\"\r\n                        ? \"Security\"\r\n                        : \"Administrator\"}\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    {user.resident_profile ? user/.resident_profile.unit_name : user.security_profile.post}\r\n                  </TableCell>\r\n                  <TableCell>{dayjs(user.date_joined).format(\"YYYY-MM-DD\")}</TableCell>\r\n                  <TableCell>\r\n                    {user.is_active ? (\r\n                      <span className=\"text-green-600 font-semibold\">\r\n                        Active\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"text-red-600 font-semibold\">\r\n                        Inactive\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell className=\"relative user-menu-trigger\">\r\n                    <MoreHorizontal\r\n                      className=\"cursor-pointer text-muted-foreground\"\r\n                      onClick={() =>\r\n                        setOpenMenuIndex(openMenuIndex === index ? null : index)\r\n                      }\r\n                    />\r\n                    {openMenuIndex === index && (\r\n                      <div className=\"absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-md shadow-md z-10 user-menu-dropdown\">\r\n                        <ul className=\"text-sm text-gray-700\">\r\n                          <li\r\n                            className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n                            onClick={() => handleView(user)}\r\n                          >\r\n                            View\r\n                          </li>\r\n                          <li\r\n                            className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n                            onClick={() => handleEdit(user)}\r\n                          >\r\n                            Edit\r\n                          </li>\r\n                          <li\r\n                            className={`px-4 py-2 hover:bg-gray-100 cursor-pointer ${user.is_active ? \"\" : \"text-green-600\"\r\n                              }`}\r\n                            onClick={() => handleDisable(user)}\r\n                          >\r\n                            {user.is_active ? \"Disable\" : \"Enable\"}\r\n                          </li>\r\n\r\n                          <li className=\"px-4 py-2 hover:bg-red-50 text-red-600 cursor-pointer\" onClick={() => {\r\n                            setUserToDelete(user);\r\n                            setShowDeleteModal(true);\r\n                            setOpenMenuIndex(null);\r\n                          }}>\r\n                            Delete\r\n                          </li>\r\n\r\n\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* View Modal */}\r\n      {\r\n        showModal && selectedUser && (\r\n          <div className=\"absolute top-20 right-8 bg-white border border-gray-300 shadow-lg rounded-lg w-[400px] z-50 p-6\">\r\n            <button\r\n              onClick={() => setShowModal(false)}\r\n              className=\"absolute top-4 right-4 text-gray-500 hover:text-black\"\r\n            >\r\n              <X className=\"w-6 h-6\" />\r\n            </button>\r\n\r\n            <div className=\"flex flex-col gap-8\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center gap-6 border-b pb-4\">\r\n                {selectedUser.profile_picture ? (\r\n                  <img\r\n                    src={selectedUser.profile_picture}\r\n                    alt={`${selectedUser.first_name} ${selectedUser.last_name}`}\r\n                    crossOrigin=\"anonymous\"\r\n                    className=\"w-[140px] h-[140px] rounded-full object-cover\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"w-[140px] h-[140px] rounded-full bg-gray-300 flex items-center justify-center text-xl text-white\">\r\n                    N/A\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <h2 className=\"text-xl font-bold text-gray-700\">\r\n                    {selectedUser.first_name} {selectedUser.last_name}\r\n                  </h2>\r\n                  <div className=\"flex gap-6 mt-4 text-sm text-gray-700\">\r\n                    <div>\r\n                      <div>Phone</div>\r\n                      <div>Role</div>\r\n                    </div>\r\n                    <div>\r\n                      <div>:</div>\r\n                      <div>:</div>\r\n                    </div>\r\n                    <div>\r\n                      <div>{selectedUser.phone_number || \"No Phone\"}</div>\r\n                      <div>{selectedUser.role === \"tenant\"\r\n                        ? \"Resident\"\r\n                        : selectedUser.role === \"security\"\r\n                          ? \"Security\"\r\n                          : \"Administrator\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Contact Info */}\r\n              <div>\r\n                <h3 className=\"text-green-800 font-bold mb-2\">\r\n                  Contact Information\r\n                </h3>\r\n                <div className=\"flex gap-12 text-sm text-gray-700\">\r\n                  <div>\r\n                    <div>Email</div>\r\n                    <div>ID No</div>\r\n                  </div>\r\n                  <div>\r\n                    <div>:</div>\r\n                    <div>:</div>\r\n                  </div>\r\n                  <div>\r\n                    <div>{selectedUser.email}</div>\r\n                    <div>{selectedUser.id_number || \"N/A\"}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Status */}\r\n              <div>\r\n                <h3 className=\"text-green-800 font-bold mb-2\">Account Status</h3>\r\n                <div className=\"flex gap-12 items-center text-sm text-gray-700\">\r\n                  <div>Current Status</div>\r\n                  <div>:</div>\r\n                  <div\r\n                    className={`${selectedUser.is_active\r\n                      ? \"bg-green-100 text-green-800\"\r\n                      : \"bg-red-100 text-red-800\"\r\n                      } px-2 py-1 rounded text-sm w-[90px] text-center`}\r\n                  >\r\n                    {selectedUser.is_active ? \"Active\" : \"Inactive\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Buttons */}\r\n              <div className=\"flex gap-4\">\r\n                <button\r\n                  onClick={handleToggleStatus}\r\n                  className={`border px-6 py-2 rounded font-semibold ${selectedUser?.is_active\r\n                    ? \"border-red-600 text-red-600 hover:bg-red-100\"\r\n                    : \"border-green-600 text-green-600 hover:bg-green-100\"\r\n                    }`}\r\n                >\r\n                  {selectedUser?.is_active ? \"DISABLE\" : \"ENABLE\"}\r\n                </button>\r\n\r\n                <button\r\n                  className=\"bg-red-600 text-white px-6 py-2 rounded shadow\"\r\n                  onClick={() => {\r\n                    setUserToDelete(selectedUser);\r\n                    setShowModal(false);\r\n                    setShowDeleteModal(true);\r\n                  }}\r\n                >\r\n                  DELETE\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      {\r\n        showDeleteModal && userToDelete && (\r\n          <div className=\"absolute top-24 right-8 bg-white rounded-xl border shadow-lg p-6 w-[300px] z-50 flex flex-col items-center gap-6\">\r\n            <div className=\"bg-[#fee9e7] p-2 rounded-full\">\r\n              <img\r\n                src=\"/material-symbols-light-warning-outline-rounded0.svg\"\r\n                alt=\"Warning\"\r\n                className=\"w-6 h-6\"\r\n              />\r\n            </div>\r\n            <p className=\"text-center text-sm text-black\">\r\n              Are you sure you want to delete{\" \"}\r\n              <strong>\r\n                {userToDelete.first_name} {userToDelete.last_name}\r\n              </strong>\r\n              ?<br />\r\n              This action is irreversible.\r\n            </p>\r\n            <div className=\"w-full flex flex-col gap-3\">\r\n              <button\r\n                onClick={async () => {\r\n                  try {\r\n                    // Call your delete API\r\n                    await userService.deleteUser(userToDelete.id);\r\n\r\n                    // Update local state\r\n                    setUsers((prev) =>\r\n                      prev.filter((u) => u.id !== userToDelete.id)\r\n                    );\r\n\r\n                    // Close modal\r\n                    setShowDeleteModal(false);\r\n                    setUserToDelete(null);\r\n                  } catch (error) {\r\n                    console.error(\"Failed to delete user:\", error);\r\n                    alert(\"Something went wrong while deleting the user.\");\r\n                  }\r\n                }}\r\n                className=\"bg-[#e61c11] text-white w-full py-2 rounded shadow\"\r\n              >\r\n                DELETE USER\r\n              </button>\r\n              <button\r\n                onClick={() => setShowDeleteModal(false)}\r\n                className=\"border border-[#0a5b60] text-black w-full py-2 rounded\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    </div >\r\n  );\r\n}\r\n"
        }
    ]
}