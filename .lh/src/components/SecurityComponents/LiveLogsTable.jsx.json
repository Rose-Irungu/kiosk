{
    "sourceFile": "src/components/SecurityComponents/LiveLogsTable.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753689120046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753689120046,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { MoreHorizontal } from \"lucide-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LiveLogsTable() {\r\n  const [visitors, setVisitors] = useState([]);\r\n  const [filteredAllVisitors, setFilteredAllVisitors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [entriesPerPage, setEntriesPerPage] = useState(5);\r\n  const [visitorTypeFilter, setVisitorTypeFilter] = useState(\"all\");\r\n  const [totalEntries, setTotalEntries] = useState(0);\r\n  const [dropdownOpen, setDropdownOpen] = useState(null);\r\n\r\n  const dropdownRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchVisitors();\r\n  }, [currentPage, entriesPerPage, visitorTypeFilter]);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (\r\n        dropdownRef.current &&\r\n        !dropdownRef.current.contains(event.target)\r\n      ) {\r\n        setDropdownOpen(null);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  const fetchVisitors = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = {\r\n        result_code: 0,\r\n        data: [\r\n          {\r\n            visitor_name: \"Haron Mureithi\",\r\n            phone_number: \"0744678751\",\r\n            visitor_type: \"recurring\",\r\n            host_unit: \"B-04\",\r\n            status: \"checked_in\",\r\n          },\r\n          {\r\n            visitor_name: \"Haron Mureithi\",\r\n            phone_number: \"0744678751\",\r\n            visitor_type: \"recurring\",\r\n            host_unit: \"B-04\",\r\n            status: \"checked_in\",\r\n          },\r\n          {\r\n            visitor_name: \"Lucy Wanja\",\r\n            phone_number: \"0108978651\",\r\n            visitor_type: \"new\",\r\n            host_unit: \"A-20\",\r\n            status: \"checked_out\",\r\n          },\r\n          {\r\n            visitor_name: \"Lucy Wanja\",\r\n            phone_number: \"0108978651\",\r\n            visitor_type: \"service\",\r\n            host_unit: \"A-20\",\r\n            status: \"checked_out\",\r\n          },\r\n          {\r\n            visitor_name: \"Lucy Wanja\",\r\n            phone_number: \"0108978651\",\r\n            visitor_type: \"new\",\r\n            host_unit: \"A-20\",\r\n            status: \"checked_out\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      if (res.result_code === 0) {\r\n        let allData = res.data;\r\n\r\n        if (visitorTypeFilter !== \"all\") {\r\n          allData = allData.filter(\r\n            (v) => v.visitor_type === visitorTypeFilter\r\n          );\r\n        }\r\n\r\n        setFilteredAllVisitors(allData);\r\n        setTotalEntries(allData.length);\r\n\r\n        const start = (currentPage - 1) * entriesPerPage;\r\n        const paginated = allData.slice(start + 0, start + entriesPerPage);\r\n        setVisitors(paginated);\r\n      } else {\r\n        setVisitors([]);\r\n        setFilteredAllVisitors([]);\r\n        setTotalEntries(0);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching visitors:\", error);\r\n      setVisitors([]);\r\n      setFilteredAllVisitors([]);\r\n      setTotalEntries(0);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleDropdown = (id) => {\r\n    setDropdownOpen(dropdownOpen === id ? null : id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-7xl mx-auto bg-white rounded-xl shadow-sm mt-5\">\r\n      <div className=\"flex justify-between items-center p-6 mb-4\">\r\n        <h2 className=\"text-2xl font-semibold\">Expected Visitors Today</h2>\r\n      </div>\r\n\r\n      {/* Visitor Table */}\r\n      <div className=\"p-4\">\r\n        <Table className=\"w-full\">\r\n          <TableHeader>\r\n            <TableRow className=\"bg-[#F5F6FA] text-[#3A3F51] rounded-lg\">\r\n              <TableHead className=\"text-sm font-semibold px-4 py-3\">\r\n                Visitor Name\r\n              </TableHead>\r\n              <TableHead className=\"text-sm font-semibold px-4 py-3\">\r\n                Phone No.\r\n              </TableHead>\r\n              <TableHead className=\"text-sm font-semibold px-4 py-3\">\r\n                Visit Unit\r\n              </TableHead>\r\n              <TableHead className=\"text-sm font-semibold px-4 py-3\">\r\n                Visitor Type\r\n              </TableHead>\r\n              <TableHead className=\"text-sm font-semibold px-4 py-3 text-center\">\r\n                Action\r\n              </TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n\r\n          <TableBody>\r\n            {loading ? (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={5}\r\n                  className=\"text-center py-10 text-gray-500\"\r\n                >\r\n                  Loading...\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : visitors.length === 0 ? (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={5}\r\n                  className=\"text-center py-10 text-gray-500\"\r\n                >\r\n                  No visitors found.\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : (\r\n              visitors.map((visitor, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  className=\"bg-white rounded-lg shadow-sm hover:shadow-md transition duration-200\"\r\n                >\r\n                  <TableCell className=\"px-4 py-4 font-medium text-[#171B1E]\">\r\n                    {visitor.visitor_name}\r\n                  </TableCell>\r\n                  <TableCell className=\"px-4 py-4 text-[#464F60]\">\r\n                    {visitor.phone_number}\r\n                  </TableCell>\r\n                  <TableCell className=\"px-4 py-4 text-[#464F60]\">\r\n                    {visitor.host_unit || \"N/A\"}\r\n                  </TableCell>\r\n                  <TableCell className=\"px-4 py-4 text-[#464F60]\">\r\n                    {visitor.visitor_type || \"--\"}\r\n                  </TableCell>\r\n                  <TableCell className=\"px-4 py-4 text-center\">\r\n                    <div\r\n                      ref={dropdownRef}\r\n                      className=\"relative inline-block text-left\"\r\n                    >\r\n                      <button\r\n                        onClick={() => toggleDropdown(index)}\r\n                        className=\"p-2 rounded hover:bg-gray-100\"\r\n                      >\r\n                        <MoreHorizontal className=\"h-5 w-5 text-gray-600\" />\r\n                      </button>\r\n                      {dropdownOpen === index && (\r\n                        <div className=\"absolute right-0 z-10 mt-2 w-28 bg-white border rounded shadow-lg\">\r\n                      <button\r\n                        onClick={() =>\r\n                          navigate(\"/view\", {\r\n                            state: { visitor },\r\n                          })\r\n                        }\r\n                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n                      >\r\n                        View\r\n                      </button>\r\n\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}