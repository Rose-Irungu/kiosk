{
    "sourceFile": "src/components/forms/LoginForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754032212258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754032267404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,144 @@\n+import React, { useState } from \"react\";\r\n+import { Eye, EyeOff, Shield, Heart } from \"lucide-react\";\r\n+import { useNavigate, Link } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+\r\n+const LoginForm = () => {\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n+  const navigate = useNavigate();\r\n+\r\n+  const handleLogin = async (e) => {\r\n+    e.preventDefault();\r\n+    setLoading(true);\r\n+    setError(\"\");\r\n+\r\n+    const credentials = { email, password };\r\n+\r\n+    try {\r\n+      const result = await authService.loginUser(credentials);\r\n+\r\n+      if (result.result_code === 0) {\r\n+        const { access, refresh, user } = result.data;\r\n+\r\n+        localStorage.setItem(\"accessToken\", access);\r\n+        localStorage.setItem(\"refreshToken\", refresh);\r\n+        localStorage.setItem(\"userInfo\", JSON.stringify(user));\r\n+        localStorage.setItem(\"userRole\", user.role);\r\n+\r\n+        switch (user.role) {\r\n+          case \"admin\":\r\n+            navigate(\"/dashboard\");\r\n+            break;\r\n+          case \"tenant\":\r\n+              navigate(\"resident/dashboard\");\r\n+            console.log(\"Tenant login successful – dashboard not ready.\");\r\n+            break;\r\n+          case \"security\":\r\n+             navigate(\"/security/dashboard\");\r\n+            console.log(\"Security login successful – dashboard not ready.\");\r\n+            break;\r\n+          default:\r\n+            throw new Error(\"Unknown role. Contact support.\");\r\n+        }\r\n+      } else {\r\n+        throw new Error(result.message || \"Login failed.\");\r\n+      }\r\n+    } catch (err) {\r\n+      setError(err.message || \"Something went wrong.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-17\">\r\n+          <h2 className=\"text-2xl font-semibold mb-6\">Welcome Back</h2>\r\n+\r\n+          <form onSubmit={handleLogin}>\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-sm font-medium mb-1\">Email *</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                placeholder=\"Your Email\"\r\n+                value={email}\r\n+                onChange={(e) => setEmail(e.target.value)}\r\n+                className=\"w-full border border-gray-300 rounded px-3 py-2\"\r\n+                required\r\n+              />\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4 relative\">\r\n+              <label className=\"block text-sm font-medium mb-1\">Password*</label>\r\n+              <input\r\n+                type={showPassword ? \"text\" : \"password\"}\r\n+                placeholder=\"Password\"\r\n+                value={password}\r\n+                onChange={(e) => setPassword(e.target.value)}\r\n+                className=\"w-full border border-gray-300 rounded px-3 py-2 pr-10\"\r\n+                required\r\n+              />\r\n+              <div\r\n+                className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n+                onClick={() => setShowPassword((prev) => !prev)}\r\n+              >\r\n+                {showPassword ? (\r\n+                  <EyeOff className=\"w-5 h-5\" />\r\n+                ) : (\r\n+                  <Eye className=\"w-5 h-5\" />\r\n+                )}\r\n+              </div>\r\n+              <p className=\"text-xs text-gray-500 mt-1\">\r\n+              \r\n+              </p>\r\n+            </div>\r\n+\r\n+            <div className=\"flex items-center justify-between mb-6\">\r\n+              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n+                \r\n+                \r\n+              </label>\r\n+              <span className=\"text-sm text-[#005e0e] hover:underline cursor-pointer\">\r\n+                <Link to=\"/forgotpassword\">Forgot Password?</Link>\r\n+              </span>\r\n+            </div>\r\n+\r\n+            {error && (\r\n+              <p className=\"text-red-600 text-sm mb-4 text-center\">{error}</p>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <button\r\n+                type=\"submit\"\r\n+                disabled={loading}\r\n+                className=\"w-full bg-[#005e0e] text-white py-2 rounded hover:bg-green-700\"\r\n+              >\r\n+                {loading ? \"Signing In...\" : \"SIGN IN\"}\r\n+              </button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default LoginForm;\r\n"
                }
            ],
            "date": 1754032212258,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { Eye, EyeOff, Shield, Heart } from \"lucide-react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { authService } from \"../../services/authService\";\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const credentials = { email, password };\r\n\r\n    try {\r\n      const result = await authService.loginUser(credentials);\r\n\r\n      if (result.result_code === 0) {\r\n        const { access, refresh, user } = result.data;\r\n\r\n        localStorage.setItem(\"accessToken\", access);\r\n        localStorage.setItem(\"refreshToken\", refresh);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(user));\r\n        localStorage.setItem(\"userRole\", user.role);\r\n\r\n        switch (user.role) {\r\n          case \"admin\":\r\n            navigate(\"/dashboard\");\r\n            break;\r\n          case \"tenant\":\r\n            \r\n            console.log(\"Tenant login successful – dashboard not ready.\");\r\n            break;\r\n          case \"security\":\r\n             navigate(\"/security/dashboard\");\r\n            console.log(\"Security login successful – dashboard not ready.\");\r\n            break;\r\n          default:\r\n            throw new Error(\"Unknown role. Contact support.\");\r\n        }\r\n      } else {\r\n        throw new Error(result.message || \"Login failed.\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n        <div className=\"w-full md:w-1/2 relative\">\r\n          <img\r\n            src=\"rectangle-780.png\"\r\n            alt=\"Signup Visual\"\r\n            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n          />\r\n          <img\r\n            src=\"logo copy.svg\"\r\n            alt=\"West Brook Logo\"\r\n            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"w-full md:w-1/2 p-8 mt-17\">\r\n          <h2 className=\"text-2xl font-semibold mb-6\">Welcome Back</h2>\r\n\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Email *</label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Your Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded px-3 py-2\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-4 relative\">\r\n              <label className=\"block text-sm font-medium mb-1\">Password*</label>\r\n              <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded px-3 py-2 pr-10\"\r\n                required\r\n              />\r\n              <div\r\n                className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n                onClick={() => setShowPassword((prev) => !prev)}\r\n              >\r\n                {showPassword ? (\r\n                  <EyeOff className=\"w-5 h-5\" />\r\n                ) : (\r\n                  <Eye className=\"w-5 h-5\" />\r\n                )}\r\n              </div>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n              \r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n                \r\n                \r\n              </label>\r\n              <span className=\"text-sm text-[#005e0e] hover:underline cursor-pointer\">\r\n                <Link to=\"/forgotpassword\">Forgot Password?</Link>\r\n              </span>\r\n            </div>\r\n\r\n            {error && (\r\n              <p className=\"text-red-600 text-sm mb-4 text-center\">{error}</p>\r\n            )}\r\n\r\n            <div className=\"mb-4\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-[#005e0e] text-white py-2 rounded hover:bg-green-700\"\r\n              >\r\n                {loading ? \"Signing In...\" : \"SIGN IN\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"
        }
    ]
}