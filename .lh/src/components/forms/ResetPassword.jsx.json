{
    "sourceFile": "src/components/forms/ResetPassword.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1755697220085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755697229578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n \r\n           <button\r\n             type=\"submit\"\r\n             disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n+            className=\"w-full bg-[#005e0e] hover text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n           >\r\n             {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n           </button>\r\n \r\n"
                },
                {
                    "date": 1755697264922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,161 @@\n+import React, { useState } from \"react\";\r\n+import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+const ResetPasswordForm = () => {\r\n+  const navigate = useNavigate();\r\n+  const { token, uid } = useParams();\r\n+\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [fieldError, setFieldError] = useState({});\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [serverError, setServerError] = useState(\"\");\r\n+\r\n+  const onPasswordChange = (e) => {\r\n+    setPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n+  };\r\n+\r\n+  const onConfirmPasswordChange = (e) => {\r\n+    setConfirmPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n+  };\r\n+\r\n+  const validate = () => {\r\n+    const errors = {};\r\n+    if (!password) {\r\n+      errors.password = \"Password is required\";\r\n+    } else if (password.length < 8) {\r\n+      errors.password = \"Password must be at least 8 characters\";\r\n+    }\r\n+\r\n+    if (!confirmPassword) {\r\n+      errors.confirmPassword = \"Please confirm your password\";\r\n+    } else if (password !== confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleResetPassword = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const errors = validate();\r\n+    if (Object.keys(errors).length > 0) {\r\n+      setFieldError(errors);\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    setServerError(\"\");\r\n+\r\n+    try {\r\n+      await authService.password_reset({\r\n+        uid,\r\n+        token,\r\n+        new_password: password,\r\n+      });\r\n+      toast.success(\"Password reset successful!\");\r\n+      navigate(\"/loginform\");\r\n+    } catch (error) {\r\n+     \r\n+      if (\r\n+        error.response &&\r\n+        error.response.data &&\r\n+        error.response.data.data &&\r\n+        error.response.data.data.token\r\n+      ) {\r\n+        const tokenErrors = error.response.data.data.token.join(\" \");\r\n+        setServerError(tokenErrors);\r\n+        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n+      } else {\r\n+        setServerError(\"Password reset failed. Please try again.\");\r\n+        toast.error(\"Password reset failed. Please try again.\");\r\n+      }\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"/rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"/logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n+          <div className=\"mb-6\">\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <p className=\"text-m text-[#445963]\">\r\n+              Enter your new password so as to <br /> continue and login\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {serverError && (\r\n+            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n+          )}\r\n+\r\n+          <div className=\"mb-4\">\r\n+            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Create New Password\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              value={password}\r\n+              onChange={onPasswordChange}\r\n+            />\r\n+            {fieldError.password && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"mb-6\">\r\n+            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Enter Password Again\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              value={confirmPassword}\r\n+              onChange={onConfirmPasswordChange}\r\n+            />\r\n+            {fieldError.confirmPassword && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            disabled={isLoading}\r\n+            className=\"w-full bg-[#005e0e] hover: bg- text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n+          >\r\n+            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n+          </button>\r\n+\r\n+          <div className=\"text-center text-sm text-gray-600\">\r\n+            Go back to{\" \"}\r\n+            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+              LOGIN\r\n+            </Link>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </form>\r\n+  );\r\n+};\r\n+\r\n+export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697270644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,161 @@\n+import React, { useState } from \"react\";\r\n+import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+const ResetPasswordForm = () => {\r\n+  const navigate = useNavigate();\r\n+  const { token, uid } = useParams();\r\n+\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [fieldError, setFieldError] = useState({});\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [serverError, setServerError] = useState(\"\");\r\n+\r\n+  const onPasswordChange = (e) => {\r\n+    setPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n+  };\r\n+\r\n+  const onConfirmPasswordChange = (e) => {\r\n+    setConfirmPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n+  };\r\n+\r\n+  const validate = () => {\r\n+    const errors = {};\r\n+    if (!password) {\r\n+      errors.password = \"Password is required\";\r\n+    } else if (password.length < 8) {\r\n+      errors.password = \"Password must be at least 8 characters\";\r\n+    }\r\n+\r\n+    if (!confirmPassword) {\r\n+      errors.confirmPassword = \"Please confirm your password\";\r\n+    } else if (password !== confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleResetPassword = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const errors = validate();\r\n+    if (Object.keys(errors).length > 0) {\r\n+      setFieldError(errors);\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    setServerError(\"\");\r\n+\r\n+    try {\r\n+      await authService.password_reset({\r\n+        uid,\r\n+        token,\r\n+        new_password: password,\r\n+      });\r\n+      toast.success(\"Password reset successful!\");\r\n+      navigate(\"/loginform\");\r\n+    } catch (error) {\r\n+     \r\n+      if (\r\n+        error.response &&\r\n+        error.response.data &&\r\n+        error.response.data.data &&\r\n+        error.response.data.data.token\r\n+      ) {\r\n+        const tokenErrors = error.response.data.data.token.join(\" \");\r\n+        setServerError(tokenErrors);\r\n+        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n+      } else {\r\n+        setServerError(\"Password reset failed. Please try again.\");\r\n+        toast.error(\"Password reset failed. Please try again.\");\r\n+      }\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"/rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"/logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n+          <div className=\"mb-6\">\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <p className=\"text-m text-[#445963]\">\r\n+              Enter your new password so as to <br /> continue and login\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {serverError && (\r\n+            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n+          )}\r\n+\r\n+          <div className=\"mb-4\">\r\n+            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Create New Password\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              value={password}\r\n+              onChange={onPasswordChange}\r\n+            />\r\n+            {fieldError.password && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"mb-6\">\r\n+            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Enter Password Again\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              value={confirmPassword}\r\n+              onChange={onConfirmPasswordChange}\r\n+            />\r\n+            {fieldError.confirmPassword && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            disabled={isLoading}\r\n+            className=\"w-full bg-[#005e0e] hover: bg-green- text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n+          >\r\n+            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n+          </button>\r\n+\r\n+          <div className=\"text-center text-sm text-gray-600\">\r\n+            Go back to{\" \"}\r\n+            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+              LOGIN\r\n+            </Link>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </form>\r\n+  );\r\n+};\r\n+\r\n+export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697283330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,161 @@\n+import React, { useState } from \"react\";\r\n+import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+const ResetPasswordForm = () => {\r\n+  const navigate = useNavigate();\r\n+  const { token, uid } = useParams();\r\n+\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [fieldError, setFieldError] = useState({});\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [serverError, setServerError] = useState(\"\");\r\n+\r\n+  const onPasswordChange = (e) => {\r\n+    setPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n+  };\r\n+\r\n+  const onConfirmPasswordChange = (e) => {\r\n+    setConfirmPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n+  };\r\n+\r\n+  const validate = () => {\r\n+    const errors = {};\r\n+    if (!password) {\r\n+      errors.password = \"Password is required\";\r\n+    } else if (password.length < 8) {\r\n+      errors.password = \"Password must be at least 8 characters\";\r\n+    }\r\n+\r\n+    if (!confirmPassword) {\r\n+      errors.confirmPassword = \"Please confirm your password\";\r\n+    } else if (password !== confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleResetPassword = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const errors = validate();\r\n+    if (Object.keys(errors).length > 0) {\r\n+      setFieldError(errors);\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    setServerError(\"\");\r\n+\r\n+    try {\r\n+      await authService.password_reset({\r\n+        uid,\r\n+        token,\r\n+        new_password: password,\r\n+      });\r\n+      toast.success(\"Password reset successful!\");\r\n+      navigate(\"/loginform\");\r\n+    } catch (error) {\r\n+     \r\n+      if (\r\n+        error.response &&\r\n+        error.response.data &&\r\n+        error.response.data.data &&\r\n+        error.response.data.data.token\r\n+      ) {\r\n+        const tokenErrors = error.response.data.data.token.join(\" \");\r\n+        setServerError(tokenErrors);\r\n+        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n+      } else {\r\n+        setServerError(\"Password reset failed. Please try again.\");\r\n+        toast.error(\"Password reset failed. Please try again.\");\r\n+      }\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"/rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"/logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n+          <div className=\"mb-6\">\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <p className=\"text-m text-[#445963]\">\r\n+              Enter your new password so as to <br /> continue and login\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {serverError && (\r\n+            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n+          )}\r\n+\r\n+          <div className=\"mb-4\">\r\n+            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Create New Password\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              value={password}\r\n+              onChange={onPasswordChange}\r\n+            />\r\n+            {fieldError.password && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"mb-6\">\r\n+            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Enter Password Again\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              value={confirmPassword}\r\n+              onChange={onConfirmPasswordChange}\r\n+            />\r\n+            {fieldError.confirmPassword && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            disabled={isLoading}\r\n+            className=\"w-full bg-[#005e0e] hover: text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n+          >\r\n+            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n+          </button>\r\n+\r\n+          <div className=\"text-center text-sm text-gray-600\">\r\n+            Go back to{\" \"}\r\n+            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+              LOGIN\r\n+            </Link>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </form>\r\n+  );\r\n+};\r\n+\r\n+export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697294800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,161 @@\n+import React, { useState } from \"react\";\r\n+import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+const ResetPasswordForm = () => {\r\n+  const navigate = useNavigate();\r\n+  const { token, uid } = useParams();\r\n+\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [fieldError, setFieldError] = useState({});\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [serverError, setServerError] = useState(\"\");\r\n+\r\n+  const onPasswordChange = (e) => {\r\n+    setPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n+  };\r\n+\r\n+  const onConfirmPasswordChange = (e) => {\r\n+    setConfirmPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n+  };\r\n+\r\n+  const validate = () => {\r\n+    const errors = {};\r\n+    if (!password) {\r\n+      errors.password = \"Password is required\";\r\n+    } else if (password.length < 8) {\r\n+      errors.password = \"Password must be at least 8 characters\";\r\n+    }\r\n+\r\n+    if (!confirmPassword) {\r\n+      errors.confirmPassword = \"Please confirm your password\";\r\n+    } else if (password !== confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleResetPassword = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const errors = validate();\r\n+    if (Object.keys(errors).length > 0) {\r\n+      setFieldError(errors);\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    setServerError(\"\");\r\n+\r\n+    try {\r\n+      await authService.password_reset({\r\n+        uid,\r\n+        token,\r\n+        new_password: password,\r\n+      });\r\n+      toast.success(\"Password reset successful!\");\r\n+      navigate(\"/loginform\");\r\n+    } catch (error) {\r\n+     \r\n+      if (\r\n+        error.response &&\r\n+        error.response.data &&\r\n+        error.response.data.data &&\r\n+        error.response.data.data.token\r\n+      ) {\r\n+        const tokenErrors = error.response.data.data.token.join(\" \");\r\n+        setServerError(tokenErrors);\r\n+        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n+      } else {\r\n+        setServerError(\"Password reset failed. Please try again.\");\r\n+        toast.error(\"Password reset failed. Please try again.\");\r\n+      }\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"/rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"/logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n+          <div className=\"mb-6\">\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <p className=\"text-m text-[#445963]\">\r\n+              Enter your new password so as to <br /> continue and login\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {serverError && (\r\n+            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n+          )}\r\n+\r\n+          <div className=\"mb-4\">\r\n+            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Create New Password\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              value={password}\r\n+              onChange={onPasswordChange}\r\n+            />\r\n+            {fieldError.password && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"mb-6\">\r\n+            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Enter Password Again\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              value={confirmPassword}\r\n+              onChange={onConfirmPasswordChange}\r\n+            />\r\n+            {fieldError.confirmPassword && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            disabled={isLoading}\r\n+            className=\"w-full bg-[#005e0e] hover:bg-gree text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n+          >\r\n+            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n+          </button>\r\n+\r\n+          <div className=\"text-center text-sm text-gray-600\">\r\n+            Go back to{\" \"}\r\n+            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+              LOGIN\r\n+            </Link>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </form>\r\n+  );\r\n+};\r\n+\r\n+export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697368762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n \r\n           <button\r\n             type=\"submit\"\r\n             disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover:bg-gree text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n+            className=\"w-full bg-[#005e0e] hover:bg-green-900 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6 cursor-pointer\"\r\n           >\r\n             {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n           </button>\r\n \r\n@@ -158,648 +158,4 @@\n   );\r\n };\r\n \r\n export default ResetPasswordForm;\r\n-import React, { useState } from \"react\";\r\n-import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n-import { authService } from \"../../services/authService\";\r\n-import toast from \"react-hot-toast\";\r\n-\r\n-const ResetPasswordForm = () => {\r\n-  const navigate = useNavigate();\r\n-  const { token, uid } = useParams();\r\n-\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-  const [fieldError, setFieldError] = useState({});\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [serverError, setServerError] = useState(\"\");\r\n-\r\n-  const onPasswordChange = (e) => {\r\n-    setPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n-  };\r\n-\r\n-  const onConfirmPasswordChange = (e) => {\r\n-    setConfirmPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n-  };\r\n-\r\n-  const validate = () => {\r\n-    const errors = {};\r\n-    if (!password) {\r\n-      errors.password = \"Password is required\";\r\n-    } else if (password.length < 8) {\r\n-      errors.password = \"Password must be at least 8 characters\";\r\n-    }\r\n-\r\n-    if (!confirmPassword) {\r\n-      errors.confirmPassword = \"Please confirm your password\";\r\n-    } else if (password !== confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleResetPassword = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    const errors = validate();\r\n-    if (Object.keys(errors).length > 0) {\r\n-      setFieldError(errors);\r\n-      return;\r\n-    }\r\n-\r\n-    setIsLoading(true);\r\n-    setServerError(\"\");\r\n-\r\n-    try {\r\n-      await authService.password_reset({\r\n-        uid,\r\n-        token,\r\n-        new_password: password,\r\n-      });\r\n-      toast.success(\"Password reset successful!\");\r\n-      navigate(\"/loginform\");\r\n-    } catch (error) {\r\n-     \r\n-      if (\r\n-        error.response &&\r\n-        error.response.data &&\r\n-        error.response.data.data &&\r\n-        error.response.data.data.token\r\n-      ) {\r\n-        const tokenErrors = error.response.data.data.token.join(\" \");\r\n-        setServerError(tokenErrors);\r\n-        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n-      } else {\r\n-        setServerError(\"Password reset failed. Please try again.\");\r\n-        toast.error(\"Password reset failed. Please try again.\");\r\n-      }\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n-      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n-        <div className=\"w-full md:w-1/2 relative\">\r\n-          <img\r\n-            src=\"/rectangle-780.png\"\r\n-            alt=\"Signup Visual\"\r\n-            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n-          />\r\n-          <img\r\n-            src=\"/logo copy.svg\"\r\n-            alt=\"West Brook Logo\"\r\n-            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n-          <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n-            <p className=\"text-m text-[#445963]\">\r\n-              Enter your new password so as to <br /> continue and login\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {serverError && (\r\n-            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n-          )}\r\n-\r\n-          <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n-              value={password}\r\n-              onChange={onPasswordChange}\r\n-            />\r\n-            {fieldError.password && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n-              value={confirmPassword}\r\n-              onChange={onConfirmPasswordChange}\r\n-            />\r\n-            {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover: text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n-          >\r\n-            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n-          </button>\r\n-\r\n-          <div className=\"text-center text-sm text-gray-600\">\r\n-            Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n-              LOGIN\r\n-            </Link>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </form>\r\n-  );\r\n-};\r\n-\r\n-export default ResetPasswordForm;\r\n-import React, { useState } from \"react\";\r\n-import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n-import { authService } from \"../../services/authService\";\r\n-import toast from \"react-hot-toast\";\r\n-\r\n-const ResetPasswordForm = () => {\r\n-  const navigate = useNavigate();\r\n-  const { token, uid } = useParams();\r\n-\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-  const [fieldError, setFieldError] = useState({});\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [serverError, setServerError] = useState(\"\");\r\n-\r\n-  const onPasswordChange = (e) => {\r\n-    setPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n-  };\r\n-\r\n-  const onConfirmPasswordChange = (e) => {\r\n-    setConfirmPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n-  };\r\n-\r\n-  const validate = () => {\r\n-    const errors = {};\r\n-    if (!password) {\r\n-      errors.password = \"Password is required\";\r\n-    } else if (password.length < 8) {\r\n-      errors.password = \"Password must be at least 8 characters\";\r\n-    }\r\n-\r\n-    if (!confirmPassword) {\r\n-      errors.confirmPassword = \"Please confirm your password\";\r\n-    } else if (password !== confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleResetPassword = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    const errors = validate();\r\n-    if (Object.keys(errors).length > 0) {\r\n-      setFieldError(errors);\r\n-      return;\r\n-    }\r\n-\r\n-    setIsLoading(true);\r\n-    setServerError(\"\");\r\n-\r\n-    try {\r\n-      await authService.password_reset({\r\n-        uid,\r\n-        token,\r\n-        new_password: password,\r\n-      });\r\n-      toast.success(\"Password reset successful!\");\r\n-      navigate(\"/loginform\");\r\n-    } catch (error) {\r\n-     \r\n-      if (\r\n-        error.response &&\r\n-        error.response.data &&\r\n-        error.response.data.data &&\r\n-        error.response.data.data.token\r\n-      ) {\r\n-        const tokenErrors = error.response.data.data.token.join(\" \");\r\n-        setServerError(tokenErrors);\r\n-        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n-      } else {\r\n-        setServerError(\"Password reset failed. Please try again.\");\r\n-        toast.error(\"Password reset failed. Please try again.\");\r\n-      }\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n-      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n-        <div className=\"w-full md:w-1/2 relative\">\r\n-          <img\r\n-            src=\"/rectangle-780.png\"\r\n-            alt=\"Signup Visual\"\r\n-            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n-          />\r\n-          <img\r\n-            src=\"/logo copy.svg\"\r\n-            alt=\"West Brook Logo\"\r\n-            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n-          <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n-            <p className=\"text-m text-[#445963]\">\r\n-              Enter your new password so as to <br /> continue and login\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {serverError && (\r\n-            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n-          )}\r\n-\r\n-          <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n-              value={password}\r\n-              onChange={onPasswordChange}\r\n-            />\r\n-            {fieldError.password && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n-              value={confirmPassword}\r\n-              onChange={onConfirmPasswordChange}\r\n-            />\r\n-            {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover: bg-green- text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n-          >\r\n-            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n-          </button>\r\n-\r\n-          <div className=\"text-center text-sm text-gray-600\">\r\n-            Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n-              LOGIN\r\n-            </Link>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </form>\r\n-  );\r\n-};\r\n-\r\n-export default ResetPasswordForm;\r\n-import React, { useState } from \"react\";\r\n-import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n-import { authService } from \"../../services/authService\";\r\n-import toast from \"react-hot-toast\";\r\n-\r\n-const ResetPasswordForm = () => {\r\n-  const navigate = useNavigate();\r\n-  const { token, uid } = useParams();\r\n-\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-  const [fieldError, setFieldError] = useState({});\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [serverError, setServerError] = useState(\"\");\r\n-\r\n-  const onPasswordChange = (e) => {\r\n-    setPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n-  };\r\n-\r\n-  const onConfirmPasswordChange = (e) => {\r\n-    setConfirmPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n-  };\r\n-\r\n-  const validate = () => {\r\n-    const errors = {};\r\n-    if (!password) {\r\n-      errors.password = \"Password is required\";\r\n-    } else if (password.length < 8) {\r\n-      errors.password = \"Password must be at least 8 characters\";\r\n-    }\r\n-\r\n-    if (!confirmPassword) {\r\n-      errors.confirmPassword = \"Please confirm your password\";\r\n-    } else if (password !== confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleResetPassword = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    const errors = validate();\r\n-    if (Object.keys(errors).length > 0) {\r\n-      setFieldError(errors);\r\n-      return;\r\n-    }\r\n-\r\n-    setIsLoading(true);\r\n-    setServerError(\"\");\r\n-\r\n-    try {\r\n-      await authService.password_reset({\r\n-        uid,\r\n-        token,\r\n-        new_password: password,\r\n-      });\r\n-      toast.success(\"Password reset successful!\");\r\n-      navigate(\"/loginform\");\r\n-    } catch (error) {\r\n-     \r\n-      if (\r\n-        error.response &&\r\n-        error.response.data &&\r\n-        error.response.data.data &&\r\n-        error.response.data.data.token\r\n-      ) {\r\n-        const tokenErrors = error.response.data.data.token.join(\" \");\r\n-        setServerError(tokenErrors);\r\n-        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n-      } else {\r\n-        setServerError(\"Password reset failed. Please try again.\");\r\n-        toast.error(\"Password reset failed. Please try again.\");\r\n-      }\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n-      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n-        <div className=\"w-full md:w-1/2 relative\">\r\n-          <img\r\n-            src=\"/rectangle-780.png\"\r\n-            alt=\"Signup Visual\"\r\n-            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n-          />\r\n-          <img\r\n-            src=\"/logo copy.svg\"\r\n-            alt=\"West Brook Logo\"\r\n-            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n-          <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n-            <p className=\"text-m text-[#445963]\">\r\n-              Enter your new password so as to <br /> continue and login\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {serverError && (\r\n-            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n-          )}\r\n-\r\n-          <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n-              value={password}\r\n-              onChange={onPasswordChange}\r\n-            />\r\n-            {fieldError.password && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n-              value={confirmPassword}\r\n-              onChange={onConfirmPasswordChange}\r\n-            />\r\n-            {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover: bg- text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n-          >\r\n-            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n-          </button>\r\n-\r\n-          <div className=\"text-center text-sm text-gray-600\">\r\n-            Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n-              LOGIN\r\n-            </Link>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </form>\r\n-  );\r\n-};\r\n-\r\n-export default ResetPasswordForm;\r\n-import React, { useState } from \"react\";\r\n-import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n-import { authService } from \"../../services/authService\";\r\n-import toast from \"react-hot-toast\";\r\n-\r\n-const ResetPasswordForm = () => {\r\n-  const navigate = useNavigate();\r\n-  const { token, uid } = useParams();\r\n-\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-  const [fieldError, setFieldError] = useState({});\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [serverError, setServerError] = useState(\"\");\r\n-\r\n-  const onPasswordChange = (e) => {\r\n-    setPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n-  };\r\n-\r\n-  const onConfirmPasswordChange = (e) => {\r\n-    setConfirmPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n-  };\r\n-\r\n-  const validate = () => {\r\n-    const errors = {};\r\n-    if (!password) {\r\n-      errors.password = \"Password is required\";\r\n-    } else if (password.length < 8) {\r\n-      errors.password = \"Password must be at least 8 characters\";\r\n-    }\r\n-\r\n-    if (!confirmPassword) {\r\n-      errors.confirmPassword = \"Please confirm your password\";\r\n-    } else if (password !== confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleResetPassword = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    const errors = validate();\r\n-    if (Object.keys(errors).length > 0) {\r\n-      setFieldError(errors);\r\n-      return;\r\n-    }\r\n-\r\n-    setIsLoading(true);\r\n-    setServerError(\"\");\r\n-\r\n-    try {\r\n-      await authService.password_reset({\r\n-        uid,\r\n-        token,\r\n-        new_password: password,\r\n-      });\r\n-      toast.success(\"Password reset successful!\");\r\n-      navigate(\"/loginform\");\r\n-    } catch (error) {\r\n-     \r\n-      if (\r\n-        error.response &&\r\n-        error.response.data &&\r\n-        error.response.data.data &&\r\n-        error.response.data.data.token\r\n-      ) {\r\n-        const tokenErrors = error.response.data.data.token.join(\" \");\r\n-        setServerError(tokenErrors);\r\n-        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n-      } else {\r\n-        setServerError(\"Password reset failed. Please try again.\");\r\n-        toast.error(\"Password reset failed. Please try again.\");\r\n-      }\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n-      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n-        <div className=\"w-full md:w-1/2 relative\">\r\n-          <img\r\n-            src=\"/rectangle-780.png\"\r\n-            alt=\"Signup Visual\"\r\n-            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n-          />\r\n-          <img\r\n-            src=\"/logo copy.svg\"\r\n-            alt=\"West Brook Logo\"\r\n-            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n-          <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n-            <p className=\"text-m text-[#445963]\">\r\n-              Enter your new password so as to <br /> continue and login\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {serverError && (\r\n-            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n-          )}\r\n-\r\n-          <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n-              value={password}\r\n-              onChange={onPasswordChange}\r\n-            />\r\n-            {fieldError.password && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n-              value={confirmPassword}\r\n-              onChange={onConfirmPasswordChange}\r\n-            />\r\n-            {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n-          >\r\n-            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n-          </button>\r\n-\r\n-          <div className=\"text-center text-sm text-gray-600\">\r\n-            Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n-              LOGIN\r\n-            </Link>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </form>\r\n-  );\r\n-};\r\n-\r\n-export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697769541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,8 +136,9 @@\n             {fieldError.confirmPassword && (\r\n               <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n             )}\r\n           </div>\r\n+          \r\n \r\n           <button\r\n             type=\"submit\"\r\n             disabled={isLoading}\r\n"
                },
                {
                    "date": 1755697818487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,172 @@\n+import React, { useState } from \"react\";\r\n+import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+const ResetPasswordForm = () => {\r\n+  const navigate = useNavigate();\r\n+  const { token, uid } = useParams();\r\n+\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [fieldError, setFieldError] = useState({});\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [serverError, setServerError] = useState(\"\");\r\n+  \r\n+\r\n+  const onPasswordChange = (e) => {\r\n+    setPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n+  };\r\n+\r\n+  const onConfirmPasswordChange = (e) => {\r\n+    setConfirmPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n+  };\r\n+\r\n+  const validate = () => {\r\n+    const errors = {};\r\n+    if (!password) {\r\n+      errors.password = \"Password is required\";\r\n+    } else if (password.length < 8) {\r\n+      errors.password = \"Password must be at least 8 characters\";\r\n+    }\r\n+\r\n+    if (!confirmPassword) {\r\n+      errors.confirmPassword = \"Please confirm your password\";\r\n+    } else if (password !== confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleResetPassword = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const errors = validate();\r\n+    if (Object.keys(errors).length > 0) {\r\n+      setFieldError(errors);\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    setServerError(\"\");\r\n+\r\n+    try {\r\n+      await authService.password_reset({\r\n+        uid,\r\n+        token,\r\n+        new_password: password,\r\n+      });\r\n+      toast.success(\"Password reset successful!\");\r\n+      navigate(\"/loginform\");\r\n+    } catch (error) {\r\n+     \r\n+      if (\r\n+        error.response &&\r\n+        error.response.data &&\r\n+        error.response.data.data &&\r\n+        error.response.data.data.token\r\n+      ) {\r\n+        const tokenErrors = error.response.data.data.token.join(\" \");\r\n+        setServerError(tokenErrors);\r\n+        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n+      } else {\r\n+        setServerError(\"Password reset failed. Please try again.\");\r\n+        toast.error(\"Password reset failed. Please try again.\");\r\n+      }\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"/rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"/logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n+          <div className=\"mb-6\">\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <p className=\"text-m text-[#445963]\">\r\n+              Enter your new password so as to <br /> continue and login\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {serverError && (\r\n+            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n+          )}\r\n+\r\n+          <div className=\"mb-4\">\r\n+            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Create New Password\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              value={password}\r\n+              onChange={onPasswordChange}\r\n+            />\r\n+            {fieldError.password && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"mb-6\">\r\n+            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Enter Password Again\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              value={confirmPassword}\r\n+              onChange={onConfirmPasswordChange}\r\n+            />\r\n+            {fieldError.confirmPassword && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+            <div\r\n+                className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n+                onClick={() => setShowPassword((prev) => !prev)}\r\n+              >\r\n+                {showPassword ? (\r\n+                  <EyeOff className=\"w-5 h-5\" />\r\n+                ) : (\r\n+                  <Eye className=\"w-5 h-5\" />\r\n+                )}\r\n+              </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            disabled={isLoading}\r\n+            className=\"w-full bg-[#005e0e] hover:bg-green-900 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6 cursor-pointer\"\r\n+          >\r\n+            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n+          </button>\r\n+\r\n+          <div className=\"text-center text-sm text-gray-600\">\r\n+            Go back to{\" \"}\r\n+            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+              LOGIN\r\n+            </Link>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </form>\r\n+  );\r\n+};\r\n+\r\n+export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697852458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,172 @@\n+import React, { useState } from \"react\";\r\n+import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n+import { authService } from \"../../services/authService\";\r\n+import toast from \"react-hot-toast\";\r\n+\r\n+const ResetPasswordForm = () => {\r\n+  const navigate = useNavigate();\r\n+  const { token, uid } = useParams();\r\n+\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [fieldError, setFieldError] = useState({});\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [serverError, setServerError] = useState(\"\");\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+\r\n+  const onPasswordChange = (e) => {\r\n+    setPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n+  };\r\n+\r\n+  const onConfirmPasswordChange = (e) => {\r\n+    setConfirmPassword(e.target.value);\r\n+    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n+  };\r\n+\r\n+  const validate = () => {\r\n+    const errors = {};\r\n+    if (!password) {\r\n+      errors.password = \"Password is required\";\r\n+    } else if (password.length < 8) {\r\n+      errors.password = \"Password must be at least 8 characters\";\r\n+    }\r\n+\r\n+    if (!confirmPassword) {\r\n+      errors.confirmPassword = \"Please confirm your password\";\r\n+    } else if (password !== confirmPassword) {\r\n+      errors.confirmPassword = \"Passwords do not match\";\r\n+    }\r\n+\r\n+    return errors;\r\n+  };\r\n+\r\n+  const handleResetPassword = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const errors = validate();\r\n+    if (Object.keys(errors).length > 0) {\r\n+      setFieldError(errors);\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    setServerError(\"\");\r\n+\r\n+    try {\r\n+      await authService.password_reset({\r\n+        uid,\r\n+        token,\r\n+        new_password: password,\r\n+      });\r\n+      toast.success(\"Password reset successful!\");\r\n+      navigate(\"/loginform\");\r\n+    } catch (error) {\r\n+     \r\n+      if (\r\n+        error.response &&\r\n+        error.response.data &&\r\n+        error.response.data.data &&\r\n+        error.response.data.data.token\r\n+      ) {\r\n+        const tokenErrors = error.response.data.data.token.join(\" \");\r\n+        setServerError(tokenErrors);\r\n+        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n+      } else {\r\n+        setServerError(\"Password reset failed. Please try again.\");\r\n+        toast.error(\"Password reset failed. Please try again.\");\r\n+      }\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  return (\r\n+    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+\r\n+        <div className=\"w-full md:w-1/2 relative\">\r\n+          <img\r\n+            src=\"/rectangle-780.png\"\r\n+            alt=\"Signup Visual\"\r\n+            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n+          />\r\n+          <img\r\n+            src=\"/logo copy.svg\"\r\n+            alt=\"West Brook Logo\"\r\n+            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n+          />\r\n+        </div>\r\n+\r\n+        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n+          <div className=\"mb-6\">\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <p className=\"text-m text-[#445963]\">\r\n+              Enter your new password so as to <br /> continue and login\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {serverError && (\r\n+            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n+          )}\r\n+\r\n+          <div className=\"mb-4\">\r\n+            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <input\r\n+               type={showPassword ? \"text\" : \"password\"}\r\n+              placeholder=\"Create New Password\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              value={password}\r\n+              onChange={onPasswordChange}\r\n+            />\r\n+            {fieldError.password && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n+            )}\r\n+          </div>\r\n+\r\n+          <div className=\"mb-6\">\r\n+            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <input\r\n+              type=\"password\"\r\n+              placeholder=\"Enter Password Again\"\r\n+              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              value={confirmPassword}\r\n+              onChange={onConfirmPasswordChange}\r\n+            />\r\n+            {fieldError.confirmPassword && (\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+            )}\r\n+          </div>\r\n+            <div\r\n+                className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n+                onClick={() => setShowPassword((prev) => !prev)}\r\n+              >\r\n+                {showPassword ? (\r\n+                  <EyeOff className=\"w-5 h-5\" />\r\n+                ) : (\r\n+                  <Eye className=\"w-5 h-5\" />\r\n+                )}\r\n+              </div>\r\n+\r\n+          <button\r\n+            type=\"submit\"\r\n+            disabled={isLoading}\r\n+            className=\"w-full bg-[#005e0e] hover:bg-green-900 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6 cursor-pointer\"\r\n+          >\r\n+            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n+          </button>\r\n+\r\n+          <div className=\"text-center text-sm text-gray-600\">\r\n+            Go back to{\" \"}\r\n+            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+              LOGIN\r\n+            </Link>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </form>\r\n+  );\r\n+};\r\n+\r\n+export default ResetPasswordForm;\r\n"
                },
                {
                    "date": 1755697861919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,8 @@\n       });\r\n       toast.success(\"Password reset successful!\");\r\n       navigate(\"/loginform\");\r\n     } catch (error) {\r\n-     \r\n       if (\r\n         error.response &&\r\n         error.response.data &&\r\n         error.response.data.data &&\r\n@@ -80,13 +79,14 @@\n       setIsLoading(false);\r\n     }\r\n   };\r\n \r\n-\r\n   return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n+    <form\r\n+      onSubmit={handleResetPassword}\r\n+      className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\"\r\n+    >\r\n       <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n         <div className=\"w-full md:w-1/2 relative\">\r\n           <img\r\n             src=\"/rectangle-780.png\"\r\n             alt=\"Signup Visual\"\r\n@@ -100,9 +100,11 @@\n         </div>\r\n \r\n         <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n           <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n+            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">\r\n+              Reset Password\r\n+            </h2>\r\n             <p className=\"text-m text-[#445963]\">\r\n               Enter your new password so as to <br /> continue and login\r\n             </p>\r\n           </div>\r\n@@ -111,13 +113,17 @@\n             <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n           )}\r\n \r\n           <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n+            <label className=\"block text-sm font-medium mb-1\">\r\n+              New Password*\r\n+            </label>\r\n             <input\r\n-               type={showPassword ? \"text\" : \"password\"}\r\n+              type={showPassword ? \"text\" : \"password\"}\r\n               placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n+              className={`w-full border rounded px-3 py-2 ${\r\n+                fieldError.password && \"border-red-500\"\r\n+              }`}\r\n               value={password}\r\n               onChange={onPasswordChange}\r\n             />\r\n             {fieldError.password && (\r\n@@ -125,30 +131,36 @@\n             )}\r\n           </div>\r\n \r\n           <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n+            <label className=\"block text-sm font-medium mb-1\">\r\n+              Confirm New Password*\r\n+            </label>\r\n             <input\r\n               type=\"password\"\r\n               placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n+              className={`w-full border rounded px-3 py-2 ${\r\n+                fieldError.confirmPassword && \"border-red-500\"\r\n+              }`}\r\n               value={confirmPassword}\r\n               onChange={onConfirmPasswordChange}\r\n             />\r\n             {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n+              <p className=\"text-red-600 text-sm mt-1\">\r\n+                {fieldError.confirmPassword}\r\n+              </p>\r\n             )}\r\n           </div>\r\n-            <div\r\n-                className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n-                onClick={() => setShowPassword((prev) => !prev)}\r\n-              >\r\n-                {showPassword ? (\r\n-                  <EyeOff className=\"w-5 h-5\" />\r\n-                ) : (\r\n-                  <Eye className=\"w-5 h-5\" />\r\n-                )}\r\n-              </div>\r\n+          <div\r\n+            className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n+            onClick={() => setShowPassword((prev) => !prev)}\r\n+          >\r\n+            {showPassword ? (\r\n+              <EyeOff className=\"w-5 h-5\" />\r\n+            ) : (\r\n+              <Eye className=\"w-5 h-5\" />\r\n+            )}\r\n+          </div>\r\n \r\n           <button\r\n             type=\"submit\"\r\n             disabled={isLoading}\r\n@@ -158,9 +170,12 @@\n           </button>\r\n \r\n           <div className=\"text-center text-sm text-gray-600\">\r\n             Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n+            <Link\r\n+              to=\"/loginform\"\r\n+              className=\"text-[#005e0e] font-medium hover:underline\"\r\n+            >\r\n               LOGIN\r\n             </Link>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1755698441327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useState } from \"react\";\r\n import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n import { authService } from \"../../services/authService\";\r\n import toast from \"react-hot-toast\";\r\n+import { Eye, EyeOff } from \"lucide-react\"; // 👈 import icons\r\n \r\n const ResetPasswordForm = () => {\r\n   const navigate = useNavigate();\r\n   const { token, uid } = useParams();\r\n@@ -12,8 +13,9 @@\n   const [fieldError, setFieldError] = useState({});\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [serverError, setServerError] = useState(\"\");\r\n   const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false); // 👈 new state\r\n \r\n   const onPasswordChange = (e) => {\r\n     setPassword(e.target.value);\r\n     setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n@@ -42,9 +44,8 @@\n   };\r\n \r\n   const handleResetPassword = async (e) => {\r\n     e.preventDefault();\r\n-\r\n     const errors = validate();\r\n     if (Object.keys(errors).length > 0) {\r\n       setFieldError(errors);\r\n       return;\r\n@@ -85,8 +86,9 @@\n       onSubmit={handleResetPassword}\r\n       className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\"\r\n     >\r\n       <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n+        {/* Left side image */}\r\n         <div className=\"w-full md:w-1/2 relative\">\r\n           <img\r\n             src=\"/rectangle-780.png\"\r\n             alt=\"Signup Visual\"\r\n@@ -98,8 +100,9 @@\n             className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n           />\r\n         </div>\r\n \r\n+        {/* Right side form */}\r\n         <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n           <div className=\"mb-6\">\r\n             <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">\r\n               Reset Password\r\n@@ -112,56 +115,59 @@\n           {serverError && (\r\n             <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n           )}\r\n \r\n-          <div className=\"mb-4\">\r\n+          {/* New Password */}\r\n+          <div className=\"mb-4 relative\">\r\n             <label className=\"block text-sm font-medium mb-1\">\r\n               New Password*\r\n             </label>\r\n             <input\r\n               type={showPassword ? \"text\" : \"password\"}\r\n               placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${\r\n+              className={`w-full border rounded px-3 py-2 pr-10 ${\r\n                 fieldError.password && \"border-red-500\"\r\n               }`}\r\n               value={password}\r\n               onChange={onPasswordChange}\r\n             />\r\n+            <div\r\n+              className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n+              onClick={() => setShowPassword((prev) => !prev)}\r\n+            >\r\n+              {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\r\n+            </div>\r\n             {fieldError.password && (\r\n               <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n             )}\r\n           </div>\r\n \r\n-          <div className=\"mb-6\">\r\n+          {/* Confirm Password */}\r\n+          <div className=\"mb-6 relative\">\r\n             <label className=\"block text-sm font-medium mb-1\">\r\n               Confirm New Password*\r\n             </label>\r\n             <input\r\n-              type=\"password\"\r\n+              type={showConfirmPassword ? \"text\" : \"password\"}\r\n               placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${\r\n+              className={`w-full border rounded px-3 py-2 pr-10 ${\r\n                 fieldError.confirmPassword && \"border-red-500\"\r\n               }`}\r\n               value={confirmPassword}\r\n               onChange={onConfirmPasswordChange}\r\n             />\r\n+            <div\r\n+              className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n+              onClick={() => setShowConfirmPassword((prev) => !prev)}\r\n+            >\r\n+              {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\r\n+            </div>\r\n             {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">\r\n-                {fieldError.confirmPassword}\r\n-              </p>\r\n+              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n             )}\r\n           </div>\r\n-          <div\r\n-            className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n-            onClick={() => setShowPassword((prev) => !prev)}\r\n-          >\r\n-            {showPassword ? (\r\n-              <EyeOff className=\"w-5 h-5\" />\r\n-            ) : (\r\n-              <Eye className=\"w-5 h-5\" />\r\n-            )}\r\n-          </div>\r\n \r\n+          {/* Submit Button */}\r\n           <button\r\n             type=\"submit\"\r\n             disabled={isLoading}\r\n             className=\"w-full bg-[#005e0e] hover:bg-green-900 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6 cursor-pointer\"\r\n@@ -184,338 +190,4 @@\n   );\r\n };\r\n \r\n export default ResetPasswordForm;\r\n-import React, { useState } from \"react\";\r\n-import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n-import { authService } from \"../../services/authService\";\r\n-import toast from \"react-hot-toast\";\r\n-\r\n-const ResetPasswordForm = () => {\r\n-  const navigate = useNavigate();\r\n-  const { token, uid } = useParams();\r\n-\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-  const [fieldError, setFieldError] = useState({});\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [serverError, setServerError] = useState(\"\");\r\n-  \r\n-\r\n-  const onPasswordChange = (e) => {\r\n-    setPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n-  };\r\n-\r\n-  const onConfirmPasswordChange = (e) => {\r\n-    setConfirmPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n-  };\r\n-\r\n-  const validate = () => {\r\n-    const errors = {};\r\n-    if (!password) {\r\n-      errors.password = \"Password is required\";\r\n-    } else if (password.length < 8) {\r\n-      errors.password = \"Password must be at least 8 characters\";\r\n-    }\r\n-\r\n-    if (!confirmPassword) {\r\n-      errors.confirmPassword = \"Please confirm your password\";\r\n-    } else if (password !== confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleResetPassword = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    const errors = validate();\r\n-    if (Object.keys(errors).length > 0) {\r\n-      setFieldError(errors);\r\n-      return;\r\n-    }\r\n-\r\n-    setIsLoading(true);\r\n-    setServerError(\"\");\r\n-\r\n-    try {\r\n-      await authService.password_reset({\r\n-        uid,\r\n-        token,\r\n-        new_password: password,\r\n-      });\r\n-      toast.success(\"Password reset successful!\");\r\n-      navigate(\"/loginform\");\r\n-    } catch (error) {\r\n-     \r\n-      if (\r\n-        error.response &&\r\n-        error.response.data &&\r\n-        error.response.data.data &&\r\n-        error.response.data.data.token\r\n-      ) {\r\n-        const tokenErrors = error.response.data.data.token.join(\" \");\r\n-        setServerError(tokenErrors);\r\n-        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n-      } else {\r\n-        setServerError(\"Password reset failed. Please try again.\");\r\n-        toast.error(\"Password reset failed. Please try again.\");\r\n-      }\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n-      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n-        <div className=\"w-full md:w-1/2 relative\">\r\n-          <img\r\n-            src=\"/rectangle-780.png\"\r\n-            alt=\"Signup Visual\"\r\n-            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n-          />\r\n-          <img\r\n-            src=\"/logo copy.svg\"\r\n-            alt=\"West Brook Logo\"\r\n-            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n-          <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n-            <p className=\"text-m text-[#445963]\">\r\n-              Enter your new password so as to <br /> continue and login\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {serverError && (\r\n-            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n-          )}\r\n-\r\n-          <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n-              value={password}\r\n-              onChange={onPasswordChange}\r\n-            />\r\n-            {fieldError.password && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n-              value={confirmPassword}\r\n-              onChange={onConfirmPasswordChange}\r\n-            />\r\n-            {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-            <div\r\n-                className=\"absolute top-9 right-3 cursor-pointer text-gray-500\"\r\n-                onClick={() => setShowPassword((prev) => !prev)}\r\n-              >\r\n-                {showPassword ? (\r\n-                  <EyeOff className=\"w-5 h-5\" />\r\n-                ) : (\r\n-                  <Eye className=\"w-5 h-5\" />\r\n-                )}\r\n-              </div>\r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover:bg-green-900 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6 cursor-pointer\"\r\n-          >\r\n-            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n-          </button>\r\n-\r\n-          <div className=\"text-center text-sm text-gray-600\">\r\n-            Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n-              LOGIN\r\n-            </Link>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </form>\r\n-  );\r\n-};\r\n-\r\n-export default ResetPasswordForm;\r\n-import React, { useState } from \"react\";\r\n-import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n-import { authService } from \"../../services/authService\";\r\n-import toast from \"react-hot-toast\";\r\n-\r\n-const ResetPasswordForm = () => {\r\n-  const navigate = useNavigate();\r\n-  const { token, uid } = useParams();\r\n-\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n-  const [fieldError, setFieldError] = useState({});\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [serverError, setServerError] = useState(\"\");\r\n-\r\n-  const onPasswordChange = (e) => {\r\n-    setPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n-  };\r\n-\r\n-  const onConfirmPasswordChange = (e) => {\r\n-    setConfirmPassword(e.target.value);\r\n-    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n-  };\r\n-\r\n-  const validate = () => {\r\n-    const errors = {};\r\n-    if (!password) {\r\n-      errors.password = \"Password is required\";\r\n-    } else if (password.length < 8) {\r\n-      errors.password = \"Password must be at least 8 characters\";\r\n-    }\r\n-\r\n-    if (!confirmPassword) {\r\n-      errors.confirmPassword = \"Please confirm your password\";\r\n-    } else if (password !== confirmPassword) {\r\n-      errors.confirmPassword = \"Passwords do not match\";\r\n-    }\r\n-\r\n-    return errors;\r\n-  };\r\n-\r\n-  const handleResetPassword = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    const errors = validate();\r\n-    if (Object.keys(errors).length > 0) {\r\n-      setFieldError(errors);\r\n-      return;\r\n-    }\r\n-\r\n-    setIsLoading(true);\r\n-    setServerError(\"\");\r\n-\r\n-    try {\r\n-      await authService.password_reset({\r\n-        uid,\r\n-        token,\r\n-        new_password: password,\r\n-      });\r\n-      toast.success(\"Password reset successful!\");\r\n-      navigate(\"/loginform\");\r\n-    } catch (error) {\r\n-     \r\n-      if (\r\n-        error.response &&\r\n-        error.response.data &&\r\n-        error.response.data.data &&\r\n-        error.response.data.data.token\r\n-      ) {\r\n-        const tokenErrors = error.response.data.data.token.join(\" \");\r\n-        setServerError(tokenErrors);\r\n-        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n-      } else {\r\n-        setServerError(\"Password reset failed. Please try again.\");\r\n-        toast.error(\"Password reset failed. Please try again.\");\r\n-      }\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  return (\r\n-    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n-      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n-\r\n-        <div className=\"w-full md:w-1/2 relative\">\r\n-          <img\r\n-            src=\"/rectangle-780.png\"\r\n-            alt=\"Signup Visual\"\r\n-            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n-          />\r\n-          <img\r\n-            src=\"/logo copy.svg\"\r\n-            alt=\"West Brook Logo\"\r\n-            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n-          />\r\n-        </div>\r\n-\r\n-        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n-          <div className=\"mb-6\">\r\n-            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n-            <p className=\"text-m text-[#445963]\">\r\n-              Enter your new password so as to <br /> continue and login\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {serverError && (\r\n-            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n-          )}\r\n-\r\n-          <div className=\"mb-4\">\r\n-            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Create New Password\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n-              value={password}\r\n-              onChange={onPasswordChange}\r\n-            />\r\n-            {fieldError.password && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n-            )}\r\n-          </div>\r\n-\r\n-          <div className=\"mb-6\">\r\n-            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n-            <input\r\n-              type=\"password\"\r\n-              placeholder=\"Enter Password Again\"\r\n-              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n-              value={confirmPassword}\r\n-              onChange={onConfirmPasswordChange}\r\n-            />\r\n-            {fieldError.confirmPassword && (\r\n-              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n-            )}\r\n-          </div>\r\n-          \r\n-\r\n-          <button\r\n-            type=\"submit\"\r\n-            disabled={isLoading}\r\n-            className=\"w-full bg-[#005e0e] hover:bg-green-900 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6 cursor-pointer\"\r\n-          >\r\n-            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n-          </button>\r\n-\r\n-          <div className=\"text-center text-sm text-gray-600\">\r\n-            Go back to{\" \"}\r\n-            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n-              LOGIN\r\n-            </Link>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </form>\r\n-  );\r\n-};\r\n-\r\n-export default ResetPasswordForm;\r\n"
                }
            ],
            "date": 1755697220085,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { authService } from \"../../services/authService\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst ResetPasswordForm = () => {\r\n  const navigate = useNavigate();\r\n  const { token, uid } = useParams();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [fieldError, setFieldError] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [serverError, setServerError] = useState(\"\");\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    setFieldError((prev) => ({ ...prev, password: \"\" }));\r\n  };\r\n\r\n  const onConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    setFieldError((prev) => ({ ...prev, confirmPassword: \"\" }));\r\n  };\r\n\r\n  const validate = () => {\r\n    const errors = {};\r\n    if (!password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (password.length < 8) {\r\n      errors.password = \"Password must be at least 8 characters\";\r\n    }\r\n\r\n    if (!confirmPassword) {\r\n      errors.confirmPassword = \"Please confirm your password\";\r\n    } else if (password !== confirmPassword) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = validate();\r\n    if (Object.keys(errors).length > 0) {\r\n      setFieldError(errors);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setServerError(\"\");\r\n\r\n    try {\r\n      await authService.password_reset({\r\n        uid,\r\n        token,\r\n        new_password: password,\r\n      });\r\n      toast.success(\"Password reset successful!\");\r\n      navigate(\"/loginform\");\r\n    } catch (error) {\r\n     \r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.data &&\r\n        error.response.data.data.token\r\n      ) {\r\n        const tokenErrors = error.response.data.data.token.join(\" \");\r\n        setServerError(tokenErrors);\r\n        toast.error(tokenErrors || \"Password reset failed. Please try again.\");\r\n      } else {\r\n        setServerError(\"Password reset failed. Please try again.\");\r\n        toast.error(\"Password reset failed. Please try again.\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleResetPassword} className=\"min-h-screen flex items-center justify-center bg-gray-100 p-6\">\r\n      <div className=\"bg-white shadow-lg rounded-lg w-full max-w-4xl flex flex-col md:flex-row\">\r\n\r\n        <div className=\"w-full md:w-1/2 relative\">\r\n          <img\r\n            src=\"/rectangle-780.png\"\r\n            alt=\"Signup Visual\"\r\n            className=\"w-full h-full object-cover rounded-t-lg md:rounded-l-lg md:rounded-tr-none\"\r\n          />\r\n          <img\r\n            src=\"/logo copy.svg\"\r\n            alt=\"West Brook Logo\"\r\n            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-[150px] sm:max-w-[200px] lg:max-w-[250px] max-h-[200px] sm:max-h-[300px] lg:max-h-[500px] w-full h-auto animate-bounce-once\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"w-full md:w-1/2 p-8 mt-10 \">\r\n          <div className=\"mb-6\">\r\n            <h2 className=\"text-2xl font-DM Sans font-bold text-[#445963] mb-2\">Reset Password</h2>\r\n            <p className=\"text-m text-[#445963]\">\r\n              Enter your new password so as to <br /> continue and login\r\n            </p>\r\n          </div>\r\n\r\n          {serverError && (\r\n            <p className=\"text-red-600 text-sm mb-4\">{serverError}</p>\r\n          )}\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">New Password*</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Create New Password\"\r\n              className={`w-full border rounded px-3 py-2 ${fieldError.password && \"border-red-500\"}`}\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n            {fieldError.password && (\r\n              <p className=\"text-red-600 text-sm mt-1\">{fieldError.password}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-sm font-medium mb-1\">Confirm New Password*</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter Password Again\"\r\n              className={`w-full border rounded px-3 py-2 ${fieldError.confirmPassword && \"border-red-500\"}`}\r\n              value={confirmPassword}\r\n              onChange={onConfirmPasswordChange}\r\n            />\r\n            {fieldError.confirmPassword && (\r\n              <p className=\"text-red-600 text-sm mt-1\">{fieldError.confirmPassword}</p>\r\n            )}\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-[#005e0e] text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed mb-6\"\r\n          >\r\n            {isLoading ? \"RESETTING...\" : \"RESET PASSWORD\"}\r\n          </button>\r\n\r\n          <div className=\"text-center text-sm text-gray-600\">\r\n            Go back to{\" \"}\r\n            <Link to=\"/loginform\" className=\"text-[#005e0e] font-medium hover:underline\">\r\n              LOGIN\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n"
        }
    ]
}