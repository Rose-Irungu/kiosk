{
    "sourceFile": "src/components/forms/GuestCheckInForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1754310573560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754310596547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React from \"react\";\r\n+import { useVisitorForm } from \"../../hooks/useVisitorForm\";\r\n+\r\n+export default function GuestCheckInForm() {\r\n+  const {\r\n+    formData,\r\n+    loading,\r\n+    error,\r\n+    isVisitorMode,\r\n+    isSecurityMode,\r\n+    isResidentMode,\r\n+    token,\r\n+    handleInputChange,\r\n+    handleSubmit\r\n+  } = useVisitorForm();\r\n+\r\n+\r\n+  const getFormTitle = () => {\r\n+    if (isVisitorMode) return \"Complete Your Invitation\";\r\n+    if (isSecurityMode) return \"Security Check-in\";\r\n+    return \"Invite a Visitor\";\r\n+  };\r\n+\r\n+  const getFormDescription = () => {\r\n+    if (isVisitorMode) {\r\n+      const full_name = formData?.full_name || \"Guest\";\r\n+      const host_name = formData?.host_name || \"a resident\";\r\n+      return `Hi ${full_name},\\n${host_name} has sent you an invite link to West Brook Apartments.\\nComplete the form for a smooth check-in process.`;\r\n+\r\n+    }\r\n+    if (isSecurityMode) {\r\n+      return \"Fill in the visitor details for gate entry.\";\r\n+    }\r\n+    return \"Fill in guest details to send an invitation.\";\r\n+  };\r\n+\r\n+  const isFieldPrefilled = (key) => {\r\n+    if (!isVisitorMode) return false;\r\n+\r\n+    const prefilledFields = ['full_name', 'email', 'visit_date', 'host_name', 'unit_number'];\r\n+    return prefilledFields.includes(key) && formData[key];\r\n+  };\r\n+\r\n+  const getFieldConfig = () => {\r\n+    if (isResidentMode) {\r\n+      return [\r\n+        {\r\n+          key: 'full_name',\r\n+          label: 'Guest Name *',\r\n+          placeholder: 'Enter guest name',\r\n+          required: true\r\n+        },\r\n+        {\r\n+          key: 'email',\r\n+          label: 'Email *',\r\n+          placeholder: 'e.g guest@email.com',\r\n+          required: true\r\n+        },\r\n+        {\r\n+          key: 'visit_date',\r\n+          label: 'Visit Date *',\r\n+          placeholder: 'dd/mm/yyyy',\r\n+          type: 'date',\r\n+          required: true\r\n+        },\r\n+        {\r\n+          key: 'visitor_type',\r\n+          label: 'Visitor Type *',\r\n+          placeholder: 'Select visitor type',\r\n+          type: 'select',\r\n+          required: true,\r\n+          options: [\r\n+            { value: 'visitor', label: 'Visitor' },\r\n+            { value: 'delivery', label: 'Delivery' },\r\n+            { value: 'service', label: 'Service Provider' }\r\n+          ]\r\n+        }\r\n+      ];\r\n+    }\r\n+\r\n+    const baseFields = [\r\n+      {\r\n+        key: 'full_name',\r\n+        label: 'Guest Name *',\r\n+        placeholder: 'Enter guest name',\r\n+        required: true\r\n+      },\r\n+      {\r\n+        key: 'phone_number',\r\n+        label: 'Phone Number *',\r\n+        placeholder: '+254-723-456-789',\r\n+        required: true\r\n+      },\r\n+      {\r\n+        key: 'email',\r\n+        label: 'Email *',\r\n+        placeholder: 'e.g guest@email.com',\r\n+        required: true\r\n+      },\r\n+      {\r\n+        key: 'visit_date',\r\n+        label: 'Visit Date *',\r\n+        placeholder: 'dd/mm/yyyy',\r\n+        type: 'date',\r\n+        required: true\r\n+      },\r\n+      {\r\n+        key: 'plate_number',\r\n+        label: 'Car Number Plate (Optional)',\r\n+        placeholder: 'e.g KCW 123K',\r\n+        required: false\r\n+      }\r\n+    ];\r\n+\r\n+    if (isVisitorMode) {\r\n+      baseFields.push(\r\n+        {\r\n+          key: 'host_name',\r\n+          label: 'Host Name',\r\n+          placeholder: 'Host information',\r\n+          readOnly: true,\r\n+          required: false\r\n+        },\r\n+        {\r\n+          key: 'unit_number',\r\n+          label: 'Unit Number',\r\n+          placeholder: 'Unit information',\r\n+          readOnly: true,\r\n+          required: false\r\n+        }\r\n+      );\r\n+    } else if (isSecurityMode) {\r\n+      baseFields.push(\r\n+        {\r\n+          key: 'unit_number',\r\n+          label: 'Unit Number *',\r\n+          placeholder: 'e.g 302b',\r\n+          required: true\r\n+        },\r\n+        {\r\n+          key: 'host_name',\r\n+          label: 'Host Name *',\r\n+          placeholder: 'Host name',\r\n+          required: true\r\n+        },\r\n+        {\r\n+          key: 'visitor_type',\r\n+          label: 'Visitor Type *',\r\n+          placeholder: 'Select visitor type',\r\n+          type: 'select',\r\n+          required: true,\r\n+          options: [\r\n+            { value: 'visitor', label: 'Visitor' },\r\n+            { value: 'delivery', label: 'Delivery' },\r\n+            { value: 'service', label: 'Service Provider' }\r\n+          ]\r\n+        }\r\n+      );\r\n+    }\r\n+\r\n+    return baseFields;\r\n+  };\r\n+\r\n+  // Show loading state while fetching invitation data in visitor mode\r\n+  if (loading && isVisitorMode) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-64\">\r\n+        <div className=\"text-[#00580d]\">Loading invitation details...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col gap-16 w-[280px]\">\r\n+      {/* Header */}\r\n+      <div className=\"flex items-center justify-between w-full\">\r\n+        <div className=\"flex items-center gap-5  px-1 py-1 h-[29px]\">\r\n+          <div className=\"flex items-center gap-5\">\r\n+\r\n+            <img src=\"/logo.svg\" alt=\"Flag\" className=\"w-1/2 mt-7 ml-12\" />\r\n+          </div>\r\n+\r\n+        </div>\r\n+        {/* <img\r\n+          src=\"/iconoir-cancel0.svg\"\r\n+          alt=\"Close\"\r\n+          className=\"w-50 h-50 ml-2 cursor-pointer\"\r\n+        /> */}\r\n+\r\n+      </div>\r\n+\r\n+      {/* Form Content */}\r\n+      <div className=\"flex flex-col items-center gap-4 w-full h-full\">\r\n+        <div className=\"text-[#00580d] text-sm font-medium text-left\">\r\n+          <h2 className=\"font-bold mb-2\">{getFormTitle()}</h2>\r\n+          <p className=\"whitespace-pre-line text-sm text-[#00580d] font-medium text-left\">{getFormDescription()}</p>\r\n+        </div>\r\n+\r\n+        {error && (\r\n+          <div className=\"text-red-500 text-sm text-center w-full\">\r\n+            {error}\r\n+          </div>\r\n+        )}\r\n+\r\n+        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 w-full\">\r\n+          {getFieldConfig().map(({ key, label, placeholder, type = 'text', required, readOnly, options }) => {\r\n+            const isPrefilled = isFieldPrefilled(key);\r\n+            const isDisabled = readOnly || isPrefilled;\r\n+\r\n+            return (\r\n+              <div key={key} className=\"flex flex-col gap-1 w-full\">\r\n+                <label className=\"text-[#00d21e] text-xs font-medium\">\r\n+                  {label}\r\n+                </label>\r\n+                <div className={`bg-white border border-[#54e168] rounded-xl px-3 py-2 text-sm text-[#00580d] ${isDisabled ? 'opacity-60 bg-gray-50' : ''\r\n+                  }`}>\r\n+                  {type === 'select' ? (\r\n+                    <select\r\n+                      value={formData[key]}\r\n+                      onChange={(e) => handleInputChange(key, e.target.value)}\r\n+                      required={required}\r\n+                      disabled={isDisabled}\r\n+                      className=\"w-full outline-none bg-transparent text-xs font-medium\"\r\n+                    >\r\n+                      <option value=\"\">{placeholder}</option>\r\n+                      {options?.map(option => (\r\n+                        <option key={option.value} value={option.value}>\r\n+                          {option.label}\r\n+                        </option>\r\n+                      ))}\r\n+                    </select>\r\n+                  ) : (\r\n+                    <input\r\n+                      type={type}\r\n+                      placeholder={placeholder}\r\n+                      value={formData[key] || ''}\r\n+                      onChange={(e) => handleInputChange(key, e.target.value)}\r\n+                      required={required}\r\n+                      disabled={isDisabled}\r\n+                      className={`w-full outline-none bg-transparent placeholder:text-xs placeholder:font-medium ${isDisabled ? 'cursor-not-allowed' : ''\r\n+                        }`}\r\n+                    />\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            );\r\n+          })}\r\n+\r\n+          {/* Photo Upload - Required for visitor mode */}\r\n+          {(isVisitorMode || isSecurityMode) && (\r\n+            <div className=\"flex flex-col gap-1 w-full\">\r\n+              <label className=\"text-[#00d21e] text-xs font-medium\">\r\n+                Photo {isVisitorMode ? '*' : '(Optional)'}\r\n+              </label>\r\n+              <div className=\"flex items-center justify-between border border-[#00d21e] rounded-xl overflow-hidden\">\r\n+                <span className=\"text-[#9abd9f] text-xs px-3\">PNG/JPG</span>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => document.getElementById('photo-upload').click()}\r\n+                  className=\"bg-[#00d21e] hover:bg-[#1ba134] text-white text-xs font-semibold px-4 py-2 rounded-r-xl\"\r\n+                >\r\n+                  Upload\r\n+                </button>\r\n+                <input\r\n+                  id=\"photo-upload\"\r\n+                  type=\"file\"\r\n+                  accept=\"image/*\"\r\n+                  onChange={(e) => handleInputChange('pro', e.target.files[0])}\r\n+                  className=\"hidden\"\r\n+\r\n+                />\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Submit Button */}\r\n+          <div className=\"bg-[#00d21e] hover:bg-[#1ba134] text-white rounded-[24px] px-6 py-2 shadow-md text-center mt-4\">\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={loading}\r\n+              className=\"text-white text-base font-medium w-full\"\r\n+            >\r\n+              {loading ? 'Submitting...' :\r\n+                isVisitorMode ? 'Complete Registration' :\r\n+                  isResidentMode ? 'Send Invitation' : 'Register Visitor'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754310602242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n                 <input\r\n                   id=\"photo-upload\"\r\n                   type=\"file\"\r\n                   accept=\"image/*\"\r\n-                  onChange={(e) => handleInputChange('profile', e.target.files[0])}\r\n+                  onChange={(e) => handleInputChange('profile_pic', e.target.files[0])}\r\n                   className=\"hidden\"\r\n \r\n                 />\r\n               </div>\r\n"
                }
            ],
            "date": 1754310573560,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { useVisitorForm } from \"../../hooks/useVisitorForm\";\r\n\r\nexport default function GuestCheckInForm() {\r\n  const {\r\n    formData,\r\n    loading,\r\n    error,\r\n    isVisitorMode,\r\n    isSecurityMode,\r\n    isResidentMode,\r\n    token,\r\n    handleInputChange,\r\n    handleSubmit\r\n  } = useVisitorForm();\r\n\r\n\r\n  const getFormTitle = () => {\r\n    if (isVisitorMode) return \"Complete Your Invitation\";\r\n    if (isSecurityMode) return \"Security Check-in\";\r\n    return \"Invite a Visitor\";\r\n  };\r\n\r\n  const getFormDescription = () => {\r\n    if (isVisitorMode) {\r\n      const full_name = formData?.full_name || \"Guest\";\r\n      const host_name = formData?.host_name || \"a resident\";\r\n      return `Hi ${full_name},\\n${host_name} has sent you an invite link to West Brook Apartments.\\nComplete the form for a smooth check-in process.`;\r\n\r\n    }\r\n    if (isSecurityMode) {\r\n      return \"Fill in the visitor details for gate entry.\";\r\n    }\r\n    return \"Fill in guest details to send an invitation.\";\r\n  };\r\n\r\n  const isFieldPrefilled = (key) => {\r\n    if (!isVisitorMode) return false;\r\n\r\n    const prefilledFields = ['full_name', 'email', 'visit_date', 'host_name', 'unit_number'];\r\n    return prefilledFields.includes(key) && formData[key];\r\n  };\r\n\r\n  const getFieldConfig = () => {\r\n    if (isResidentMode) {\r\n      return [\r\n        {\r\n          key: 'full_name',\r\n          label: 'Guest Name *',\r\n          placeholder: 'Enter guest name',\r\n          required: true\r\n        },\r\n        {\r\n          key: 'email',\r\n          label: 'Email *',\r\n          placeholder: 'e.g guest@email.com',\r\n          required: true\r\n        },\r\n        {\r\n          key: 'visit_date',\r\n          label: 'Visit Date *',\r\n          placeholder: 'dd/mm/yyyy',\r\n          type: 'date',\r\n          required: true\r\n        },\r\n        {\r\n          key: 'visitor_type',\r\n          label: 'Visitor Type *',\r\n          placeholder: 'Select visitor type',\r\n          type: 'select',\r\n          required: true,\r\n          options: [\r\n            { value: 'visitor', label: 'Visitor' },\r\n            { value: 'delivery', label: 'Delivery' },\r\n            { value: 'service', label: 'Service Provider' }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n\r\n    const baseFields = [\r\n      {\r\n        key: 'full_name',\r\n        label: 'Guest Name *',\r\n        placeholder: 'Enter guest name',\r\n        required: true\r\n      },\r\n      {\r\n        key: 'phone_number',\r\n        label: 'Phone Number *',\r\n        placeholder: '+254-723-456-789',\r\n        required: true\r\n      },\r\n      {\r\n        key: 'email',\r\n        label: 'Email *',\r\n        placeholder: 'e.g guest@email.com',\r\n        required: true\r\n      },\r\n      {\r\n        key: 'visit_date',\r\n        label: 'Visit Date *',\r\n        placeholder: 'dd/mm/yyyy',\r\n        type: 'date',\r\n        required: true\r\n      },\r\n      {\r\n        key: 'plate_number',\r\n        label: 'Car Number Plate (Optional)',\r\n        placeholder: 'e.g KCW 123K',\r\n        required: false\r\n      }\r\n    ];\r\n\r\n    if (isVisitorMode) {\r\n      baseFields.push(\r\n        {\r\n          key: 'host_name',\r\n          label: 'Host Name',\r\n          placeholder: 'Host information',\r\n          readOnly: true,\r\n          required: false\r\n        },\r\n        {\r\n          key: 'unit_number',\r\n          label: 'Unit Number',\r\n          placeholder: 'Unit information',\r\n          readOnly: true,\r\n          required: false\r\n        }\r\n      );\r\n    } else if (isSecurityMode) {\r\n      baseFields.push(\r\n        {\r\n          key: 'unit_number',\r\n          label: 'Unit Number *',\r\n          placeholder: 'e.g 302b',\r\n          required: true\r\n        },\r\n        {\r\n          key: 'host_name',\r\n          label: 'Host Name *',\r\n          placeholder: 'Host name',\r\n          required: true\r\n        },\r\n        {\r\n          key: 'visitor_type',\r\n          label: 'Visitor Type *',\r\n          placeholder: 'Select visitor type',\r\n          type: 'select',\r\n          required: true,\r\n          options: [\r\n            { value: 'visitor', label: 'Visitor' },\r\n            { value: 'delivery', label: 'Delivery' },\r\n            { value: 'service', label: 'Service Provider' }\r\n          ]\r\n        }\r\n      );\r\n    }\r\n\r\n    return baseFields;\r\n  };\r\n\r\n  // Show loading state while fetching invitation data in visitor mode\r\n  if (loading && isVisitorMode) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"text-[#00580d]\">Loading invitation details...</div>\r\n      </div>F\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-16 w-[280px]\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between w-full\">\r\n        <div className=\"flex items-center gap-5  px-1 py-1 h-[29px]\">\r\n          <div className=\"flex items-center gap-5\">\r\n\r\n            <img src=\"/logo.svg\" alt=\"Flag\" className=\"w-1/2 mt-7 ml-12\" />\r\n          </div>\r\n\r\n        </div>\r\n        {/* <img\r\n          src=\"/iconoir-cancel0.svg\"\r\n          alt=\"Close\"\r\n          className=\"w-50 h-50 ml-2 cursor-pointer\"\r\n        /> */}\r\n\r\n      </div>\r\n\r\n      {/* Form Content */}\r\n      <div className=\"flex flex-col items-center gap-4 w-full h-full\">\r\n        <div className=\"text-[#00580d] text-sm font-medium text-left\">\r\n          <h2 className=\"font-bold mb-2\">{getFormTitle()}</h2>\r\n          <p className=\"whitespace-pre-line text-sm text-[#00580d] font-medium text-left\">{getFormDescription()}</p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"text-red-500 text-sm text-center w-full\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 w-full\">\r\n          {getFieldConfig().map(({ key, label, placeholder, type = 'text', required, readOnly, options }) => {\r\n            const isPrefilled = isFieldPrefilled(key);\r\n            const isDisabled = readOnly || isPrefilled;\r\n\r\n            return (\r\n              <div key={key} className=\"flex flex-col gap-1 w-full\">\r\n                <label className=\"text-[#00d21e] text-xs font-medium\">\r\n                  {label}\r\n                </label>\r\n                <div className={`bg-white border border-[#54e168] rounded-xl px-3 py-2 text-sm text-[#00580d] ${isDisabled ? 'opacity-60 bg-gray-50' : ''\r\n                  }`}>\r\n                  {type === 'select' ? (\r\n                    <select\r\n                      value={formData[key]}\r\n                      onChange={(e) => handleInputChange(key, e.target.value)}\r\n                      required={required}\r\n                      disabled={isDisabled}\r\n                      className=\"w-full outline-none bg-transparent text-xs font-medium\"\r\n                    >\r\n                      <option value=\"\">{placeholder}</option>\r\n                      {options?.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  ) : (\r\n                    <input\r\n                      type={type}\r\n                      placeholder={placeholder}\r\n                      value={formData[key] || ''}\r\n                      onChange={(e) => handleInputChange(key, e.target.value)}\r\n                      required={required}\r\n                      disabled={isDisabled}\r\n                      className={`w-full outline-none bg-transparent placeholder:text-xs placeholder:font-medium ${isDisabled ? 'cursor-not-allowed' : ''\r\n                        }`}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {/* Photo Upload - Required for visitor mode */}\r\n          {(isVisitorMode || isSecurityMode) && (\r\n            <div className=\"flex flex-col gap-1 w-full\">\r\n              <label className=\"text-[#00d21e] text-xs font-medium\">\r\n                Photo {isVisitorMode ? '*' : '(Optional)'}\r\n              </label>\r\n              <div className=\"flex items-center justify-between border border-[#00d21e] rounded-xl overflow-hidden\">\r\n                <span className=\"text-[#9abd9f] text-xs px-3\">PNG/JPG</span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => document.getElementById('photo-upload').click()}\r\n                  className=\"bg-[#00d21e] hover:bg-[#1ba134] text-white text-xs font-semibold px-4 py-2 rounded-r-xl\"\r\n                >\r\n                  Upload\r\n                </button>\r\n                <input\r\n                  id=\"photo-upload\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => handleInputChange('photo', e.target.files[0])}\r\n                  className=\"hidden\"\r\n\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"bg-[#00d21e] hover:bg-[#1ba134] text-white rounded-[24px] px-6 py-2 shadow-md text-center mt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"text-white text-base font-medium w-full\"\r\n            >\r\n              {loading ? 'Submitting...' :\r\n                isVisitorMode ? 'Complete Registration' :\r\n                  isResidentMode ? 'Send Invitation' : 'Register Visitor'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"
        }
    ]
}