{
    "sourceFile": "src/components/FloorManagement.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1754395632722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754395820383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         id: Date.now(),\r\n         name: floorName.trim(),\r\n         rooms: []\r\n       };\r\n-      setFloors([...floors, newFloor]);\r\n+      setFloors(prev => [...prev, newFloor]);\r\n       setFloorName('');\r\n       setShowFloorModal(false);\r\n     }\r\n   };\r\n@@ -27,13 +27,15 @@\n       const newRoom = {\r\n         id: Date.now(),\r\n         name: roomName.trim()\r\n       };\r\n-      setFloors(floors.map(floor => \r\n-        floor.id === selectedFloorId \r\n-          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n-          : floor\r\n-      ));\r\n+      setFloors(prev =>\r\n+        prev.map(floor =>\r\n+          floor.id === selectedFloorId\r\n+            ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+            : floor\r\n+        )\r\n+      );\r\n       setRoomName('');\r\n       setShowRoomModal(false);\r\n       setSelectedFloorId(null);\r\n     }\r\n@@ -54,8 +56,9 @@\n \r\n   return (\r\n     <div className=\"min-h-screen bg-gray-50 p-6\">\r\n       <div className=\"max-w-6xl mx-auto\">\r\n+        {/* Header */}\r\n         <div className=\"flex justify-between items-center mb-8\">\r\n           <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n           <button\r\n             onClick={() => setShowFloorModal(true)}\r\n@@ -65,17 +68,23 @@\n             Add Floor\r\n           </button>\r\n         </div>\r\n \r\n+        {/* Floors List */}\r\n         {floors.length === 0 ? (\r\n           <div className=\"text-center py-16\">\r\n             <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n-            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n+            <p className=\"text-gray-500 text-lg\">\r\n+              No floors added yet. Click \"Add Floor\" to get started!\r\n+            </p>\r\n           </div>\r\n         ) : (\r\n           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n             {floors.map(floor => (\r\n-              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n+              <div\r\n+                key={floor.id}\r\n+                className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\"\r\n+              >\r\n                 <div className=\"flex justify-between items-center mb-4\">\r\n                   <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n                     <Home size={20} className=\"text-blue-600\" />\r\n                     {floor.name}\r\n@@ -87,131 +96,18 @@\n                     <Plus size={16} />\r\n                     Add Room\r\n                   </button>\r\n                 </div>\r\n-                \r\n+\r\n                 <div className=\"space-y-2\">\r\n                   <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n                     <Users size={16} />\r\n-                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n+                    <span className=\"text-sm font-medium\">\r\n+                      Rooms ({floor.rooms.length})\r\n+                    </span>\r\n                   </div>\r\n-                  \r\n+\r\n                   {floor.rooms.length === 0 ? (\r\n                     <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n                   ) : (\r\n-                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n-                      {floor.rooms.map(room => (\r\n-                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n-                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n-                        </div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Floor Modal */}\r\n-        {showFloorModal && (\r\n-          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n-              <div className=\"flex justify-between items-center mb-4\">\r\n-                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n-                <button\r\n-                  onClick={closeModals}\r\n-                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n-                >\r\n-                  <X size={24} />\r\n-                </button>\r\n-              </div>\r\n-              \r\n-              <div className=\"space-y-4\">\r\n-                <div>\r\n-                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n-                    Floor Name\r\n-                  </label>\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    value={floorName}\r\n-                    onChange={(e) => setFloorName(e.target.value)}\r\n-                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n-                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n-                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n-                  />\r\n-                </div>\r\n-                \r\n-                <div className=\"flex gap-3 pt-4\">\r\n-                  <button\r\n-                    onClick={closeModals}\r\n-                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n-                  >\r\n-                    Cancel\r\n-                  </button>\r\n-                  <button\r\n-                    onClick={addFloor}\r\n-                    disabled={!floorName.trim()}\r\n-                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n-                  >\r\n-                    Add Floor\r\n-                  </button>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* Room Modal */}\r\n-        {showRoomModal && (\r\n-          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n-              <div className=\"flex justify-between items-center mb-4\">\r\n-                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n-                <button\r\n-                  onClick={closeModals}\r\n-                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n-                >\r\n-                  <X size={24} />\r\n-                </button>\r\n-              </div>\r\n-              \r\n-              <div className=\"space-y-4\">\r\n-                <div>\r\n-                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n-                    Room Name\r\n-                  </label>\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    value={roomName}\r\n-                    onChange={(e) => setRoomName(e.target.value)}\r\n-                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n-                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n-                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n-                  />\r\n-                </div>\r\n-                \r\n-                <div className=\"flex gap-3 pt-4\">\r\n-                  <button\r\n-                    onClick={closeModals}\r\n-                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n-                  >\r\n-                    Cancel\r\n-                  </button>\r\n-                  <button\r\n-                    onClick={addRoom}\r\n-                    disabled={!roomName.trim()}\r\n-                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n-                  >\r\n-                    Add Room\r\n-                  </button>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n\\ No newline at end of file\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default FloorRoomManager;\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto pr-2\">\r\n+                      {flo\r\n"
                },
                {
                    "date": 1754395879107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         id: Date.now(),\r\n         name: floorName.trim(),\r\n         rooms: []\r\n       };\r\n-      setFloors(prev => [...prev, newFloor]);\r\n+      setFloors([...floors, newFloor]);\r\n       setFloorName('');\r\n       setShowFloorModal(false);\r\n     }\r\n   };\r\n@@ -27,15 +27,13 @@\n       const newRoom = {\r\n         id: Date.now(),\r\n         name: roomName.trim()\r\n       };\r\n-      setFloors(prev =>\r\n-        prev.map(floor =>\r\n-          floor.id === selectedFloorId\r\n-            ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n-            : floor\r\n-        )\r\n-      );\r\n+      setFloors(floors.map(floor => \r\n+        floor.id === selectedFloorId \r\n+          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+          : floor\r\n+      ));\r\n       setRoomName('');\r\n       setShowRoomModal(false);\r\n       setSelectedFloorId(null);\r\n     }\r\n@@ -56,9 +54,8 @@\n \r\n   return (\r\n     <div className=\"min-h-screen bg-gray-50 p-6\">\r\n       <div className=\"max-w-6xl mx-auto\">\r\n-        {/* Header */}\r\n         <div className=\"flex justify-between items-center mb-8\">\r\n           <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n           <button\r\n             onClick={() => setShowFloorModal(true)}\r\n@@ -68,23 +65,17 @@\n             Add Floor\r\n           </button>\r\n         </div>\r\n \r\n-        {/* Floors List */}\r\n         {floors.length === 0 ? (\r\n           <div className=\"text-center py-16\">\r\n             <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n-            <p className=\"text-gray-500 text-lg\">\r\n-              No floors added yet. Click \"Add Floor\" to get started!\r\n-            </p>\r\n+            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n           </div>\r\n         ) : (\r\n           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n             {floors.map(floor => (\r\n-              <div\r\n-                key={floor.id}\r\n-                className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\"\r\n-              >\r\n+              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n                 <div className=\"flex justify-between items-center mb-4\">\r\n                   <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n                     <Home size={20} className=\"text-blue-600\" />\r\n                     {floor.name}\r\n@@ -96,18 +87,131 @@\n                     <Plus size={16} />\r\n                     Add Room\r\n                   </button>\r\n                 </div>\r\n-\r\n+                \r\n                 <div className=\"space-y-2\">\r\n                   <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n                     <Users size={16} />\r\n-                    <span className=\"text-sm font-medium\">\r\n-                      Rooms ({floor.rooms.length})\r\n-                    </span>\r\n+                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n                   </div>\r\n-\r\n+                  \r\n                   {floor.rooms.length === 0 ? (\r\n                     <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n                   ) : (\r\n-                    <div className=\"space-y-2 max-h-40 overflow-y-auto pr-2\">\r\n-                      {flo\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n+                      {floor.rooms.map(room => (\r\n+                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n+                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Floor Modal */}\r\n+        {showFloorModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Floor Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={floorName}\r\n+                    onChange={(e) => setFloorName(e.target.value)}\r\n+                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addFloor}\r\n+                    disabled={!floorName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Floor\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Room Modal */}\r\n+        {showRoomModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Room Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={roomName}\r\n+                    onChange={(e) => setRoomName(e.target.value)}\r\n+                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addRoom}\r\n+                    disabled={!roomName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FloorRoomManager;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754395924674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         id: Date.now(),\r\n         name: floorName.trim(),\r\n         rooms: []\r\n       };\r\n-      setFloors([...floors, newFloor]);\r\n+      setFloors(prev => [...prev, newFloor]);\r\n       setFloorName('');\r\n       setShowFloorModal(false);\r\n     }\r\n   };\r\n@@ -27,13 +27,15 @@\n       const newRoom = {\r\n         id: Date.now(),\r\n         name: roomName.trim()\r\n       };\r\n-      setFloors(floors.map(floor => \r\n-        floor.id === selectedFloorId \r\n-          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n-          : floor\r\n-      ));\r\n+      setFloors(prev =>\r\n+        prev.map(floor =>\r\n+          floor.id === selectedFloorId\r\n+            ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+            : floor\r\n+        )\r\n+      );\r\n       setRoomName('');\r\n       setShowRoomModal(false);\r\n       setSelectedFloorId(null);\r\n     }\r\n@@ -54,8 +56,9 @@\n \r\n   return (\r\n     <div className=\"min-h-screen bg-gray-50 p-6\">\r\n       <div className=\"max-w-6xl mx-auto\">\r\n+        {/* Header */}\r\n         <div className=\"flex justify-between items-center mb-8\">\r\n           <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n           <button\r\n             onClick={() => setShowFloorModal(true)}\r\n@@ -65,17 +68,23 @@\n             Add Floor\r\n           </button>\r\n         </div>\r\n \r\n+        {/* Floors List */}\r\n         {floors.length === 0 ? (\r\n           <div className=\"text-center py-16\">\r\n             <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n-            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n+            <p className=\"text-gray-500 text-lg\">\r\n+              No floors added yet. Click \"Add Floor\" to get started!\r\n+            </p>\r\n           </div>\r\n         ) : (\r\n           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n             {floors.map(floor => (\r\n-              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n+              <div\r\n+                key={floor.id}\r\n+                className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\"\r\n+              >\r\n                 <div className=\"flex justify-between items-center mb-4\">\r\n                   <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n                     <Home size={20} className=\"text-blue-600\" />\r\n                     {floor.name}\r\n@@ -87,21 +96,26 @@\n                     <Plus size={16} />\r\n                     Add Room\r\n                   </button>\r\n                 </div>\r\n-                \r\n+\r\n                 <div className=\"space-y-2\">\r\n                   <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n                     <Users size={16} />\r\n-                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n+                    <span className=\"text-sm font-medium\">\r\n+                      Rooms ({floor.rooms.length})\r\n+                    </span>\r\n                   </div>\r\n-                  \r\n+\r\n                   {floor.rooms.length === 0 ? (\r\n                     <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n                   ) : (\r\n-                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto pr-2\">\r\n                       {floor.rooms.map(room => (\r\n-                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n+                        <div\r\n+                          key={room.id}\r\n+                          className=\"bg-gray-50 px-3 py-2 rounded-lg\"\r\n+                        >\r\n                           <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n@@ -111,107 +125,104 @@\n             ))}\r\n           </div>\r\n         )}\r\n \r\n-        {/* Floor Modal */}\r\n+        {/* Add Floor Modal */}\r\n         {showFloorModal && (\r\n-          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n-              <div className=\"flex justify-between items-center mb-4\">\r\n-                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n+          <Modal title=\"Add New Floor\" onClose={closeModals}>\r\n+            <div className=\"space-y-4\">\r\n+              <div>\r\n+                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                  Floor Name\r\n+                </label>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={floorName}\r\n+                  onChange={(e) => setFloorName(e.target.value)}\r\n+                  placeholder=\"Enter floor name (e.g., Ground Floor)\"\r\n+                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                  onKeyDown={(e) => e.key === 'Enter' && addFloor()}\r\n+                  aria-label=\"Floor name\"\r\n+                />\r\n+              </div>\r\n+\r\n+              <div className=\"flex gap-3 pt-4\">\r\n                 <button\r\n                   onClick={closeModals}\r\n-                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                  className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                 >\r\n-                  <X size={24} />\r\n+                  Cancel\r\n                 </button>\r\n+                <button\r\n+                  onClick={addFloor}\r\n+                  disabled={!floorName.trim()}\r\n+                  className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                >\r\n+                  Add Floor\r\n+                </button>\r\n               </div>\r\n-              \r\n-              <div className=\"space-y-4\">\r\n-                <div>\r\n-                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n-                    Floor Name\r\n-                  </label>\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    value={floorName}\r\n-                    onChange={(e) => setFloorName(e.target.value)}\r\n-                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n-                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n-                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n-                  />\r\n-                </div>\r\n-                \r\n-                <div className=\"flex gap-3 pt-4\">\r\n-                  <button\r\n-                    onClick={closeModals}\r\n-                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n-                  >\r\n-                    Cancel\r\n-                  </button>\r\n-                  <button\r\n-                    onClick={addFloor}\r\n-                    disabled={!floorName.trim()}\r\n-                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n-                  >\r\n-                    Add Floor\r\n-                  </button>\r\n-                </div>\r\n-              </div>\r\n             </div>\r\n-          </div>\r\n+          </Modal>\r\n         )}\r\n \r\n-        {/* Room Modal */}\r\n+        {/* Add Room Modal */}\r\n         {showRoomModal && (\r\n-          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n-              <div className=\"flex justify-between items-center mb-4\">\r\n-                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n+          <Modal title=\"Add New Room\" onClose={closeModals}>\r\n+            <div className=\"space-y-4\">\r\n+              <div>\r\n+                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                  Room Name\r\n+                </label>\r\n+                <input\r\n+                  type=\"text\"\r\n+                  value={roomName}\r\n+                  onChange={(e) => setRoomName(e.target.value)}\r\n+                  placeholder=\"Enter room name (e.g., Room 101)\"\r\n+                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                  onKeyDown={(e) => e.key === 'Enter' && addRoom()}\r\n+                  aria-label=\"Room name\"\r\n+                />\r\n+              </div>\r\n+\r\n+              <div className=\"flex gap-3 pt-4\">\r\n\\ No newline at end of file\n                 <button\r\n                   onClick={closeModals}\r\n-                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                  className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                 >\r\n-                  <X size={24} />\r\n+                  Cancel\r\n                 </button>\r\n+                <button\r\n+                  onClick={addRoom}\r\n+                  disabled={!roomName.trim()}\r\n+                  className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                >\r\n+                  Add Room\r\n+                </button>\r\n               </div>\r\n-              \r\n-              <div className=\"space-y-4\">\r\n-                <div>\r\n-                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n-                    Room Name\r\n-                  </label>\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    value={roomName}\r\n-                    onChange={(e) => setRoomName(e.target.value)}\r\n-                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n-                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n-                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n-                  />\r\n-                </div>\r\n-                \r\n-                <div className=\"flex gap-3 pt-4\">\r\n-                  <button\r\n-                    onClick={closeModals}\r\n-                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n-                  >\r\n-                    Cancel\r\n-                  </button>\r\n-                  <button\r\n-                    onClick={addRoom}\r\n-                    disabled={!roomName.trim()}\r\n-                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n-                  >\r\n-                    Add Room\r\n-                  </button>\r\n-                </div>\r\n-              </div>\r\n             </div>\r\n-          </div>\r\n+          </Modal>\r\n         )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n-export default FloorRoomManager;\n+// 🔧 Reusable modal component\r\n+const Modal = ({ title, onClose, children }) => (\r\n+  <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+    <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+      <div className=\"flex justify-between items-center mb-4\">\r\n+        <h3 className=\"text-xl font-semibold text-gray-800\">{title}</h3>\r\n+        <button\r\n+          onClick={onClose}\r\n+          className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+          aria-label=\"Close modal\"\r\n+        >\r\n+          <X size={24} />\r\n+        </button>\r\n+      </div>\r\n+      {children}\r\n+    </div>\r\n+  </div>\r\n+);\r\n+\r\n+export default FloorRoomManager;\r\n"
                },
                {
                    "date": 1754395977024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from 'react';\r\n-import { X, Plus, Home, Users } from 'lucide-react';\r\n+import { X, Plus, Home, Users, Trash2 } from 'lucide-react';\r\n \r\n const FloorRoomManager = () => {\r\n   const [floors, setFloors] = useState([]);\r\n   const [showFloorModal, setShowFloorModal] = useState(false);\r\n@@ -15,9 +15,9 @@\n         id: Date.now(),\r\n         name: floorName.trim(),\r\n         rooms: []\r\n       };\r\n-      setFloors(prev => [...prev, newFloor]);\r\n+      setFloors([...floors, newFloor]);\r\n       setFloorName('');\r\n       setShowFloorModal(false);\r\n     }\r\n   };\r\n@@ -27,21 +27,31 @@\n       const newRoom = {\r\n         id: Date.now(),\r\n         name: roomName.trim()\r\n       };\r\n-      setFloors(prev =>\r\n-        prev.map(floor =>\r\n-          floor.id === selectedFloorId\r\n-            ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n-            : floor\r\n-        )\r\n-      );\r\n+      setFloors(floors.map(floor => \r\n+        floor.id === selectedFloorId \r\n+          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+          : floor\r\n+      ));\r\n       setRoomName('');\r\n       setShowRoomModal(false);\r\n       setSelectedFloorId(null);\r\n     }\r\n   };\r\n \r\n+  const deleteFloor = (floorId) => {\r\n+    setFloors(floors.filter(floor => floor.id !== floorId));\r\n+  };\r\n+\r\n+  const deleteRoom = (floorId, roomId) => {\r\n+    setFloors(floors.map(floor => \r\n+      floor.id === floorId \r\n+        ? { ...floor, rooms: floor.rooms.filter(room => room.id !== roomId) }\r\n+        : floor\r\n+    ));\r\n+  };\r\n+\r\n   const openRoomModal = (floorId) => {\r\n     setSelectedFloorId(floorId);\r\n     setShowRoomModal(true);\r\n   };\r\n@@ -56,9 +66,8 @@\n \r\n   return (\r\n     <div className=\"min-h-screen bg-gray-50 p-6\">\r\n       <div className=\"max-w-6xl mx-auto\">\r\n-        {/* Header */}\r\n         <div className=\"flex justify-between items-center mb-8\">\r\n           <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n           <button\r\n             onClick={() => setShowFloorModal(true)}\r\n@@ -68,23 +77,17 @@\n             Add Floor\r\n           </button>\r\n         </div>\r\n \r\n-        {/* Floors List */}\r\n         {floors.length === 0 ? (\r\n           <div className=\"text-center py-16\">\r\n             <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n-            <p className=\"text-gray-500 text-lg\">\r\n-              No floors added yet. Click \"Add Floor\" to get started!\r\n-            </p>\r\n+            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n           </div>\r\n         ) : (\r\n           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n             {floors.map(floor => (\r\n-              <div\r\n-                key={floor.id}\r\n-                className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\"\r\n-              >\r\n+              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n                 <div className=\"flex justify-between items-center mb-4\">\r\n                   <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n                     <Home size={20} className=\"text-blue-600\" />\r\n                     {floor.name}\r\n@@ -96,26 +99,21 @@\n                     <Plus size={16} />\r\n                     Add Room\r\n                   </button>\r\n                 </div>\r\n-\r\n+                \r\n                 <div className=\"space-y-2\">\r\n                   <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n                     <Users size={16} />\r\n-                    <span className=\"text-sm font-medium\">\r\n-                      Rooms ({floor.rooms.length})\r\n-                    </span>\r\n+                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n                   </div>\r\n-\r\n+                  \r\n                   {floor.rooms.length === 0 ? (\r\n                     <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n                   ) : (\r\n-                    <div className=\"space-y-2 max-h-40 overflow-y-auto pr-2\">\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n                       {floor.rooms.map(room => (\r\n-                        <div\r\n-                          key={room.id}\r\n-                          className=\"bg-gray-50 px-3 py-2 rounded-lg\"\r\n-                        >\r\n+                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n                           <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n@@ -125,104 +123,107 @@\n             ))}\r\n           </div>\r\n         )}\r\n \r\n-        {/* Add Floor Modal */}\r\n+        {/* Floor Modal */}\r\n         {showFloorModal && (\r\n-          <Modal title=\"Add New Floor\" onClose={closeModals}>\r\n-            <div className=\"space-y-4\">\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n-                  Floor Name\r\n-                </label>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  value={floorName}\r\n-                  onChange={(e) => setFloorName(e.target.value)}\r\n-                  placeholder=\"Enter floor name (e.g., Ground Floor)\"\r\n-                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n-                  onKeyDown={(e) => e.key === 'Enter' && addFloor()}\r\n-                  aria-label=\"Floor name\"\r\n-                />\r\n-              </div>\r\n-\r\n-              <div className=\"flex gap-3 pt-4\">\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n                 <button\r\n                   onClick={closeModals}\r\n-                  className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n                 >\r\n-                  Cancel\r\n+                  <X size={24} />\r\n                 </button>\r\n-                <button\r\n-                  onClick={addFloor}\r\n-                  disabled={!floorName.trim()}\r\n-                  className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n-                >\r\n-                  Add Floor\r\n-                </button>\r\n               </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Floor Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={floorName}\r\n+                    onChange={(e) => setFloorName(e.target.value)}\r\n+                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addFloor}\r\n+                    disabled={!floorName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Floor\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n             </div>\r\n-          </Modal>\r\n+          </div>\r\n         )}\r\n \r\n-        {/* Add Room Modal */}\r\n+        {/* Room Modal */}\r\n         {showRoomModal && (\r\n-          <Modal title=\"Add New Room\" onClose={closeModals}>\r\n-            <div className=\"space-y-4\">\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n-                  Room Name\r\n-                </label>\r\n-                <input\r\n-                  type=\"text\"\r\n-                  value={roomName}\r\n-                  onChange={(e) => setRoomName(e.target.value)}\r\n-                  placeholder=\"Enter room name (e.g., Room 101)\"\r\n-                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n-                  onKeyDown={(e) => e.key === 'Enter' && addRoom()}\r\n-                  aria-label=\"Room name\"\r\n-                />\r\n-              </div>\r\n-\r\n-              <div className=\"flex gap-3 pt-4\">\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n                 <button\r\n                   onClick={closeModals}\r\n-                  className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n                 >\r\n-                  Cancel\r\n+                  <X size={24} />\r\n                 </button>\r\n-                <button\r\n-                  onClick={addRoom}\r\n-                  disabled={!roomName.trim()}\r\n-                  className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n-                >\r\n-                  Add Room\r\n-                </button>\r\n               </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Room Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={roomName}\r\n+                    onChange={(e) => setRoomName(e.target.value)}\r\n+                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addRoom}\r\n+                    disabled={!roomName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n             </div>\r\n-          </Modal>\r\n+          </div>\r\n         )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n-// 🔧 Reusable modal component\r\n-const Modal = ({ title, onClose, children }) => (\r\n-  <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n-    <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n-      <div className=\"flex justify-between items-center mb-4\">\r\n-        <h3 className=\"text-xl font-semibold text-gray-800\">{title}</h3>\r\n-        <button\r\n-          onClick={onClose}\r\n-          className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n-          aria-label=\"Close modal\"\r\n-        >\r\n-          <X size={24} />\r\n-        </button>\r\n-      </div>\r\n-      {children}\r\n-    </div>\r\n-  </div>\r\n-);\r\n-\r\n-export default FloorRoomManager;\r\n+export default FloorRoomManager;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754396016616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useState } from 'react';\r\n+import { X, Plus, Home, Users, Trash2 } from 'lucide-react';\r\n+\r\n+const FloorRoomManager = () => {\r\n+  const [floors, setFloors] = useState([]);\r\n+  const [showFloorModal, setShowFloorModal] = useState(false);\r\n+  const [showRoomModal, setShowRoomModal] = useState(false);\r\n+  const [selectedFloorId, setSelectedFloorId] = useState(null);\r\n+  const [floorName, setFloorName] = useState('');\r\n+  const [roomName, setRoomName] = useState('');\r\n+\r\n+  const addFloor = () => {\r\n+    if (floorName.trim()) {\r\n+      const newFloor = {\r\n+        id: Date.now(),\r\n+        name: floorName.trim(),\r\n+        rooms: []\r\n+      };\r\n+      setFloors([...floors, newFloor]);\r\n+      setFloorName('');\r\n+      setShowFloorModal(false);\r\n+    }\r\n+  };\r\n+\r\n+  const addRoom = () => {\r\n+    if (roomName.trim() && selectedFloorId) {\r\n+      const newRoom = {\r\n+        id: Date.now(),\r\n+        name: roomName.trim()\r\n+      };\r\n+      setFloors(floors.map(floor => \r\n+        floor.id === selectedFloorId \r\n+          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+          : floor\r\n+      ));\r\n+      setRoomName('');\r\n+      setShowRoomModal(false);\r\n+      setSelectedFloorId(null);\r\n+    }\r\n+  };\r\n+\r\n+  const deleteFloor = (floorId) => {\r\n+    setFloors(floors.filter(floor => floor.id !== floorId));\r\n+  };\r\n+\r\n+  const deleteRoom = (floorId, roomId) => {\r\n+    setFloors(floors.map(floor => \r\n+      floor.id === floorId \r\n+        ? { ...floor, rooms: floor.rooms.filter(room => room.id !== roomId) }\r\n+        : floor\r\n+    ));\r\n+  };\r\n+\r\n+  const openRoomModal = (floorId) => {\r\n+    setSelectedFloorId(floorId);\r\n+    setShowRoomModal(true);\r\n+  };\r\n+\r\n+  const closeModals = () => {\r\n+    setShowFloorModal(false);\r\n+    setShowRoomModal(false);\r\n+    setFloorName('');\r\n+    setRoomName('');\r\n+    setSelectedFloorId(null);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n+      <div className=\"max-w-6x2 mx-auto\">\r\n+        <div className=\"flex justify-between items-center mb-8\">\r\n+          <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n+          <button\r\n+            onClick={() => setShowFloorModal(true)}\r\n+            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n+          >\r\n+            <Plus size={20} />\r\n+            Add Floor\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {floors.length === 0 ? (\r\n+          <div className=\"text-center py-16\">\r\n+            <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n+            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {floors.map(floor => (\r\n+              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n+                <div className=\"flex justify-between items-center mb-4\">\r\n+                  <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n+                    <Home size={20} className=\"text-blue-600\" />\r\n+                    {floor.name}\r\n+                  </h2>\r\n+                  <button\r\n+                    onClick={() => openRoomModal(floor.id)}\r\n+                    className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md flex items-center gap-1 transition-colors duration-200 text-sm\"\r\n+                  >\r\n+                    <Plus size={16} />\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+                \r\n+                <div className=\"space-y-2\">\r\n+                  <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n+                    <Users size={16} />\r\n+                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n+                  </div>\r\n+                  \r\n+                  {floor.rooms.length === 0 ? (\r\n+                    <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n+                  ) : (\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n+                      {floor.rooms.map(room => (\r\n+                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n+                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Floor Modal */}\r\n+        {showFloorModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Floor Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={floorName}\r\n+                    onChange={(e) => setFloorName(e.target.value)}\r\n+                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addFloor}\r\n+                    disabled={!floorName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Floor\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Room Modal */}\r\n+        {showRoomModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Room Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={roomName}\r\n+                    onChange={(e) => setRoomName(e.target.value)}\r\n+                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addRoom}\r\n+                    disabled={!roomName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FloorRoomManager;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754396026563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     setSelectedFloorId(null);\r\n   };\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n+    <div className=\" bg-gray-50 p-6\">\r\n       <div className=\"max-w-6x2 mx-auto\">\r\n         <div className=\"flex justify-between items-center mb-8\">\r\n           <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n           <button\r\n"
                },
                {
                    "date": 1754396033274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useState } from 'react';\r\n+import { X, Plus, Home, Users, Trash2 } from 'lucide-react';\r\n+\r\n+const FloorRoomManager = () => {\r\n+  const [floors, setFloors] = useState([]);\r\n+  const [showFloorModal, setShowFloorModal] = useState(false);\r\n+  const [showRoomModal, setShowRoomModal] = useState(false);\r\n+  const [selectedFloorId, setSelectedFloorId] = useState(null);\r\n+  const [floorName, setFloorName] = useState('');\r\n+  const [roomName, setRoomName] = useState('');\r\n+\r\n+  const addFloor = () => {\r\n+    if (floorName.trim()) {\r\n+      const newFloor = {\r\n+        id: Date.now(),\r\n+        name: floorName.trim(),\r\n+        rooms: []\r\n+      };\r\n+      setFloors([...floors, newFloor]);\r\n+      setFloorName('');\r\n+      setShowFloorModal(false);\r\n+    }\r\n+  };\r\n+\r\n+  const addRoom = () => {\r\n+    if (roomName.trim() && selectedFloorId) {\r\n+      const newRoom = {\r\n+        id: Date.now(),\r\n+        name: roomName.trim()\r\n+      };\r\n+      setFloors(floors.map(floor => \r\n+        floor.id === selectedFloorId \r\n+          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+          : floor\r\n+      ));\r\n+      setRoomName('');\r\n+      setShowRoomModal(false);\r\n+      setSelectedFloorId(null);\r\n+    }\r\n+  };\r\n+\r\n+  const deleteFloor = (floorId) => {\r\n+    setFloors(floors.filter(floor => floor.id !== floorId));\r\n+  };\r\n+\r\n+  const deleteRoom = (floorId, roomId) => {\r\n+    setFloors(floors.map(floor => \r\n+      floor.id === floorId \r\n+        ? { ...floor, rooms: floor.rooms.filter(room => room.id !== roomId) }\r\n+        : floor\r\n+    ));\r\n+  };\r\n+\r\n+  const openRoomModal = (floorId) => {\r\n+    setSelectedFloorId(floorId);\r\n+    setShowRoomModal(true);\r\n+  };\r\n+\r\n+  const closeModals = () => {\r\n+    setShowFloorModal(false);\r\n+    setShowRoomModal(false);\r\n+    setFloorName('');\r\n+    setRoomName('');\r\n+    setSelectedFloorId(null);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n+      <div className=\"max-w-6x2 mx-auto\">\r\n+        <div className=\"flex justify-between items-center mb-8\">\r\n+          <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n+          <button\r\n+            onClick={() => setShowFloorModal(true)}\r\n+            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n+          >\r\n+            <Plus size={20} />\r\n+            Add Floor\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {floors.length === 0 ? (\r\n+          <div className=\"text-center py-16\">\r\n+            <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n+            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {floors.map(floor => (\r\n+              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n+                <div className=\"flex justify-between items-center mb-4\">\r\n+                  <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n+                    <Home size={20} className=\"text-blue-600\" />\r\n+                    {floor.name}\r\n+                  </h2>\r\n+                  <button\r\n+                    onClick={() => openRoomModal(floor.id)}\r\n+                    className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md flex items-center gap-1 transition-colors duration-200 text-sm\"\r\n+                  >\r\n+                    <Plus size={16} />\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+                \r\n+                <div className=\"space-y-2\">\r\n+                  <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n+                    <Users size={16} />\r\n+                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n+                  </div>\r\n+                  \r\n+                  {floor.rooms.length === 0 ? (\r\n+                    <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n+                  ) : (\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n+                      {floor.rooms.map(room => (\r\n+                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n+                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Floor Modal */}\r\n+        {showFloorModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Floor Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={floorName}\r\n+                    onChange={(e) => setFloorName(e.target.value)}\r\n+                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addFloor}\r\n+                    disabled={!floorName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Floor\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Room Modal */}\r\n+        {showRoomModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Room Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={roomName}\r\n+                    onChange={(e) => setRoomName(e.target.value)}\r\n+                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addRoom}\r\n+                    disabled={!roomName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FloorRoomManager;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754396061195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useState } from 'react';\r\n+import { X, Plus, Home, Users, Trash2 } from 'lucide-react';\r\n+\r\n+const FloorRoomManager = () => {\r\n+  const [floors, setFloors] = useState([]);\r\n+  const [showFloorModal, setShowFloorModal] = useState(false);\r\n+  const [showRoomModal, setShowRoomModal] = useState(false);\r\n+  const [selectedFloorId, setSelectedFloorId] = useState(null);\r\n+  const [floorName, setFloorName] = useState('');\r\n+  const [roomName, setRoomName] = useState('');\r\n+\r\n+  const addFloor = () => {\r\n+    if (floorName.trim()) {\r\n+      const newFloor = {\r\n+        id: Date.now(),\r\n+        name: floorName.trim(),\r\n+        rooms: []\r\n+      };\r\n+      setFloors([...floors, newFloor]);\r\n+      setFloorName('');\r\n+      setShowFloorModal(false);\r\n+    }\r\n+  };\r\n+\r\n+  const addRoom = () => {\r\n+    if (roomName.trim() && selectedFloorId) {\r\n+      const newRoom = {\r\n+        id: Date.now(),\r\n+        name: roomName.trim()\r\n+      };\r\n+      setFloors(floors.map(floor => \r\n+        floor.id === selectedFloorId \r\n+          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+          : floor\r\n+      ));\r\n+      setRoomName('');\r\n+      setShowRoomModal(false);\r\n+      setSelectedFloorId(null);\r\n+    }\r\n+  };\r\n+\r\n+  const deleteFloor = (floorId) => {\r\n+    setFloors(floors.filter(floor => floor.id !== floorId));\r\n+  };\r\n+\r\n+  const deleteRoom = (floorId, roomId) => {\r\n+    setFloors(floors.map(floor => \r\n+      floor.id === floorId \r\n+        ? { ...floor, rooms: floor.rooms.filter(room => room.id !== roomId) }\r\n+        : floor\r\n+    ));\r\n+  };\r\n+\r\n+  const openRoomModal = (floorId) => {\r\n+    setSelectedFloorId(floorId);\r\n+    setShowRoomModal(true);\r\n+  };\r\n+\r\n+  const closeModals = () => {\r\n+    setShowFloorModal(false);\r\n+    setShowRoomModal(false);\r\n+    setFloorName('');\r\n+    setRoomName('');\r\n+    setSelectedFloorId(null);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n+      <div className=\"max-w-6xl mx-auto\">\r\n+        <div className=\"flex justify-between items-center mb-8\">\r\n+          <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n+          <button\r\n+            onClick={() => setShowFloorModal(true)}\r\n+            className=\"bg-#005e0e hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n+          >\r\n+            <Plus size={20} />\r\n+            Add Floor\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {floors.length === 0 ? (\r\n+          <div className=\"text-center py-16\">\r\n+            <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n+            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {floors.map(floor => (\r\n+              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n+                <div className=\"flex justify-between items-center mb-4\">\r\n+                  <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n+                    <Home size={20} className=\"text-blue-600\" />\r\n+                    {floor.name}\r\n+                  </h2>\r\n+                  <button\r\n+                    onClick={() => openRoomModal(floor.id)}\r\n+                    className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md flex items-center gap-1 transition-colors duration-200 text-sm\"\r\n+                  >\r\n+                    <Plus size={16} />\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+                \r\n+                <div className=\"space-y-2\">\r\n+                  <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n+                    <Users size={16} />\r\n+                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n+                  </div>\r\n+                  \r\n+                  {floor.rooms.length === 0 ? (\r\n+                    <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n+                  ) : (\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n+                      {floor.rooms.map(room => (\r\n+                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n+                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Floor Modal */}\r\n+        {showFloorModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Floor Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={floorName}\r\n+                    onChange={(e) => setFloorName(e.target.value)}\r\n+                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addFloor}\r\n+                    disabled={!floorName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Floor\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Room Modal */}\r\n+        {showRoomModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Room Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={roomName}\r\n+                    onChange={(e) => setRoomName(e.target.value)}\r\n+                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addRoom}\r\n+                    disabled={!roomName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FloorRoomManager;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754396068180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         <div className=\"flex justify-between items-center mb-8\">\r\n           <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n           <button\r\n             onClick={() => setShowFloorModal(true)}\r\n-            className=\"bg-[#005e0e hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n+            className=\"bg-[#005e0e] hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n           >\r\n             <Plus size={20} />\r\n             Add Floor\r\n           </button>\r\n"
                },
                {
                    "date": 1754396085718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useState } from 'react';\r\n+import { X, Plus, Home, Users, Trash2 } from 'lucide-react';\r\n+\r\n+const FloorRoomManager = () => {\r\n+  const [floors, setFloors] = useState([]);\r\n+  const [showFloorModal, setShowFloorModal] = useState(false);\r\n+  const [showRoomModal, setShowRoomModal] = useState(false);\r\n+  const [selectedFloorId, setSelectedFloorId] = useState(null);\r\n+  const [floorName, setFloorName] = useState('');\r\n+  const [roomName, setRoomName] = useState('');\r\n+\r\n+  const addFloor = () => {\r\n+    if (floorName.trim()) {\r\n+      const newFloor = {\r\n+        id: Date.now(),\r\n+        name: floorName.trim(),\r\n+        rooms: []\r\n+      };\r\n+      setFloors([...floors, newFloor]);\r\n+      setFloorName('');\r\n+      setShowFloorModal(false);\r\n+    }\r\n+  };\r\n+\r\n+  const addRoom = () => {\r\n+    if (roomName.trim() && selectedFloorId) {\r\n+      const newRoom = {\r\n+        id: Date.now(),\r\n+        name: roomName.trim()\r\n+      };\r\n+      setFloors(floors.map(floor => \r\n+        floor.id === selectedFloorId \r\n+          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n+          : floor\r\n+      ));\r\n+      setRoomName('');\r\n+      setShowRoomModal(false);\r\n+      setSelectedFloorId(null);\r\n+    }\r\n+  };\r\n+\r\n+  const deleteFloor = (floorId) => {\r\n+    setFloors(floors.filter(floor => floor.id !== floorId));\r\n+  };\r\n+\r\n+  const deleteRoom = (floorId, roomId) => {\r\n+    setFloors(floors.map(floor => \r\n+      floor.id === floorId \r\n+        ? { ...floor, rooms: floor.rooms.filter(room => room.id !== roomId) }\r\n+        : floor\r\n+    ));\r\n+  };\r\n+\r\n+  const openRoomModal = (floorId) => {\r\n+    setSelectedFloorId(floorId);\r\n+    setShowRoomModal(true);\r\n+  };\r\n+\r\n+  const closeModals = () => {\r\n+    setShowFloorModal(false);\r\n+    setShowRoomModal(false);\r\n+    setFloorName('');\r\n+    setRoomName('');\r\n+    setSelectedFloorId(null);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n+      <div className=\"max-w-6xl mx-auto\">\r\n+        <div className=\"flex justify-between items-center mb-8\">\r\n+          <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n+          <button\r\n+            onClick={() => setShowFloorModal(true)}\r\n+            className=\"bg-[#005e0e] hover:bg-#023609 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n+          >\r\n+            <Plus size={20} />\r\n+            Add Floor\r\n+          </button>\r\n+        </div>\r\n+\r\n+        {floors.length === 0 ? (\r\n+          <div className=\"text-center py-16\">\r\n+            <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n+            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {floors.map(floor => (\r\n+              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n+                <div className=\"flex justify-between items-center mb-4\">\r\n+                  <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n+                    <Home size={20} className=\"text-blue-600\" />\r\n+                    {floor.name}\r\n+                  </h2>\r\n+                  <button\r\n+                    onClick={() => openRoomModal(floor.id)}\r\n+                    className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md flex items-center gap-1 transition-colors duration-200 text-sm\"\r\n+                  >\r\n+                    <Plus size={16} />\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+                \r\n+                <div className=\"space-y-2\">\r\n+                  <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n+                    <Users size={16} />\r\n+                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n+                  </div>\r\n+                  \r\n+                  {floor.rooms.length === 0 ? (\r\n+                    <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n+                  ) : (\r\n+                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n+                      {floor.rooms.map(room => (\r\n+                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n+                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Floor Modal */}\r\n+        {showFloorModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Floor Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={floorName}\r\n+                    onChange={(e) => setFloorName(e.target.value)}\r\n+                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addFloor}\r\n+                    disabled={!floorName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Floor\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Room Modal */}\r\n+        {showRoomModal && (\r\n+          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n+              <div className=\"flex justify-between items-center mb-4\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n+                <button\r\n+                  onClick={closeModals}\r\n+                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n+                >\r\n+                  <X size={24} />\r\n+                </button>\r\n+              </div>\r\n+              \r\n+              <div className=\"space-y-4\">\r\n+                <div>\r\n+                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n+                    Room Name\r\n+                  </label>\r\n+                  <input\r\n+                    type=\"text\"\r\n+                    value={roomName}\r\n+                    onChange={(e) => setRoomName(e.target.value)}\r\n+                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n+                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n+                  />\r\n+                </div>\r\n+                \r\n+                <div className=\"flex gap-3 pt-4\">\r\n+                  <button\r\n+                    onClick={closeModals}\r\n+                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={addRoom}\r\n+                    disabled={!roomName.trim()}\r\n+                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n+                  >\r\n+                    Add Room\r\n+                  </button>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FloorRoomManager;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1754395632722,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { X, Plus, Home, Users } from 'lucide-react';\r\n\r\nconst FloorRoomManager = () => {\r\n  const [floors, setFloors] = useState([]);\r\n  const [showFloorModal, setShowFloorModal] = useState(false);\r\n  const [showRoomModal, setShowRoomModal] = useState(false);\r\n  const [selectedFloorId, setSelectedFloorId] = useState(null);\r\n  const [floorName, setFloorName] = useState('');\r\n  const [roomName, setRoomName] = useState('');\r\n\r\n  const addFloor = () => {\r\n    if (floorName.trim()) {\r\n      const newFloor = {\r\n        id: Date.now(),\r\n        name: floorName.trim(),\r\n        rooms: []\r\n      };\r\n      setFloors([...floors, newFloor]);\r\n      setFloorName('');\r\n      setShowFloorModal(false);\r\n    }\r\n  };\r\n\r\n  const addRoom = () => {\r\n    if (roomName.trim() && selectedFloorId) {\r\n      const newRoom = {\r\n        id: Date.now(),\r\n        name: roomName.trim()\r\n      };\r\n      setFloors(floors.map(floor => \r\n        floor.id === selectedFloorId \r\n          ? { ...floor, rooms: [...floor.rooms, newRoom] }\r\n          : floor\r\n      ));\r\n      setRoomName('');\r\n      setShowRoomModal(false);\r\n      setSelectedFloorId(null);\r\n    }\r\n  };\r\n\r\n  const openRoomModal = (floorId) => {\r\n    setSelectedFloorId(floorId);\r\n    setShowRoomModal(true);\r\n  };\r\n\r\n  const closeModals = () => {\r\n    setShowFloorModal(false);\r\n    setShowRoomModal(false);\r\n    setFloorName('');\r\n    setRoomName('');\r\n    setSelectedFloorId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">Building Management</h1>\r\n          <button\r\n            onClick={() => setShowFloorModal(true)}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors duration-200 shadow-md\"\r\n          >\r\n            <Plus size={20} />\r\n            Add Floor\r\n          </button>\r\n        </div>\r\n\r\n        {floors.length === 0 ? (\r\n          <div className=\"text-center py-16\">\r\n            <Home size={64} className=\"mx-auto text-gray-400 mb-4\" />\r\n            <p className=\"text-gray-500 text-lg\">No floors added yet. Click \"Add Floor\" to get started!</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {floors.map(floor => (\r\n              <div key={floor.id} className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n                    <Home size={20} className=\"text-blue-600\" />\r\n                    {floor.name}\r\n                  </h2>\r\n                  <button\r\n                    onClick={() => openRoomModal(floor.id)}\r\n                    className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-md flex items-center gap-1 transition-colors duration-200 text-sm\"\r\n                  >\r\n                    <Plus size={16} />\r\n                    Add Room\r\n                  </button>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center gap-2 text-gray-600 mb-3\">\r\n                    <Users size={16} />\r\n                    <span className=\"text-sm font-medium\">Rooms ({floor.rooms.length})</span>\r\n                  </div>\r\n                  \r\n                  {floor.rooms.length === 0 ? (\r\n                    <p className=\"text-gray-400 text-sm italic\">No rooms added yet</p>\r\n                  ) : (\r\n                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n                      {floor.rooms.map(room => (\r\n                        <div key={room.id} className=\"bg-gray-50 px-3 py-2 rounded-lg\">\r\n                          <span className=\"text-gray-700 text-sm\">{room.name}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Floor Modal */}\r\n        {showFloorModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Floor</h3>\r\n                <button\r\n                  onClick={closeModals}\r\n                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n                >\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Floor Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={floorName}\r\n                    onChange={(e) => setFloorName(e.target.value)}\r\n                    placeholder=\"Enter floor name (e.g., Ground Floor, First Floor)\"\r\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n                    onKeyPress={(e) => e.key === 'Enter' && addFloor()}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"flex gap-3 pt-4\">\r\n                  <button\r\n                    onClick={closeModals}\r\n                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    onClick={addFloor}\r\n                    disabled={!floorName.trim()}\r\n                    className=\"flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    Add Floor\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Room Modal */}\r\n        {showRoomModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-xl p-6 w-full max-w-md mx-4 shadow-2xl\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-xl font-semibold text-gray-800\">Add New Room</h3>\r\n                <button\r\n                  onClick={closeModals}\r\n                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n                >\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Room Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={roomName}\r\n                    onChange={(e) => setRoomName(e.target.value)}\r\n                    placeholder=\"Enter room name (e.g., Living Room, Bedroom)\"\r\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent outline-none transition-all\"\r\n                    onKeyPress={(e) => e.key === 'Enter' && addRoom()}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"flex gap-3 pt-4\">\r\n                  <button\r\n                    onClick={closeModals}\r\n                    className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    onClick={addRoom}\r\n                    disabled={!roomName.trim()}\r\n                    className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    Add Room\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloorRoomManager;"
        }
    ]
}